Genetic Sudoku Experiment
Experiment Time: 08/11/2017 13:59:05
Experiment Parameters:,
Original Empty Cells:,52,
Population Size:,100,
Max Generations:,100,
Crossover Probability:,0.7,
Mutation Probability:,0.3,
Percent of good individuals from population:,0.4,
,
Primitive Set:,
Plus,Minus,Multi,div,Mod,Maximum,Minimum,
Terminal Set:,
countEmptyCellInRow,countEmptyCellInCol,countEmptyCellInSquare,numOfOptionsInCell,numOfOptionsToAppearInBoard,countEmptyCellsInRowsContainsNum,countEmptyCellsInColsContainsNum,countEmptyCellsInSquareContainsNum,countEmptyCellsInRows_ThatNotContainsNum,countEmptyCellsInCols_ThatNotContainsNum,countEmptyCellsInSquare_ThatNotContainsNum,
,
,
Generation,Worst Individual Fitness,Best Individual Fitness,Average Fitness,Best Individual Tree - Prefix,Best Individual Tree - Infix,
0,19.0,2.0,11.25,Plus( Mod( Minimum( Maximum( Minus( countEmptyCellsInSquareContainsNum  numOfOptionsToAppearInBoard )  Minus( countEmptyCellsInSquareContainsNum  countEmptyCellsInColsContainsNum ) )  Multi( Multi( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInSquareContainsNum )  div( countEmptyCellInSquare  countEmptyCellInRow ) ) )  Minus( Plus( Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInCol )  div( countEmptyCellsInSquareContainsNum  countEmptyCellsInSquareContainsNum ) )  Mod( div( countEmptyCellInRow  countEmptyCellInRow )  Maximum( numOfOptionsToAppearInBoard  countEmptyCellsInColsContainsNum ) ) ) )  Plus( Multi( Maximum( Multi( countEmptyCellsInColsContainsNum  countEmptyCellsInSquareContainsNum )  Plus( countEmptyCellsInSquare_ThatNotContainsNum  numOfOptionsToAppearInBoard ) )  Plus( Minimum( numOfOptionsInCell  countEmptyCellInCol )  Mod( countEmptyCellsInRowsContainsNum  numOfOptionsToAppearInBoard ) ) )  Multi( Plus( Mod( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRowsContainsNum )  Mod( countEmptyCellsInColsContainsNum  countEmptyCellsInRowsContainsNum ) )  Minimum( Plus( numOfOptionsToAppearInBoard  numOfOptionsToAppearInBoard )  Mod( numOfOptionsToAppearInBoard  countEmptyCellsInSquareContainsNum ) ) ) ) ),((((( countEmptyCellsInSquareContainsNum  -  numOfOptionsToAppearInBoard ) Max ( countEmptyCellsInSquareContainsNum  -  countEmptyCellsInColsContainsNum )) Min (( countEmptyCellsInCols_ThatNotContainsNum  *  countEmptyCellsInSquareContainsNum ) * ( countEmptyCellInSquare  /  countEmptyCellInRow ))) % ((( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellInCol ) + ( countEmptyCellsInSquareContainsNum  /  countEmptyCellsInSquareContainsNum )) - (( countEmptyCellInRow  /  countEmptyCellInRow ) % ( numOfOptionsToAppearInBoard  Max  countEmptyCellsInColsContainsNum )))) + (((( countEmptyCellsInColsContainsNum  *  countEmptyCellsInSquareContainsNum ) Max ( countEmptyCellsInSquare_ThatNotContainsNum  +  numOfOptionsToAppearInBoard )) * (( numOfOptionsInCell  Min  countEmptyCellInCol ) + ( countEmptyCellsInRowsContainsNum  %  numOfOptionsToAppearInBoard ))) + ((( countEmptyCellsInSquare_ThatNotContainsNum  %  countEmptyCellsInRowsContainsNum ) + ( countEmptyCellsInColsContainsNum  %  countEmptyCellsInRowsContainsNum )) * (( numOfOptionsToAppearInBoard  +  numOfOptionsToAppearInBoard ) Min ( numOfOptionsToAppearInBoard  %  countEmptyCellsInSquareContainsNum ))))),
1,19.0,3.0,11.04,Plus( Minus( Mod( Multi( div( countEmptyCellsInColsContainsNum  countEmptyCellsInCols_ThatNotContainsNum )  Maximum( countEmptyCellsInColsContainsNum  countEmptyCellsInRowsContainsNum ) )  Minimum( Minimum( countEmptyCellsInSquareContainsNum  countEmptyCellsInSquare_ThatNotContainsNum )  div( countEmptyCellsInColsContainsNum  countEmptyCellsInRowsContainsNum ) ) )  Plus( Minimum( Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInSquare )  Minus( numOfOptionsToAppearInBoard  countEmptyCellInRow ) )  Plus( Minus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellInRow )  Mod( countEmptyCellInRow  countEmptyCellsInRows_ThatNotContainsNum ) ) ) )  Plus( Maximum( Multi( Minimum( numOfOptionsInCell  countEmptyCellInCol )  Maximum( numOfOptionsToAppearInBoard  countEmptyCellsInCols_ThatNotContainsNum ) )  Mod( Minus( countEmptyCellsInSquareContainsNum  countEmptyCellInRow )  Mod( countEmptyCellsInRowsContainsNum  countEmptyCellsInRowsContainsNum ) ) )  Multi( Plus( Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInSquare )  Mod( numOfOptionsInCell  countEmptyCellInCol ) )  Multi( Minus( countEmptyCellsInColsContainsNum  numOfOptionsInCell )  Mod( numOfOptionsToAppearInBoard  numOfOptionsInCell ) ) ) ) ),((((( countEmptyCellsInColsContainsNum  /  countEmptyCellsInCols_ThatNotContainsNum ) * ( countEmptyCellsInColsContainsNum  Max  countEmptyCellsInRowsContainsNum )) % (( countEmptyCellsInSquareContainsNum  Min  countEmptyCellsInSquare_ThatNotContainsNum ) Min ( countEmptyCellsInColsContainsNum  /  countEmptyCellsInRowsContainsNum ))) - ((( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellInSquare ) Min ( numOfOptionsToAppearInBoard  -  countEmptyCellInRow )) + (( countEmptyCellsInCols_ThatNotContainsNum  -  countEmptyCellInRow ) + ( countEmptyCellInRow  %  countEmptyCellsInRows_ThatNotContainsNum )))) + (((( numOfOptionsInCell  Min  countEmptyCellInCol ) * ( numOfOptionsToAppearInBoard  Max  countEmptyCellsInCols_ThatNotContainsNum )) Max (( countEmptyCellsInSquareContainsNum  -  countEmptyCellInRow ) % ( countEmptyCellsInRowsContainsNum  %  countEmptyCellsInRowsContainsNum ))) + ((( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellInSquare ) + ( numOfOptionsInCell  %  countEmptyCellInCol )) * (( countEmptyCellsInColsContainsNum  -  numOfOptionsInCell ) * ( numOfOptionsToAppearInBoard  %  numOfOptionsInCell ))))),
2,19.0,4.0,10.95,Multi( Plus( Multi( Multi( Multi( countEmptyCellsInCols_ThatNotContainsNum  numOfOptionsInCell )  Plus( countEmptyCellsInCols_ThatNotContainsNum  numOfOptionsInCell ) )  Minus( Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum )  Minus( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) ) )  div( Maximum( Mod( countEmptyCellInCol  countEmptyCellsInCols_ThatNotContainsNum )  Mod( countEmptyCellsInSquareContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) )  Plus( Plus( countEmptyCellInSquare  countEmptyCellsInSquare_ThatNotContainsNum )  Multi( countEmptyCellsInSquareContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) ) ) )  Minus( Minus( Multi( Mod( countEmptyCellsInSquare_ThatNotContainsNum  numOfOptionsInCell )  Minus( countEmptyCellInCol  countEmptyCellInCol ) )  Minus( Minus( numOfOptionsInCell  countEmptyCellsInSquareContainsNum )  Multi( countEmptyCellInCol  countEmptyCellsInRowsContainsNum ) ) )  Mod( Maximum( Mod( countEmptyCellsInColsContainsNum  countEmptyCellInCol )  div( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInColsContainsNum ) )  Maximum( Mod( countEmptyCellInCol  numOfOptionsInCell )  Plus( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) ) ) ) ),((((( countEmptyCellsInCols_ThatNotContainsNum  *  numOfOptionsInCell ) * ( countEmptyCellsInCols_ThatNotContainsNum  +  numOfOptionsInCell )) * (( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellsInCols_ThatNotContainsNum ) - ( countEmptyCellsInSquare_ThatNotContainsNum  -  countEmptyCellsInCols_ThatNotContainsNum ))) + ((( countEmptyCellInCol  %  countEmptyCellsInCols_ThatNotContainsNum ) Max ( countEmptyCellsInSquareContainsNum  %  countEmptyCellsInCols_ThatNotContainsNum )) / (( countEmptyCellInSquare  +  countEmptyCellsInSquare_ThatNotContainsNum ) + ( countEmptyCellsInSquareContainsNum  *  countEmptyCellsInRows_ThatNotContainsNum )))) * (((( countEmptyCellsInSquare_ThatNotContainsNum  %  numOfOptionsInCell ) * ( countEmptyCellInCol  -  countEmptyCellInCol )) - (( numOfOptionsInCell  -  countEmptyCellsInSquareContainsNum ) - ( countEmptyCellInCol  *  countEmptyCellsInRowsContainsNum ))) - ((( countEmptyCellsInColsContainsNum  %  countEmptyCellInCol ) Max ( countEmptyCellsInRows_ThatNotContainsNum  /  countEmptyCellsInColsContainsNum )) % (( countEmptyCellInCol  %  numOfOptionsInCell ) Max ( countEmptyCellsInSquare_ThatNotContainsNum  +  countEmptyCellsInCols_ThatNotContainsNum ))))),
3,19.0,2.0,11.36,Plus( div( Mod( Plus( div( countEmptyCellsInSquareContainsNum  countEmptyCellsInRowsContainsNum )  div( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInColsContainsNum ) )  div( Maximum( numOfOptionsToAppearInBoard  countEmptyCellsInRows_ThatNotContainsNum )  Minimum( numOfOptionsInCell  numOfOptionsInCell ) ) )  Plus( Minus( Mod( countEmptyCellsInRowsContainsNum  countEmptyCellsInRows_ThatNotContainsNum )  Minus( countEmptyCellInCol  countEmptyCellsInSquare_ThatNotContainsNum ) )  Minus( Plus( countEmptyCellsInColsContainsNum  countEmptyCellsInSquare_ThatNotContainsNum )  Minus( countEmptyCellInCol  countEmptyCellInSquare ) ) ) )  Mod( Plus( div( Multi( countEmptyCellsInSquareContainsNum  numOfOptionsInCell )  Minimum( countEmptyCellsInColsContainsNum  countEmptyCellsInColsContainsNum ) )  Maximum( Minimum( numOfOptionsInCell  numOfOptionsInCell )  Minimum( numOfOptionsInCell  countEmptyCellInRow ) ) )  Plus( Minimum( Plus( countEmptyCellInRow  countEmptyCellInRow )  Multi( countEmptyCellInCol  countEmptyCellInCol ) )  Plus( Multi( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInColsContainsNum )  Mod( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInSquare_ThatNotContainsNum ) ) ) ) ),((((( countEmptyCellsInSquareContainsNum  /  countEmptyCellsInRowsContainsNum ) + ( countEmptyCellsInRows_ThatNotContainsNum  /  countEmptyCellsInColsContainsNum )) % (( numOfOptionsToAppearInBoard  Max  countEmptyCellsInRows_ThatNotContainsNum ) / ( numOfOptionsInCell  Min  numOfOptionsInCell ))) / ((( countEmptyCellsInRowsContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum ) - ( countEmptyCellInCol  -  countEmptyCellsInSquare_ThatNotContainsNum )) + (( countEmptyCellsInColsContainsNum  +  countEmptyCellsInSquare_ThatNotContainsNum ) - ( countEmptyCellInCol  -  countEmptyCellInSquare )))) + (((( countEmptyCellsInSquareContainsNum  *  numOfOptionsInCell ) / ( countEmptyCellsInColsContainsNum  Min  countEmptyCellsInColsContainsNum )) + (( numOfOptionsInCell  Min  numOfOptionsInCell ) Max ( numOfOptionsInCell  Min  countEmptyCellInRow ))) % ((( countEmptyCellInRow  +  countEmptyCellInRow ) Min ( countEmptyCellInCol  *  countEmptyCellInCol )) + (( countEmptyCellsInRows_ThatNotContainsNum  *  countEmptyCellsInColsContainsNum ) + ( countEmptyCellsInSquare_ThatNotContainsNum  %  countEmptyCellsInSquare_ThatNotContainsNum ))))),
