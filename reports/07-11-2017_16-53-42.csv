Genetic Sudoku Experiment
Experiment Time: 07/11/2017 16:53:42
Experiment Parameters:,
Original Empty Cells:,53,
Population Size:,100,
Max Generations:,100,
Crossover Probability:,0.7,
Mutation Probability:,0.3,
Percent of good individuals from population:,0.4,
,
Primitive Set:,
Plus,Minus,Multi,div,Mod,Maximum,Minimum,
Terminal Set:,
countEmptyCellInRow,countEmptyCellInCol,countEmptyCellInSquare,numOfOptionsInCell,numOfOptionsToAppearInBoard,countEmptyCellsInRowsContainsNum,countEmptyCellsInColsContainsNum,countEmptyCellsInSquareContainsNum,countEmptyCellsInRows_ThatNotContainsNum,countEmptyCellsInCols_ThatNotContainsNum,countEmptyCellsInSquare_ThatNotContainsNum,
,
,
Generation,Worst Individual Fitness,Best Individual Fitness,Average Fitness,Best Individual Tree - Prefix,Best Individual Tree - Infix,
0,19.0,2.0,10.49,Maximum( Plus( Plus( div( Minimum( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum )  Maximum( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellInSquare ) )  Minus( div( countEmptyCellsInColsContainsNum  countEmptyCellsInRows_ThatNotContainsNum )  Minimum( countEmptyCellInCol  countEmptyCellsInCols_ThatNotContainsNum ) ) )  div( Multi( Mod( numOfOptionsInCell  countEmptyCellsInRows_ThatNotContainsNum )  Mod( countEmptyCellsInSquareContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  Plus( Multi( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInSquare )  Minimum( numOfOptionsToAppearInBoard  countEmptyCellsInSquareContainsNum ) ) ) )  Mod( Minus( Minimum( Minimum( numOfOptionsInCell  countEmptyCellInSquare )  Multi( countEmptyCellsInRowsContainsNum  countEmptyCellsInColsContainsNum ) )  Minimum( Mod( countEmptyCellInCol  numOfOptionsToAppearInBoard )  Minus( countEmptyCellInSquare  countEmptyCellsInRowsContainsNum ) ) )  Minimum( Maximum( Maximum( countEmptyCellsInColsContainsNum  countEmptyCellsInSquare_ThatNotContainsNum )  Minus( countEmptyCellInCol  countEmptyCellsInSquare_ThatNotContainsNum ) )  Maximum( Minimum( countEmptyCellsInSquareContainsNum  countEmptyCellInCol )  Plus( countEmptyCellInRow  countEmptyCellInRow ) ) ) ) ),((((( countEmptyCellsInSquare_ThatNotContainsNum  Min  countEmptyCellsInRows_ThatNotContainsNum ) / ( countEmptyCellsInSquare_ThatNotContainsNum  Max  countEmptyCellInSquare )) + (( countEmptyCellsInColsContainsNum  /  countEmptyCellsInRows_ThatNotContainsNum ) - ( countEmptyCellInCol  Min  countEmptyCellsInCols_ThatNotContainsNum ))) + ((( numOfOptionsInCell  %  countEmptyCellsInRows_ThatNotContainsNum ) * ( countEmptyCellsInSquareContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum )) / (( countEmptyCellsInRows_ThatNotContainsNum  *  countEmptyCellInSquare ) + ( numOfOptionsToAppearInBoard  Min  countEmptyCellsInSquareContainsNum )))) Max (((( numOfOptionsInCell  Min  countEmptyCellInSquare ) Min ( countEmptyCellsInRowsContainsNum  *  countEmptyCellsInColsContainsNum )) - (( countEmptyCellInCol  %  numOfOptionsToAppearInBoard ) Min ( countEmptyCellInSquare  -  countEmptyCellsInRowsContainsNum ))) % ((( countEmptyCellsInColsContainsNum  Max  countEmptyCellsInSquare_ThatNotContainsNum ) Max ( countEmptyCellInCol  -  countEmptyCellsInSquare_ThatNotContainsNum )) Min (( countEmptyCellsInSquareContainsNum  Min  countEmptyCellInCol ) Max ( countEmptyCellInRow  +  countEmptyCellInRow ))))),
1,19.0,2.0,10.08,Maximum( Plus( Plus( div( Minimum( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum )  Maximum( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellInSquare ) )  Minus( div( countEmptyCellsInColsContainsNum  countEmptyCellsInRows_ThatNotContainsNum )  Minimum( countEmptyCellInCol  countEmptyCellsInCols_ThatNotContainsNum ) ) )  div( Multi( Mod( numOfOptionsInCell  countEmptyCellsInRows_ThatNotContainsNum )  Mod( countEmptyCellsInSquareContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  Plus( Multi( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInSquare )  Minimum( numOfOptionsToAppearInBoard  countEmptyCellsInSquareContainsNum ) ) ) )  Mod( Minus( Minimum( Minimum( numOfOptionsInCell  countEmptyCellInSquare )  Multi( countEmptyCellsInRowsContainsNum  countEmptyCellsInColsContainsNum ) )  Minimum( Mod( countEmptyCellInCol  numOfOptionsToAppearInBoard )  Minus( countEmptyCellInSquare  countEmptyCellsInRowsContainsNum ) ) )  Minimum( Maximum( Maximum( countEmptyCellsInColsContainsNum  countEmptyCellsInSquare_ThatNotContainsNum )  Minus( countEmptyCellInCol  countEmptyCellsInSquare_ThatNotContainsNum ) )  Maximum( Minimum( countEmptyCellsInSquareContainsNum  countEmptyCellInCol )  Plus( countEmptyCellInRow  countEmptyCellInRow ) ) ) ) ),((((( countEmptyCellsInSquare_ThatNotContainsNum  Min  countEmptyCellsInRows_ThatNotContainsNum ) / ( countEmptyCellsInSquare_ThatNotContainsNum  Max  countEmptyCellInSquare )) + (( countEmptyCellsInColsContainsNum  /  countEmptyCellsInRows_ThatNotContainsNum ) - ( countEmptyCellInCol  Min  countEmptyCellsInCols_ThatNotContainsNum ))) + ((( numOfOptionsInCell  %  countEmptyCellsInRows_ThatNotContainsNum ) * ( countEmptyCellsInSquareContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum )) / (( countEmptyCellsInRows_ThatNotContainsNum  *  countEmptyCellInSquare ) + ( numOfOptionsToAppearInBoard  Min  countEmptyCellsInSquareContainsNum )))) Max (((( numOfOptionsInCell  Min  countEmptyCellInSquare ) Min ( countEmptyCellsInRowsContainsNum  *  countEmptyCellsInColsContainsNum )) - (( countEmptyCellInCol  %  numOfOptionsToAppearInBoard ) Min ( countEmptyCellInSquare  -  countEmptyCellsInRowsContainsNum ))) % ((( countEmptyCellsInColsContainsNum  Max  countEmptyCellsInSquare_ThatNotContainsNum ) Max ( countEmptyCellInCol  -  countEmptyCellsInSquare_ThatNotContainsNum )) Min (( countEmptyCellsInSquareContainsNum  Min  countEmptyCellInCol ) Max ( countEmptyCellInRow  +  countEmptyCellInRow ))))),
2,18.0,2.0,10.44,Maximum( Multi( Multi( Minimum( Minimum( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum )  Plus( numOfOptionsInCell  countEmptyCellInRow ) )  Minimum( Plus( countEmptyCellInRow  numOfOptionsInCell )  Minus( countEmptyCellsInSquareContainsNum  countEmptyCellsInSquareContainsNum ) ) )  Minimum( Minimum( Mod( countEmptyCellInRow  countEmptyCellInSquare )  Maximum( countEmptyCellsInSquareContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) )  Maximum( Plus( countEmptyCellsInColsContainsNum  countEmptyCellsInSquareContainsNum )  Multi( countEmptyCellsInRowsContainsNum  numOfOptionsInCell ) ) ) )  Maximum( Maximum( Multi( Multi( numOfOptionsToAppearInBoard  countEmptyCellInSquare )  Mod( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) )  Plus( Mod( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInRowsContainsNum )  Maximum( countEmptyCellsInRowsContainsNum  countEmptyCellsInRowsContainsNum ) ) )  Minus( Multi( Plus( countEmptyCellInCol  countEmptyCellsInSquare_ThatNotContainsNum )  div( countEmptyCellInRow  countEmptyCellsInCols_ThatNotContainsNum ) )  Multi( Multi( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInRow )  Multi( countEmptyCellInCol  countEmptyCellInSquare ) ) ) ) ),((((( countEmptyCellsInCols_ThatNotContainsNum  Min  countEmptyCellsInCols_ThatNotContainsNum ) Min ( numOfOptionsInCell  +  countEmptyCellInRow )) * (( countEmptyCellInRow  +  numOfOptionsInCell ) Min ( countEmptyCellsInSquareContainsNum  -  countEmptyCellsInSquareContainsNum ))) * ((( countEmptyCellInRow  %  countEmptyCellInSquare ) Min ( countEmptyCellsInSquareContainsNum  Max  countEmptyCellsInCols_ThatNotContainsNum )) Min (( countEmptyCellsInColsContainsNum  +  countEmptyCellsInSquareContainsNum ) Max ( countEmptyCellsInRowsContainsNum  *  numOfOptionsInCell )))) Max (((( numOfOptionsToAppearInBoard  *  countEmptyCellInSquare ) * ( countEmptyCellsInCols_ThatNotContainsNum  %  countEmptyCellsInCols_ThatNotContainsNum )) Max (( countEmptyCellsInCols_ThatNotContainsNum  %  countEmptyCellsInRowsContainsNum ) + ( countEmptyCellsInRowsContainsNum  Max  countEmptyCellsInRowsContainsNum ))) Max ((( countEmptyCellInCol  +  countEmptyCellsInSquare_ThatNotContainsNum ) * ( countEmptyCellInRow  /  countEmptyCellsInCols_ThatNotContainsNum )) - (( countEmptyCellsInRows_ThatNotContainsNum  *  countEmptyCellInRow ) * ( countEmptyCellInCol  *  countEmptyCellInSquare ))))),
3,18.0,2.0,10.08,Maximum( Multi( Multi( Minimum( Minimum( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum )  Plus( numOfOptionsInCell  countEmptyCellInRow ) )  Minimum( Plus( countEmptyCellInRow  numOfOptionsInCell )  Minus( countEmptyCellsInSquareContainsNum  countEmptyCellsInSquareContainsNum ) ) )  Minimum( Minimum( Mod( countEmptyCellInRow  countEmptyCellInSquare )  Maximum( countEmptyCellsInSquareContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) )  Maximum( Plus( countEmptyCellsInColsContainsNum  countEmptyCellsInSquareContainsNum )  Multi( countEmptyCellsInRowsContainsNum  numOfOptionsInCell ) ) ) )  Maximum( Maximum( Multi( Multi( numOfOptionsToAppearInBoard  countEmptyCellInSquare )  Mod( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) )  Plus( Mod( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInRowsContainsNum )  Maximum( countEmptyCellsInRowsContainsNum  countEmptyCellsInRowsContainsNum ) ) )  Minus( Multi( Plus( countEmptyCellInCol  countEmptyCellsInSquare_ThatNotContainsNum )  div( countEmptyCellInRow  countEmptyCellsInCols_ThatNotContainsNum ) )  Multi( Multi( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInRow )  Multi( countEmptyCellInCol  countEmptyCellInSquare ) ) ) ) ),((((( countEmptyCellsInCols_ThatNotContainsNum  Min  countEmptyCellsInCols_ThatNotContainsNum ) Min ( numOfOptionsInCell  +  countEmptyCellInRow )) * (( countEmptyCellInRow  +  numOfOptionsInCell ) Min ( countEmptyCellsInSquareContainsNum  -  countEmptyCellsInSquareContainsNum ))) * ((( countEmptyCellInRow  %  countEmptyCellInSquare ) Min ( countEmptyCellsInSquareContainsNum  Max  countEmptyCellsInCols_ThatNotContainsNum )) Min (( countEmptyCellsInColsContainsNum  +  countEmptyCellsInSquareContainsNum ) Max ( countEmptyCellsInRowsContainsNum  *  numOfOptionsInCell )))) Max (((( numOfOptionsToAppearInBoard  *  countEmptyCellInSquare ) * ( countEmptyCellsInCols_ThatNotContainsNum  %  countEmptyCellsInCols_ThatNotContainsNum )) Max (( countEmptyCellsInCols_ThatNotContainsNum  %  countEmptyCellsInRowsContainsNum ) + ( countEmptyCellsInRowsContainsNum  Max  countEmptyCellsInRowsContainsNum ))) Max ((( countEmptyCellInCol  +  countEmptyCellsInSquare_ThatNotContainsNum ) * ( countEmptyCellInRow  /  countEmptyCellsInCols_ThatNotContainsNum )) - (( countEmptyCellsInRows_ThatNotContainsNum  *  countEmptyCellInRow ) * ( countEmptyCellInCol  *  countEmptyCellInSquare ))))),
4,18.0,2.0,10.09,Maximum( Multi( Multi( Minimum( Minimum( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum )  Plus( numOfOptionsInCell  countEmptyCellInRow ) )  Minimum( Plus( countEmptyCellInRow  numOfOptionsInCell )  Minus( countEmptyCellsInSquareContainsNum  countEmptyCellsInSquareContainsNum ) ) )  Minimum( Minimum( Mod( countEmptyCellInRow  countEmptyCellInSquare )  Maximum( countEmptyCellsInSquareContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) )  Maximum( Plus( countEmptyCellsInColsContainsNum  countEmptyCellsInSquareContainsNum )  Multi( countEmptyCellsInRowsContainsNum  numOfOptionsInCell ) ) ) )  Maximum( Mod( div( Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInSquare )  Minus( countEmptyCellsInSquare_ThatNotContainsNum  numOfOptionsToAppearInBoard ) )  Mod( Maximum( countEmptyCellsInCols_ThatNotContainsNum  numOfOptionsInCell )  Maximum( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInSquareContainsNum ) ) )  Minus( Multi( Plus( countEmptyCellInCol  countEmptyCellsInSquare_ThatNotContainsNum )  div( countEmptyCellInRow  countEmptyCellsInCols_ThatNotContainsNum ) )  Multi( Multi( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInRow )  Multi( countEmptyCellInCol  countEmptyCellInSquare ) ) ) ) ),((((( countEmptyCellsInCols_ThatNotContainsNum  Min  countEmptyCellsInCols_ThatNotContainsNum ) Min ( numOfOptionsInCell  +  countEmptyCellInRow )) * (( countEmptyCellInRow  +  numOfOptionsInCell ) Min ( countEmptyCellsInSquareContainsNum  -  countEmptyCellsInSquareContainsNum ))) * ((( countEmptyCellInRow  %  countEmptyCellInSquare ) Min ( countEmptyCellsInSquareContainsNum  Max  countEmptyCellsInCols_ThatNotContainsNum )) Min (( countEmptyCellsInColsContainsNum  +  countEmptyCellsInSquareContainsNum ) Max ( countEmptyCellsInRowsContainsNum  *  numOfOptionsInCell )))) Max (((( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellInSquare ) / ( countEmptyCellsInSquare_ThatNotContainsNum  -  numOfOptionsToAppearInBoard )) % (( countEmptyCellsInCols_ThatNotContainsNum  Max  numOfOptionsInCell ) % ( countEmptyCellsInSquare_ThatNotContainsNum  Max  countEmptyCellsInSquareContainsNum ))) Max ((( countEmptyCellInCol  +  countEmptyCellsInSquare_ThatNotContainsNum ) * ( countEmptyCellInRow  /  countEmptyCellsInCols_ThatNotContainsNum )) - (( countEmptyCellsInRows_ThatNotContainsNum  *  countEmptyCellInRow ) * ( countEmptyCellInCol  *  countEmptyCellInSquare ))))),
5,18.0,2.0,9.86,Maximum( Multi( Multi( Minimum( Minimum( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum )  Plus( numOfOptionsInCell  countEmptyCellInRow ) )  Minimum( Plus( countEmptyCellInRow  numOfOptionsInCell )  Minus( countEmptyCellsInSquareContainsNum  countEmptyCellsInSquareContainsNum ) ) )  Minimum( Minimum( Mod( countEmptyCellInRow  countEmptyCellInSquare )  Maximum( countEmptyCellsInSquareContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) )  Maximum( Plus( countEmptyCellsInColsContainsNum  countEmptyCellsInSquareContainsNum )  Multi( countEmptyCellsInRowsContainsNum  numOfOptionsInCell ) ) ) )  Maximum( Mod( div( Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInSquare )  Minus( countEmptyCellsInSquare_ThatNotContainsNum  numOfOptionsToAppearInBoard ) )  Mod( Maximum( countEmptyCellsInCols_ThatNotContainsNum  numOfOptionsInCell )  Maximum( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInSquareContainsNum ) ) )  Minus( Multi( Plus( countEmptyCellInCol  countEmptyCellsInSquare_ThatNotContainsNum )  div( countEmptyCellInRow  countEmptyCellsInCols_ThatNotContainsNum ) )  Multi( Multi( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInRow )  Multi( countEmptyCellInCol  countEmptyCellInSquare ) ) ) ) ),((((( countEmptyCellsInCols_ThatNotContainsNum  Min  countEmptyCellsInCols_ThatNotContainsNum ) Min ( numOfOptionsInCell  +  countEmptyCellInRow )) * (( countEmptyCellInRow  +  numOfOptionsInCell ) Min ( countEmptyCellsInSquareContainsNum  -  countEmptyCellsInSquareContainsNum ))) * ((( countEmptyCellInRow  %  countEmptyCellInSquare ) Min ( countEmptyCellsInSquareContainsNum  Max  countEmptyCellsInCols_ThatNotContainsNum )) Min (( countEmptyCellsInColsContainsNum  +  countEmptyCellsInSquareContainsNum ) Max ( countEmptyCellsInRowsContainsNum  *  numOfOptionsInCell )))) Max (((( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellInSquare ) / ( countEmptyCellsInSquare_ThatNotContainsNum  -  numOfOptionsToAppearInBoard )) % (( countEmptyCellsInCols_ThatNotContainsNum  Max  numOfOptionsInCell ) % ( countEmptyCellsInSquare_ThatNotContainsNum  Max  countEmptyCellsInSquareContainsNum ))) Max ((( countEmptyCellInCol  +  countEmptyCellsInSquare_ThatNotContainsNum ) * ( countEmptyCellInRow  /  countEmptyCellsInCols_ThatNotContainsNum )) - (( countEmptyCellsInRows_ThatNotContainsNum  *  countEmptyCellInRow ) * ( countEmptyCellInCol  *  countEmptyCellInSquare ))))),
6,18.0,2.0,9.76,Maximum( Maximum( Mod( Mod( Multi( countEmptyCellInRow  numOfOptionsInCell )  Minimum( countEmptyCellInCol  numOfOptionsInCell ) )  Multi( Minus( countEmptyCellsInSquareContainsNum  countEmptyCellsInColsContainsNum )  Mod( numOfOptionsToAppearInBoard  countEmptyCellInRow ) ) )  Plus( Minimum( Multi( countEmptyCellInRow  countEmptyCellInRow )  Plus( countEmptyCellsInRowsContainsNum  countEmptyCellInRow ) )  Maximum( Plus( countEmptyCellsInRowsContainsNum  countEmptyCellInCol )  Multi( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellInCol ) ) ) )  Maximum( Mod( div( Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInSquare )  Minus( countEmptyCellsInSquare_ThatNotContainsNum  numOfOptionsToAppearInBoard ) )  Mod( Maximum( countEmptyCellsInCols_ThatNotContainsNum  numOfOptionsInCell )  Maximum( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInSquareContainsNum ) ) )  Minus( Multi( Plus( countEmptyCellInCol  countEmptyCellsInSquare_ThatNotContainsNum )  div( countEmptyCellInRow  countEmptyCellsInCols_ThatNotContainsNum ) )  Multi( Multi( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInRow )  Multi( countEmptyCellInCol  countEmptyCellInSquare ) ) ) ) ),((((( countEmptyCellInRow  *  numOfOptionsInCell ) % ( countEmptyCellInCol  Min  numOfOptionsInCell )) % (( countEmptyCellsInSquareContainsNum  -  countEmptyCellsInColsContainsNum ) * ( numOfOptionsToAppearInBoard  %  countEmptyCellInRow ))) Max ((( countEmptyCellInRow  *  countEmptyCellInRow ) Min ( countEmptyCellsInRowsContainsNum  +  countEmptyCellInRow )) + (( countEmptyCellsInRowsContainsNum  +  countEmptyCellInCol ) Max ( countEmptyCellsInCols_ThatNotContainsNum  *  countEmptyCellInCol )))) Max (((( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellInSquare ) / ( countEmptyCellsInSquare_ThatNotContainsNum  -  numOfOptionsToAppearInBoard )) % (( countEmptyCellsInCols_ThatNotContainsNum  Max  numOfOptionsInCell ) % ( countEmptyCellsInSquare_ThatNotContainsNum  Max  countEmptyCellsInSquareContainsNum ))) Max ((( countEmptyCellInCol  +  countEmptyCellsInSquare_ThatNotContainsNum ) * ( countEmptyCellInRow  /  countEmptyCellsInCols_ThatNotContainsNum )) - (( countEmptyCellsInRows_ThatNotContainsNum  *  countEmptyCellInRow ) * ( countEmptyCellInCol  *  countEmptyCellInSquare ))))),
7,19.0,2.0,9.7,Maximum( Minus( Plus( div( div( countEmptyCellInCol  countEmptyCellsInRowsContainsNum )  Plus( numOfOptionsToAppearInBoard  countEmptyCellInSquare ) )  div( Plus( countEmptyCellsInSquare_ThatNotContainsNum  numOfOptionsToAppearInBoard )  Plus( countEmptyCellsInSquareContainsNum  countEmptyCellsInSquareContainsNum ) ) )  Plus( Minimum( Plus( countEmptyCellsInSquareContainsNum  numOfOptionsInCell )  Plus( numOfOptionsToAppearInBoard  numOfOptionsInCell ) )  Plus( Plus( numOfOptionsToAppearInBoard  countEmptyCellsInCols_ThatNotContainsNum )  Mod( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInSquare_ThatNotContainsNum ) ) ) )  Maximum( Mod( div( Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInSquare )  Minus( countEmptyCellsInSquare_ThatNotContainsNum  numOfOptionsToAppearInBoard ) )  Mod( Maximum( countEmptyCellsInCols_ThatNotContainsNum  numOfOptionsInCell )  Maximum( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInSquareContainsNum ) ) )  Minus( Multi( Plus( countEmptyCellInCol  countEmptyCellsInSquare_ThatNotContainsNum )  div( countEmptyCellInRow  countEmptyCellsInCols_ThatNotContainsNum ) )  Multi( Multi( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInRow )  Multi( countEmptyCellInCol  countEmptyCellInSquare ) ) ) ) ),((((( countEmptyCellInCol  /  countEmptyCellsInRowsContainsNum ) / ( numOfOptionsToAppearInBoard  +  countEmptyCellInSquare )) + (( countEmptyCellsInSquare_ThatNotContainsNum  +  numOfOptionsToAppearInBoard ) / ( countEmptyCellsInSquareContainsNum  +  countEmptyCellsInSquareContainsNum ))) - ((( countEmptyCellsInSquareContainsNum  +  numOfOptionsInCell ) Min ( numOfOptionsToAppearInBoard  +  numOfOptionsInCell )) + (( numOfOptionsToAppearInBoard  +  countEmptyCellsInCols_ThatNotContainsNum ) + ( countEmptyCellsInCols_ThatNotContainsNum  %  countEmptyCellsInSquare_ThatNotContainsNum )))) Max (((( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellInSquare ) / ( countEmptyCellsInSquare_ThatNotContainsNum  -  numOfOptionsToAppearInBoard )) % (( countEmptyCellsInCols_ThatNotContainsNum  Max  numOfOptionsInCell ) % ( countEmptyCellsInSquare_ThatNotContainsNum  Max  countEmptyCellsInSquareContainsNum ))) Max ((( countEmptyCellInCol  +  countEmptyCellsInSquare_ThatNotContainsNum ) * ( countEmptyCellInRow  /  countEmptyCellsInCols_ThatNotContainsNum )) - (( countEmptyCellsInRows_ThatNotContainsNum  *  countEmptyCellInRow ) * ( countEmptyCellInCol  *  countEmptyCellInSquare ))))),
8,19.0,2.0,9.67,Maximum( Minus( Plus( div( div( countEmptyCellInCol  countEmptyCellsInRowsContainsNum )  Plus( numOfOptionsToAppearInBoard  countEmptyCellInSquare ) )  div( Plus( countEmptyCellsInSquare_ThatNotContainsNum  numOfOptionsToAppearInBoard )  Plus( countEmptyCellsInSquareContainsNum  countEmptyCellsInSquareContainsNum ) ) )  Plus( Minimum( Plus( countEmptyCellsInSquareContainsNum  numOfOptionsInCell )  Plus( numOfOptionsToAppearInBoard  numOfOptionsInCell ) )  Plus( Plus( numOfOptionsToAppearInBoard  countEmptyCellsInCols_ThatNotContainsNum )  Mod( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInSquare_ThatNotContainsNum ) ) ) )  Maximum( Mod( div( Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInSquare )  Minus( countEmptyCellsInSquare_ThatNotContainsNum  numOfOptionsToAppearInBoard ) )  Mod( Maximum( countEmptyCellsInCols_ThatNotContainsNum  numOfOptionsInCell )  Maximum( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInSquareContainsNum ) ) )  Minus( Multi( Plus( countEmptyCellInCol  countEmptyCellsInSquare_ThatNotContainsNum )  div( countEmptyCellInRow  countEmptyCellsInCols_ThatNotContainsNum ) )  Multi( Multi( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInRow )  Multi( countEmptyCellInCol  countEmptyCellInSquare ) ) ) ) ),((((( countEmptyCellInCol  /  countEmptyCellsInRowsContainsNum ) / ( numOfOptionsToAppearInBoard  +  countEmptyCellInSquare )) + (( countEmptyCellsInSquare_ThatNotContainsNum  +  numOfOptionsToAppearInBoard ) / ( countEmptyCellsInSquareContainsNum  +  countEmptyCellsInSquareContainsNum ))) - ((( countEmptyCellsInSquareContainsNum  +  numOfOptionsInCell ) Min ( numOfOptionsToAppearInBoard  +  numOfOptionsInCell )) + (( numOfOptionsToAppearInBoard  +  countEmptyCellsInCols_ThatNotContainsNum ) + ( countEmptyCellsInCols_ThatNotContainsNum  %  countEmptyCellsInSquare_ThatNotContainsNum )))) Max (((( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellInSquare ) / ( countEmptyCellsInSquare_ThatNotContainsNum  -  numOfOptionsToAppearInBoard )) % (( countEmptyCellsInCols_ThatNotContainsNum  Max  numOfOptionsInCell ) % ( countEmptyCellsInSquare_ThatNotContainsNum  Max  countEmptyCellsInSquareContainsNum ))) Max ((( countEmptyCellInCol  +  countEmptyCellsInSquare_ThatNotContainsNum ) * ( countEmptyCellInRow  /  countEmptyCellsInCols_ThatNotContainsNum )) - (( countEmptyCellsInRows_ThatNotContainsNum  *  countEmptyCellInRow ) * ( countEmptyCellInCol  *  countEmptyCellInSquare ))))),
9,16.0,2.0,9.02,Maximum( Minus( Plus( div( div( countEmptyCellInCol  countEmptyCellsInRowsContainsNum )  Plus( numOfOptionsToAppearInBoard  countEmptyCellInSquare ) )  div( Plus( countEmptyCellsInSquare_ThatNotContainsNum  numOfOptionsToAppearInBoard )  Plus( countEmptyCellsInSquareContainsNum  countEmptyCellsInSquareContainsNum ) ) )  Plus( Minimum( Plus( countEmptyCellsInSquareContainsNum  numOfOptionsInCell )  Plus( numOfOptionsToAppearInBoard  numOfOptionsInCell ) )  Plus( Plus( numOfOptionsToAppearInBoard  countEmptyCellsInCols_ThatNotContainsNum )  Mod( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInSquare_ThatNotContainsNum ) ) ) )  Maximum( Mod( div( Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInSquare )  Minus( countEmptyCellsInSquare_ThatNotContainsNum  numOfOptionsToAppearInBoard ) )  Mod( Maximum( countEmptyCellsInCols_ThatNotContainsNum  numOfOptionsInCell )  Maximum( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInSquareContainsNum ) ) )  Minus( Multi( Plus( countEmptyCellInCol  countEmptyCellsInSquare_ThatNotContainsNum )  div( countEmptyCellInRow  countEmptyCellsInCols_ThatNotContainsNum ) )  Multi( Multi( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInRow )  Multi( countEmptyCellInCol  countEmptyCellInSquare ) ) ) ) ),((((( countEmptyCellInCol  /  countEmptyCellsInRowsContainsNum ) / ( numOfOptionsToAppearInBoard  +  countEmptyCellInSquare )) + (( countEmptyCellsInSquare_ThatNotContainsNum  +  numOfOptionsToAppearInBoard ) / ( countEmptyCellsInSquareContainsNum  +  countEmptyCellsInSquareContainsNum ))) - ((( countEmptyCellsInSquareContainsNum  +  numOfOptionsInCell ) Min ( numOfOptionsToAppearInBoard  +  numOfOptionsInCell )) + (( numOfOptionsToAppearInBoard  +  countEmptyCellsInCols_ThatNotContainsNum ) + ( countEmptyCellsInCols_ThatNotContainsNum  %  countEmptyCellsInSquare_ThatNotContainsNum )))) Max (((( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellInSquare ) / ( countEmptyCellsInSquare_ThatNotContainsNum  -  numOfOptionsToAppearInBoard )) % (( countEmptyCellsInCols_ThatNotContainsNum  Max  numOfOptionsInCell ) % ( countEmptyCellsInSquare_ThatNotContainsNum  Max  countEmptyCellsInSquareContainsNum ))) Max ((( countEmptyCellInCol  +  countEmptyCellsInSquare_ThatNotContainsNum ) * ( countEmptyCellInRow  /  countEmptyCellsInCols_ThatNotContainsNum )) - (( countEmptyCellsInRows_ThatNotContainsNum  *  countEmptyCellInRow ) * ( countEmptyCellInCol  *  countEmptyCellInSquare ))))),
10,15.0,2.0,9.38,Maximum( Maximum( div( Maximum( div( countEmptyCellsInColsContainsNum  numOfOptionsToAppearInBoard )  Minimum( countEmptyCellsInRows_ThatNotContainsNum  numOfOptionsToAppearInBoard ) )  Maximum( Multi( countEmptyCellInSquare  countEmptyCellInSquare )  Minus( countEmptyCellInCol  countEmptyCellsInSquare_ThatNotContainsNum ) ) )  Plus( Minimum( Multi( countEmptyCellInRow  countEmptyCellInRow )  Plus( countEmptyCellsInRowsContainsNum  countEmptyCellInRow ) )  Maximum( Plus( countEmptyCellsInRowsContainsNum  countEmptyCellInCol )  Multi( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellInCol ) ) ) )  Minus( div( Plus( Maximum( countEmptyCellInRow  numOfOptionsInCell )  Minus( countEmptyCellInCol  countEmptyCellsInColsContainsNum ) )  Minimum( Mod( countEmptyCellInSquare  numOfOptionsToAppearInBoard )  Minimum( numOfOptionsToAppearInBoard  countEmptyCellsInCols_ThatNotContainsNum ) ) )  Multi( Multi( Multi( countEmptyCellsInCols_ThatNotContainsNum  numOfOptionsInCell )  Minimum( countEmptyCellInCol  countEmptyCellInRow ) )  Maximum( Minus( numOfOptionsToAppearInBoard  countEmptyCellsInColsContainsNum )  Minus( countEmptyCellsInColsContainsNum  countEmptyCellInCol ) ) ) ) ),((((( countEmptyCellsInColsContainsNum  /  numOfOptionsToAppearInBoard ) Max ( countEmptyCellsInRows_ThatNotContainsNum  Min  numOfOptionsToAppearInBoard )) / (( countEmptyCellInSquare  *  countEmptyCellInSquare ) Max ( countEmptyCellInCol  -  countEmptyCellsInSquare_ThatNotContainsNum ))) Max ((( countEmptyCellInRow  *  countEmptyCellInRow ) Min ( countEmptyCellsInRowsContainsNum  +  countEmptyCellInRow )) + (( countEmptyCellsInRowsContainsNum  +  countEmptyCellInCol ) Max ( countEmptyCellsInCols_ThatNotContainsNum  *  countEmptyCellInCol )))) Max (((( countEmptyCellInRow  Max  numOfOptionsInCell ) + ( countEmptyCellInCol  -  countEmptyCellsInColsContainsNum )) / (( countEmptyCellInSquare  %  numOfOptionsToAppearInBoard ) Min ( numOfOptionsToAppearInBoard  Min  countEmptyCellsInCols_ThatNotContainsNum ))) - ((( countEmptyCellsInCols_ThatNotContainsNum  *  numOfOptionsInCell ) * ( countEmptyCellInCol  Min  countEmptyCellInRow )) * (( numOfOptionsToAppearInBoard  -  countEmptyCellsInColsContainsNum ) Max ( countEmptyCellsInColsContainsNum  -  countEmptyCellInCol ))))),
11,15.0,2.0,8.64,Maximum( Minimum( Minimum( Plus( Minimum( countEmptyCellInCol  numOfOptionsToAppearInBoard )  Plus( countEmptyCellsInSquareContainsNum  countEmptyCellsInColsContainsNum ) )  Maximum( Multi( countEmptyCellsInColsContainsNum  numOfOptionsToAppearInBoard )  Minimum( countEmptyCellsInColsContainsNum  countEmptyCellInRow ) ) )  Minus( div( div( countEmptyCellsInSquareContainsNum  numOfOptionsToAppearInBoard )  Minimum( numOfOptionsToAppearInBoard  countEmptyCellsInRows_ThatNotContainsNum ) )  Minimum( Maximum( countEmptyCellInSquare  countEmptyCellsInRowsContainsNum )  Plus( countEmptyCellInCol  countEmptyCellInSquare ) ) ) )  Plus( Mod( Minimum( Mod( numOfOptionsInCell  countEmptyCellsInColsContainsNum )  Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInSquareContainsNum ) )  div( Plus( countEmptyCellInRow  countEmptyCellsInSquareContainsNum )  Plus( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) ) )  Multi( Minimum( Plus( numOfOptionsToAppearInBoard  countEmptyCellsInRowsContainsNum )  Plus( countEmptyCellsInRowsContainsNum  countEmptyCellsInSquare_ThatNotContainsNum ) )  Minimum( Multi( countEmptyCellsInSquareContainsNum  numOfOptionsInCell )  Plus( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) ) ) ) ),((((( countEmptyCellInCol  Min  numOfOptionsToAppearInBoard ) + ( countEmptyCellsInSquareContainsNum  +  countEmptyCellsInColsContainsNum )) Min (( countEmptyCellsInColsContainsNum  *  numOfOptionsToAppearInBoard ) Max ( countEmptyCellsInColsContainsNum  Min  countEmptyCellInRow ))) Min ((( countEmptyCellsInSquareContainsNum  /  numOfOptionsToAppearInBoard ) / ( numOfOptionsToAppearInBoard  Min  countEmptyCellsInRows_ThatNotContainsNum )) - (( countEmptyCellInSquare  Max  countEmptyCellsInRowsContainsNum ) Min ( countEmptyCellInCol  +  countEmptyCellInSquare )))) Max (((( numOfOptionsInCell  %  countEmptyCellsInColsContainsNum ) Min ( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInSquareContainsNum )) % (( countEmptyCellInRow  +  countEmptyCellsInSquareContainsNum ) / ( countEmptyCellsInSquare_ThatNotContainsNum  +  countEmptyCellsInCols_ThatNotContainsNum ))) + ((( numOfOptionsToAppearInBoard  +  countEmptyCellsInRowsContainsNum ) Min ( countEmptyCellsInRowsContainsNum  +  countEmptyCellsInSquare_ThatNotContainsNum )) * (( countEmptyCellsInSquareContainsNum  *  numOfOptionsInCell ) Min ( countEmptyCellsInSquare_ThatNotContainsNum  +  countEmptyCellsInCols_ThatNotContainsNum ))))),
12,16.0,2.0,8.87,Maximum( div( Multi( Plus( Plus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInColsContainsNum )  Mod( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellInSquare ) )  div( Mod( countEmptyCellsInSquareContainsNum  countEmptyCellsInColsContainsNum )  Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) ) )  Maximum( Multi( div( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInCol )  Multi( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) )  Mod( Plus( countEmptyCellInRow  countEmptyCellInRow )  Maximum( countEmptyCellInRow  countEmptyCellsInCols_ThatNotContainsNum ) ) ) )  Maximum( Mod( div( Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInSquare )  Minus( countEmptyCellsInSquare_ThatNotContainsNum  numOfOptionsToAppearInBoard ) )  Minus( div( countEmptyCellsInColsContainsNum  numOfOptionsInCell )  Maximum( countEmptyCellsInRowsContainsNum  countEmptyCellsInRowsContainsNum ) ) )  Minus( Multi( Plus( countEmptyCellInCol  countEmptyCellsInSquare_ThatNotContainsNum )  div( countEmptyCellInRow  countEmptyCellsInCols_ThatNotContainsNum ) )  Multi( Multi( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInRow )  Multi( countEmptyCellInCol  countEmptyCellInSquare ) ) ) ) ),((((( countEmptyCellsInCols_ThatNotContainsNum  +  countEmptyCellsInColsContainsNum ) + ( countEmptyCellsInCols_ThatNotContainsNum  %  countEmptyCellInSquare )) * (( countEmptyCellsInSquareContainsNum  %  countEmptyCellsInColsContainsNum ) / ( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum ))) / ((( countEmptyCellsInRows_ThatNotContainsNum  /  countEmptyCellInCol ) * ( countEmptyCellsInCols_ThatNotContainsNum  *  countEmptyCellsInCols_ThatNotContainsNum )) Max (( countEmptyCellInRow  +  countEmptyCellInRow ) % ( countEmptyCellInRow  Max  countEmptyCellsInCols_ThatNotContainsNum )))) Max (((( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellInSquare ) / ( countEmptyCellsInSquare_ThatNotContainsNum  -  numOfOptionsToAppearInBoard )) % (( countEmptyCellsInColsContainsNum  /  numOfOptionsInCell ) - ( countEmptyCellsInRowsContainsNum  Max  countEmptyCellsInRowsContainsNum ))) Max ((( countEmptyCellInCol  +  countEmptyCellsInSquare_ThatNotContainsNum ) * ( countEmptyCellInRow  /  countEmptyCellsInCols_ThatNotContainsNum )) - (( countEmptyCellsInRows_ThatNotContainsNum  *  countEmptyCellInRow ) * ( countEmptyCellInCol  *  countEmptyCellInSquare ))))),
13,17.0,2.0,8.54,Maximum( Maximum( Mod( div( Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInSquare )  Minus( countEmptyCellsInSquare_ThatNotContainsNum  numOfOptionsToAppearInBoard ) )  Mod( Maximum( countEmptyCellsInCols_ThatNotContainsNum  numOfOptionsInCell )  Plus( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInSquare ) ) )  Minus( Multi( Plus( countEmptyCellInCol  countEmptyCellsInSquare_ThatNotContainsNum )  div( countEmptyCellInRow  countEmptyCellsInCols_ThatNotContainsNum ) )  Multi( Multi( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInRow )  Multi( countEmptyCellInCol  countEmptyCellInSquare ) ) ) )  Maximum( Mod( div( Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInSquare )  Minus( countEmptyCellsInSquare_ThatNotContainsNum  numOfOptionsToAppearInBoard ) )  Minus( div( countEmptyCellsInColsContainsNum  numOfOptionsInCell )  Maximum( countEmptyCellsInRowsContainsNum  countEmptyCellsInRowsContainsNum ) ) )  Minus( Multi( Plus( countEmptyCellInCol  countEmptyCellsInSquare_ThatNotContainsNum )  div( countEmptyCellInRow  countEmptyCellsInCols_ThatNotContainsNum ) )  Multi( Multi( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInRow )  Multi( countEmptyCellInCol  countEmptyCellInSquare ) ) ) ) ),((((( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellInSquare ) / ( countEmptyCellsInSquare_ThatNotContainsNum  -  numOfOptionsToAppearInBoard )) % (( countEmptyCellsInCols_ThatNotContainsNum  Max  numOfOptionsInCell ) % ( countEmptyCellsInRows_ThatNotContainsNum  +  countEmptyCellInSquare ))) Max ((( countEmptyCellInCol  +  countEmptyCellsInSquare_ThatNotContainsNum ) * ( countEmptyCellInRow  /  countEmptyCellsInCols_ThatNotContainsNum )) - (( countEmptyCellsInRows_ThatNotContainsNum  *  countEmptyCellInRow ) * ( countEmptyCellInCol  *  countEmptyCellInSquare )))) Max (((( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellInSquare ) / ( countEmptyCellsInSquare_ThatNotContainsNum  -  numOfOptionsToAppearInBoard )) % (( countEmptyCellsInColsContainsNum  /  numOfOptionsInCell ) - ( countEmptyCellsInRowsContainsNum  Max  countEmptyCellsInRowsContainsNum ))) Max ((( countEmptyCellInCol  +  countEmptyCellsInSquare_ThatNotContainsNum ) * ( countEmptyCellInRow  /  countEmptyCellsInCols_ThatNotContainsNum )) - (( countEmptyCellsInRows_ThatNotContainsNum  *  countEmptyCellInRow ) * ( countEmptyCellInCol  *  countEmptyCellInSquare ))))),
14,19.0,2.0,8.16,Maximum( Maximum( Mod( div( Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInSquare )  Minus( countEmptyCellsInSquare_ThatNotContainsNum  numOfOptionsToAppearInBoard ) )  Mod( Maximum( countEmptyCellsInCols_ThatNotContainsNum  numOfOptionsInCell )  Plus( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInSquare ) ) )  Minus( Multi( Plus( countEmptyCellInCol  countEmptyCellsInSquare_ThatNotContainsNum )  div( countEmptyCellInRow  countEmptyCellsInCols_ThatNotContainsNum ) )  Multi( Multi( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInRow )  Multi( countEmptyCellInCol  countEmptyCellInSquare ) ) ) )  div( Plus( Minus( Plus( countEmptyCellsInColsContainsNum  countEmptyCellInSquare )  Mod( countEmptyCellsInRowsContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) )  Maximum( Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInSquare )  Minus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) ) )  div( Multi( Maximum( countEmptyCellInSquare  numOfOptionsToAppearInBoard )  Plus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  Plus( div( countEmptyCellsInRows_ThatNotContainsNum  numOfOptionsToAppearInBoard )  Minimum( countEmptyCellInRow  countEmptyCellsInCols_ThatNotContainsNum ) ) ) ) ),((((( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellInSquare ) / ( countEmptyCellsInSquare_ThatNotContainsNum  -  numOfOptionsToAppearInBoard )) % (( countEmptyCellsInCols_ThatNotContainsNum  Max  numOfOptionsInCell ) % ( countEmptyCellsInRows_ThatNotContainsNum  +  countEmptyCellInSquare ))) Max ((( countEmptyCellInCol  +  countEmptyCellsInSquare_ThatNotContainsNum ) * ( countEmptyCellInRow  /  countEmptyCellsInCols_ThatNotContainsNum )) - (( countEmptyCellsInRows_ThatNotContainsNum  *  countEmptyCellInRow ) * ( countEmptyCellInCol  *  countEmptyCellInSquare )))) Max (((( countEmptyCellsInColsContainsNum  +  countEmptyCellInSquare ) - ( countEmptyCellsInRowsContainsNum  %  countEmptyCellsInCols_ThatNotContainsNum )) + (( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellInSquare ) Max ( countEmptyCellsInCols_ThatNotContainsNum  -  countEmptyCellsInCols_ThatNotContainsNum ))) / ((( countEmptyCellInSquare  Max  numOfOptionsToAppearInBoard ) * ( countEmptyCellsInCols_ThatNotContainsNum  +  countEmptyCellsInRows_ThatNotContainsNum )) / (( countEmptyCellsInRows_ThatNotContainsNum  /  numOfOptionsToAppearInBoard ) + ( countEmptyCellInRow  Min  countEmptyCellsInCols_ThatNotContainsNum ))))),
15,19.0,2.0,8.72,Maximum( Maximum( Mod( div( Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInSquare )  Minus( countEmptyCellsInSquare_ThatNotContainsNum  numOfOptionsToAppearInBoard ) )  Mod( Maximum( countEmptyCellsInCols_ThatNotContainsNum  numOfOptionsInCell )  Plus( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInSquare ) ) )  Minus( Multi( Plus( countEmptyCellInCol  countEmptyCellsInSquare_ThatNotContainsNum )  div( countEmptyCellInRow  countEmptyCellsInCols_ThatNotContainsNum ) )  Multi( Multi( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInRow )  Multi( countEmptyCellInCol  countEmptyCellInSquare ) ) ) )  div( Plus( Minus( Plus( countEmptyCellsInColsContainsNum  countEmptyCellInSquare )  Mod( countEmptyCellsInRowsContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) )  Maximum( Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInSquare )  Minus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) ) )  div( Multi( Maximum( countEmptyCellInSquare  numOfOptionsToAppearInBoard )  Plus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  Plus( div( countEmptyCellsInRows_ThatNotContainsNum  numOfOptionsToAppearInBoard )  Minimum( countEmptyCellInRow  countEmptyCellsInCols_ThatNotContainsNum ) ) ) ) ),((((( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellInSquare ) / ( countEmptyCellsInSquare_ThatNotContainsNum  -  numOfOptionsToAppearInBoard )) % (( countEmptyCellsInCols_ThatNotContainsNum  Max  numOfOptionsInCell ) % ( countEmptyCellsInRows_ThatNotContainsNum  +  countEmptyCellInSquare ))) Max ((( countEmptyCellInCol  +  countEmptyCellsInSquare_ThatNotContainsNum ) * ( countEmptyCellInRow  /  countEmptyCellsInCols_ThatNotContainsNum )) - (( countEmptyCellsInRows_ThatNotContainsNum  *  countEmptyCellInRow ) * ( countEmptyCellInCol  *  countEmptyCellInSquare )))) Max (((( countEmptyCellsInColsContainsNum  +  countEmptyCellInSquare ) - ( countEmptyCellsInRowsContainsNum  %  countEmptyCellsInCols_ThatNotContainsNum )) + (( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellInSquare ) Max ( countEmptyCellsInCols_ThatNotContainsNum  -  countEmptyCellsInCols_ThatNotContainsNum ))) / ((( countEmptyCellInSquare  Max  numOfOptionsToAppearInBoard ) * ( countEmptyCellsInCols_ThatNotContainsNum  +  countEmptyCellsInRows_ThatNotContainsNum )) / (( countEmptyCellsInRows_ThatNotContainsNum  /  numOfOptionsToAppearInBoard ) + ( countEmptyCellInRow  Min  countEmptyCellsInCols_ThatNotContainsNum ))))),
16,18.0,0.0,8.67,Plus( Minimum( Maximum( Plus( Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInSquare )  Minimum( countEmptyCellInRow  countEmptyCellInRow ) )  Multi( Maximum( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInSquareContainsNum )  Plus( numOfOptionsInCell  numOfOptionsInCell ) ) )  Minus( Minus( Multi( countEmptyCellsInColsContainsNum  countEmptyCellsInRows_ThatNotContainsNum )  Minimum( countEmptyCellInRow  countEmptyCellsInColsContainsNum ) )  Maximum( div( numOfOptionsToAppearInBoard  numOfOptionsInCell )  div( countEmptyCellInSquare  countEmptyCellInSquare ) ) ) )  div( Plus( Maximum( Minus( countEmptyCellsInColsContainsNum  countEmptyCellInRow )  div( countEmptyCellInCol  countEmptyCellsInSquareContainsNum ) )  Plus( Plus( numOfOptionsInCell  countEmptyCellsInRows_ThatNotContainsNum )  div( countEmptyCellsInSquareContainsNum  numOfOptionsToAppearInBoard ) ) )  Plus( div( Mod( countEmptyCellInSquare  numOfOptionsToAppearInBoard )  div( numOfOptionsInCell  countEmptyCellsInRowsContainsNum ) )  Multi( Minimum( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum )  Multi( countEmptyCellsInSquareContainsNum  numOfOptionsToAppearInBoard ) ) ) ) ),((((( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellInSquare ) + ( countEmptyCellInRow  Min  countEmptyCellInRow )) Max (( countEmptyCellsInCols_ThatNotContainsNum  Max  countEmptyCellsInSquareContainsNum ) * ( numOfOptionsInCell  +  numOfOptionsInCell ))) Min ((( countEmptyCellsInColsContainsNum  *  countEmptyCellsInRows_ThatNotContainsNum ) - ( countEmptyCellInRow  Min  countEmptyCellsInColsContainsNum )) - (( numOfOptionsToAppearInBoard  /  numOfOptionsInCell ) Max ( countEmptyCellInSquare  /  countEmptyCellInSquare )))) + (((( countEmptyCellsInColsContainsNum  -  countEmptyCellInRow ) Max ( countEmptyCellInCol  /  countEmptyCellsInSquareContainsNum )) + (( numOfOptionsInCell  +  countEmptyCellsInRows_ThatNotContainsNum ) + ( countEmptyCellsInSquareContainsNum  /  numOfOptionsToAppearInBoard ))) / ((( countEmptyCellInSquare  %  numOfOptionsToAppearInBoard ) / ( numOfOptionsInCell  /  countEmptyCellsInRowsContainsNum )) + (( countEmptyCellsInCols_ThatNotContainsNum  Min  countEmptyCellsInRows_ThatNotContainsNum ) * ( countEmptyCellsInSquareContainsNum  *  numOfOptionsToAppearInBoard ))))),
