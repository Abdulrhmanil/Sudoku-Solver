Genetic Sudoku Experiment
Experiment Time: 07/11/2017 16:50:29
Experiment Parameters:,
Original Empty Cells:,55,
Population Size:,100,
Max Generations:,100,
Crossover Probability:,0.7,
Mutation Probability:,0.3,
Percent of good individuals from population:,0.4,
,
Primitive Set:,
Plus,Minus,Multi,div,Mod,Maximum,Minimum,
Terminal Set:,
countEmptyCellInRow,countEmptyCellInCol,countEmptyCellInSquare,numOfOptionsInCell,numOfOptionsToAppearInBoard,countEmptyCellsInRowsContainsNum,countEmptyCellsInColsContainsNum,countEmptyCellsInSquareContainsNum,countEmptyCellsInRows_ThatNotContainsNum,countEmptyCellsInCols_ThatNotContainsNum,countEmptyCellsInSquare_ThatNotContainsNum,
,
,
Generation,Worst Individual Fitness,Best Individual Fitness,Average Fitness,Best Individual Tree - Prefix,Best Individual Tree - Infix,
0,20.0,4.0,11.24,Multi( Minus( Minus( Plus( Minimum( numOfOptionsToAppearInBoard  countEmptyCellsInSquareContainsNum )  Minus( countEmptyCellInCol  countEmptyCellsInSquare_ThatNotContainsNum ) )  Plus( Minus( countEmptyCellInSquare  countEmptyCellInCol )  Maximum( numOfOptionsToAppearInBoard  countEmptyCellsInSquare_ThatNotContainsNum ) ) )  Minus( Multi( Plus( numOfOptionsInCell  countEmptyCellInCol )  Maximum( numOfOptionsInCell  countEmptyCellsInSquareContainsNum ) )  Minus( Minus( numOfOptionsInCell  countEmptyCellsInColsContainsNum )  Minimum( countEmptyCellInSquare  numOfOptionsToAppearInBoard ) ) ) )  Multi( Mod( Minimum( div( numOfOptionsToAppearInBoard  countEmptyCellsInSquare_ThatNotContainsNum )  Maximum( countEmptyCellsInRowsContainsNum  countEmptyCellsInSquare_ThatNotContainsNum ) )  Minus( Minus( numOfOptionsToAppearInBoard  countEmptyCellInCol )  Minus( countEmptyCellsInSquareContainsNum  countEmptyCellsInColsContainsNum ) ) )  Plus( Multi( Minus( countEmptyCellsInColsContainsNum  countEmptyCellInRow )  Multi( numOfOptionsInCell  countEmptyCellInCol ) )  div( Minimum( countEmptyCellsInColsContainsNum  numOfOptionsToAppearInBoard )  Multi( countEmptyCellInSquare  countEmptyCellInCol ) ) ) ) ),((((( numOfOptionsToAppearInBoard  Min  countEmptyCellsInSquareContainsNum ) + ( countEmptyCellInCol  -  countEmptyCellsInSquare_ThatNotContainsNum )) - (( countEmptyCellInSquare  -  countEmptyCellInCol ) + ( numOfOptionsToAppearInBoard  Max  countEmptyCellsInSquare_ThatNotContainsNum ))) - ((( numOfOptionsInCell  +  countEmptyCellInCol ) * ( numOfOptionsInCell  Max  countEmptyCellsInSquareContainsNum )) - (( numOfOptionsInCell  -  countEmptyCellsInColsContainsNum ) - ( countEmptyCellInSquare  Min  numOfOptionsToAppearInBoard )))) * (((( numOfOptionsToAppearInBoard  /  countEmptyCellsInSquare_ThatNotContainsNum ) Min ( countEmptyCellsInRowsContainsNum  Max  countEmptyCellsInSquare_ThatNotContainsNum )) % (( numOfOptionsToAppearInBoard  -  countEmptyCellInCol ) - ( countEmptyCellsInSquareContainsNum  -  countEmptyCellsInColsContainsNum ))) * ((( countEmptyCellsInColsContainsNum  -  countEmptyCellInRow ) * ( numOfOptionsInCell  *  countEmptyCellInCol )) + (( countEmptyCellsInColsContainsNum  Min  numOfOptionsToAppearInBoard ) / ( countEmptyCellInSquare  *  countEmptyCellInCol ))))),
1,20.0,2.0,10.46,Minus( Mod( Plus( Mod( Multi( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellInRow )  div( countEmptyCellInSquare  countEmptyCellsInColsContainsNum ) )  Minimum( Mod( countEmptyCellInCol  numOfOptionsToAppearInBoard )  div( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInSquare_ThatNotContainsNum ) ) )  Minus( Maximum( Minus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum )  Maximum( countEmptyCellInCol  countEmptyCellsInSquare_ThatNotContainsNum ) )  Multi( Minus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInRowsContainsNum )  div( countEmptyCellInSquare  numOfOptionsToAppearInBoard ) ) ) )  Maximum( Minus( Minus( Plus( numOfOptionsInCell  numOfOptionsToAppearInBoard )  Maximum( countEmptyCellsInSquareContainsNum  countEmptyCellsInRowsContainsNum ) )  Multi( Multi( numOfOptionsToAppearInBoard  numOfOptionsInCell )  Multi( countEmptyCellsInSquareContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) ) )  Maximum( Maximum( Mod( countEmptyCellInCol  countEmptyCellInSquare )  div( countEmptyCellInSquare  countEmptyCellsInRowsContainsNum ) )  Minimum( Minus( countEmptyCellsInSquareContainsNum  countEmptyCellsInColsContainsNum )  Plus( numOfOptionsToAppearInBoard  countEmptyCellInCol ) ) ) ) ),((((( countEmptyCellsInCols_ThatNotContainsNum  *  countEmptyCellInRow ) % ( countEmptyCellInSquare  /  countEmptyCellsInColsContainsNum )) + (( countEmptyCellInCol  %  numOfOptionsToAppearInBoard ) Min ( countEmptyCellsInSquare_ThatNotContainsNum  /  countEmptyCellsInSquare_ThatNotContainsNum ))) % ((( countEmptyCellsInCols_ThatNotContainsNum  -  countEmptyCellsInRows_ThatNotContainsNum ) Max ( countEmptyCellInCol  Max  countEmptyCellsInSquare_ThatNotContainsNum )) - (( countEmptyCellsInCols_ThatNotContainsNum  -  countEmptyCellsInRowsContainsNum ) * ( countEmptyCellInSquare  /  numOfOptionsToAppearInBoard )))) - (((( numOfOptionsInCell  +  numOfOptionsToAppearInBoard ) - ( countEmptyCellsInSquareContainsNum  Max  countEmptyCellsInRowsContainsNum )) - (( numOfOptionsToAppearInBoard  *  numOfOptionsInCell ) * ( countEmptyCellsInSquareContainsNum  *  countEmptyCellsInCols_ThatNotContainsNum ))) Max ((( countEmptyCellInCol  %  countEmptyCellInSquare ) Max ( countEmptyCellInSquare  /  countEmptyCellsInRowsContainsNum )) Max (( countEmptyCellsInSquareContainsNum  -  countEmptyCellsInColsContainsNum ) Min ( numOfOptionsToAppearInBoard  +  countEmptyCellInCol ))))),
2,19.0,2.0,10.32,Minus( Mod( Minimum( div( Maximum( numOfOptionsInCell  countEmptyCellInRow )  Plus( countEmptyCellInRow  countEmptyCellsInRows_ThatNotContainsNum ) )  Minimum( Maximum( numOfOptionsInCell  countEmptyCellsInSquare_ThatNotContainsNum )  Maximum( countEmptyCellInCol  countEmptyCellInRow ) ) )  Minus( Multi( div( countEmptyCellInSquare  countEmptyCellInRow )  Multi( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInSquareContainsNum ) )  Plus( Multi( numOfOptionsToAppearInBoard  countEmptyCellsInCols_ThatNotContainsNum )  Mod( countEmptyCellsInCols_ThatNotContainsNum  numOfOptionsToAppearInBoard ) ) ) )  Multi( Multi( Minus( Multi( numOfOptionsInCell  countEmptyCellInCol )  div( countEmptyCellsInColsContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) )  Mod( Minimum( countEmptyCellsInColsContainsNum  countEmptyCellsInSquareContainsNum )  Minus( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInSquare ) ) )  Multi( Maximum( Minimum( countEmptyCellInRow  countEmptyCellsInCols_ThatNotContainsNum )  Maximum( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellInSquare ) )  Plus( Minus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellInCol )  Multi( countEmptyCellInCol  countEmptyCellsInCols_ThatNotContainsNum ) ) ) ) ),((((( numOfOptionsInCell  Max  countEmptyCellInRow ) / ( countEmptyCellInRow  +  countEmptyCellsInRows_ThatNotContainsNum )) Min (( numOfOptionsInCell  Max  countEmptyCellsInSquare_ThatNotContainsNum ) Min ( countEmptyCellInCol  Max  countEmptyCellInRow ))) % ((( countEmptyCellInSquare  /  countEmptyCellInRow ) * ( countEmptyCellsInRows_ThatNotContainsNum  *  countEmptyCellsInSquareContainsNum )) - (( numOfOptionsToAppearInBoard  *  countEmptyCellsInCols_ThatNotContainsNum ) + ( countEmptyCellsInCols_ThatNotContainsNum  %  numOfOptionsToAppearInBoard )))) - (((( numOfOptionsInCell  *  countEmptyCellInCol ) - ( countEmptyCellsInColsContainsNum  /  countEmptyCellsInCols_ThatNotContainsNum )) * (( countEmptyCellsInColsContainsNum  Min  countEmptyCellsInSquareContainsNum ) % ( countEmptyCellsInRows_ThatNotContainsNum  -  countEmptyCellInSquare ))) * ((( countEmptyCellInRow  Min  countEmptyCellsInCols_ThatNotContainsNum ) Max ( countEmptyCellsInSquare_ThatNotContainsNum  Max  countEmptyCellInSquare )) * (( countEmptyCellsInCols_ThatNotContainsNum  -  countEmptyCellInCol ) + ( countEmptyCellInCol  *  countEmptyCellsInCols_ThatNotContainsNum ))))),
3,18.0,2.0,9.5,Maximum( Maximum( Minus( Minus( Plus( numOfOptionsInCell  numOfOptionsToAppearInBoard )  Maximum( countEmptyCellsInSquareContainsNum  countEmptyCellsInRowsContainsNum ) )  Multi( Multi( numOfOptionsToAppearInBoard  numOfOptionsInCell )  Multi( countEmptyCellsInSquareContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) ) )  Maximum( Maximum( Mod( countEmptyCellInCol  countEmptyCellInSquare )  div( countEmptyCellInSquare  countEmptyCellsInRowsContainsNum ) )  Minimum( Minus( countEmptyCellsInSquareContainsNum  countEmptyCellsInColsContainsNum )  Plus( numOfOptionsToAppearInBoard  countEmptyCellInCol ) ) ) )  Multi( div( Plus( Minus( numOfOptionsToAppearInBoard  countEmptyCellsInRowsContainsNum )  Minimum( countEmptyCellsInRowsContainsNum  countEmptyCellsInRowsContainsNum ) )  Minus( Multi( countEmptyCellsInCols_ThatNotContainsNum  numOfOptionsToAppearInBoard )  Multi( numOfOptionsToAppearInBoard  countEmptyCellsInColsContainsNum ) ) )  Maximum( Minimum( Mod( countEmptyCellsInSquareContainsNum  countEmptyCellInCol )  Mod( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellInCol ) )  Maximum( Multi( numOfOptionsInCell  numOfOptionsInCell )  Mod( countEmptyCellInSquare  countEmptyCellsInSquare_ThatNotContainsNum ) ) ) ) ),((((( numOfOptionsInCell  +  numOfOptionsToAppearInBoard ) - ( countEmptyCellsInSquareContainsNum  Max  countEmptyCellsInRowsContainsNum )) - (( numOfOptionsToAppearInBoard  *  numOfOptionsInCell ) * ( countEmptyCellsInSquareContainsNum  *  countEmptyCellsInCols_ThatNotContainsNum ))) Max ((( countEmptyCellInCol  %  countEmptyCellInSquare ) Max ( countEmptyCellInSquare  /  countEmptyCellsInRowsContainsNum )) Max (( countEmptyCellsInSquareContainsNum  -  countEmptyCellsInColsContainsNum ) Min ( numOfOptionsToAppearInBoard  +  countEmptyCellInCol )))) Max (((( numOfOptionsToAppearInBoard  -  countEmptyCellsInRowsContainsNum ) + ( countEmptyCellsInRowsContainsNum  Min  countEmptyCellsInRowsContainsNum )) / (( countEmptyCellsInCols_ThatNotContainsNum  *  numOfOptionsToAppearInBoard ) - ( numOfOptionsToAppearInBoard  *  countEmptyCellsInColsContainsNum ))) * ((( countEmptyCellsInSquareContainsNum  %  countEmptyCellInCol ) Min ( countEmptyCellsInSquare_ThatNotContainsNum  %  countEmptyCellInCol )) Max (( numOfOptionsInCell  *  numOfOptionsInCell ) Max ( countEmptyCellInSquare  %  countEmptyCellsInSquare_ThatNotContainsNum ))))),
4,20.0,2.0,10.04,Maximum( Maximum( Minus( Minus( Plus( numOfOptionsInCell  numOfOptionsToAppearInBoard )  Maximum( countEmptyCellsInSquareContainsNum  countEmptyCellsInRowsContainsNum ) )  Multi( Multi( numOfOptionsToAppearInBoard  numOfOptionsInCell )  Multi( countEmptyCellsInSquareContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) ) )  Maximum( Maximum( Mod( countEmptyCellInCol  countEmptyCellInSquare )  div( countEmptyCellInSquare  countEmptyCellsInRowsContainsNum ) )  Minimum( Minus( countEmptyCellsInSquareContainsNum  countEmptyCellsInColsContainsNum )  Plus( numOfOptionsToAppearInBoard  countEmptyCellInCol ) ) ) )  Mod( Mod( Plus( Minimum( countEmptyCellsInSquareContainsNum  countEmptyCellsInSquare_ThatNotContainsNum )  Minus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) )  Minimum( Maximum( countEmptyCellInSquare  numOfOptionsInCell )  div( countEmptyCellInCol  countEmptyCellsInColsContainsNum ) ) )  Mod( Minimum( Minimum( countEmptyCellInSquare  countEmptyCellsInCols_ThatNotContainsNum )  Multi( numOfOptionsToAppearInBoard  countEmptyCellsInCols_ThatNotContainsNum ) )  Maximum( Plus( countEmptyCellInRow  countEmptyCellsInRowsContainsNum )  div( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) ) ) ) ),((((( numOfOptionsInCell  +  numOfOptionsToAppearInBoard ) - ( countEmptyCellsInSquareContainsNum  Max  countEmptyCellsInRowsContainsNum )) - (( numOfOptionsToAppearInBoard  *  numOfOptionsInCell ) * ( countEmptyCellsInSquareContainsNum  *  countEmptyCellsInCols_ThatNotContainsNum ))) Max ((( countEmptyCellInCol  %  countEmptyCellInSquare ) Max ( countEmptyCellInSquare  /  countEmptyCellsInRowsContainsNum )) Max (( countEmptyCellsInSquareContainsNum  -  countEmptyCellsInColsContainsNum ) Min ( numOfOptionsToAppearInBoard  +  countEmptyCellInCol )))) Max (((( countEmptyCellsInSquareContainsNum  Min  countEmptyCellsInSquare_ThatNotContainsNum ) + ( countEmptyCellsInCols_ThatNotContainsNum  -  countEmptyCellsInRowsContainsNum )) % (( countEmptyCellInSquare  Max  numOfOptionsInCell ) Min ( countEmptyCellInCol  /  countEmptyCellsInColsContainsNum ))) % ((( countEmptyCellInSquare  Min  countEmptyCellsInCols_ThatNotContainsNum ) Min ( numOfOptionsToAppearInBoard  *  countEmptyCellsInCols_ThatNotContainsNum )) % (( countEmptyCellInRow  +  countEmptyCellsInRowsContainsNum ) Max ( countEmptyCellsInRows_ThatNotContainsNum  /  countEmptyCellsInRows_ThatNotContainsNum ))))),
5,19.0,2.0,10.34,Plus( Maximum( Mod( Plus( Maximum( countEmptyCellsInSquareContainsNum  numOfOptionsInCell )  Minus( countEmptyCellsInColsContainsNum  countEmptyCellsInColsContainsNum ) )  Multi( Minus( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRowsContainsNum )  Mod( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) ) )  Mod( Mod( div( countEmptyCellsInSquare_ThatNotContainsNum  numOfOptionsToAppearInBoard )  div( countEmptyCellInCol  numOfOptionsInCell ) )  Minus( div( countEmptyCellsInColsContainsNum  countEmptyCellsInCols_ThatNotContainsNum )  Multi( countEmptyCellInRow  countEmptyCellInCol ) ) ) )  Maximum( Minus( Minus( Plus( numOfOptionsInCell  numOfOptionsToAppearInBoard )  Maximum( countEmptyCellsInSquareContainsNum  countEmptyCellsInRowsContainsNum ) )  Multi( Multi( numOfOptionsToAppearInBoard  numOfOptionsInCell )  Multi( countEmptyCellsInSquareContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) ) )  Maximum( Maximum( Mod( countEmptyCellInCol  countEmptyCellInSquare )  div( countEmptyCellInSquare  countEmptyCellsInRowsContainsNum ) )  Minimum( Minus( countEmptyCellsInSquareContainsNum  countEmptyCellsInColsContainsNum )  Plus( numOfOptionsToAppearInBoard  countEmptyCellInCol ) ) ) ) ),((((( countEmptyCellsInSquareContainsNum  Max  numOfOptionsInCell ) + ( countEmptyCellsInColsContainsNum  -  countEmptyCellsInColsContainsNum )) % (( countEmptyCellsInRows_ThatNotContainsNum  -  countEmptyCellsInRowsContainsNum ) * ( countEmptyCellsInSquare_ThatNotContainsNum  %  countEmptyCellsInCols_ThatNotContainsNum ))) Max ((( countEmptyCellsInSquare_ThatNotContainsNum  /  numOfOptionsToAppearInBoard ) % ( countEmptyCellInCol  /  numOfOptionsInCell )) % (( countEmptyCellsInColsContainsNum  /  countEmptyCellsInCols_ThatNotContainsNum ) - ( countEmptyCellInRow  *  countEmptyCellInCol )))) + (((( numOfOptionsInCell  +  numOfOptionsToAppearInBoard ) - ( countEmptyCellsInSquareContainsNum  Max  countEmptyCellsInRowsContainsNum )) - (( numOfOptionsToAppearInBoard  *  numOfOptionsInCell ) * ( countEmptyCellsInSquareContainsNum  *  countEmptyCellsInCols_ThatNotContainsNum ))) Max ((( countEmptyCellInCol  %  countEmptyCellInSquare ) Max ( countEmptyCellInSquare  /  countEmptyCellsInRowsContainsNum )) Max (( countEmptyCellsInSquareContainsNum  -  countEmptyCellsInColsContainsNum ) Min ( numOfOptionsToAppearInBoard  +  countEmptyCellInCol ))))),
6,19.0,2.0,9.75,Plus( Maximum( Mod( Plus( Maximum( countEmptyCellsInSquareContainsNum  numOfOptionsInCell )  Minus( countEmptyCellsInColsContainsNum  countEmptyCellsInColsContainsNum ) )  Multi( Minus( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRowsContainsNum )  Mod( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) ) )  Mod( Mod( div( countEmptyCellsInSquare_ThatNotContainsNum  numOfOptionsToAppearInBoard )  div( countEmptyCellInCol  numOfOptionsInCell ) )  Minus( div( countEmptyCellsInColsContainsNum  countEmptyCellsInCols_ThatNotContainsNum )  Multi( countEmptyCellInRow  countEmptyCellInCol ) ) ) )  Maximum( Minus( Minus( Plus( numOfOptionsInCell  numOfOptionsToAppearInBoard )  Maximum( countEmptyCellsInSquareContainsNum  countEmptyCellsInRowsContainsNum ) )  Multi( Multi( numOfOptionsToAppearInBoard  numOfOptionsInCell )  Multi( countEmptyCellsInSquareContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) ) )  Maximum( Maximum( Mod( countEmptyCellInCol  countEmptyCellInSquare )  div( countEmptyCellInSquare  countEmptyCellsInRowsContainsNum ) )  Minimum( Minus( countEmptyCellsInSquareContainsNum  countEmptyCellsInColsContainsNum )  Plus( numOfOptionsToAppearInBoard  countEmptyCellInCol ) ) ) ) ),((((( countEmptyCellsInSquareContainsNum  Max  numOfOptionsInCell ) + ( countEmptyCellsInColsContainsNum  -  countEmptyCellsInColsContainsNum )) % (( countEmptyCellsInRows_ThatNotContainsNum  -  countEmptyCellsInRowsContainsNum ) * ( countEmptyCellsInSquare_ThatNotContainsNum  %  countEmptyCellsInCols_ThatNotContainsNum ))) Max ((( countEmptyCellsInSquare_ThatNotContainsNum  /  numOfOptionsToAppearInBoard ) % ( countEmptyCellInCol  /  numOfOptionsInCell )) % (( countEmptyCellsInColsContainsNum  /  countEmptyCellsInCols_ThatNotContainsNum ) - ( countEmptyCellInRow  *  countEmptyCellInCol )))) + (((( numOfOptionsInCell  +  numOfOptionsToAppearInBoard ) - ( countEmptyCellsInSquareContainsNum  Max  countEmptyCellsInRowsContainsNum )) - (( numOfOptionsToAppearInBoard  *  numOfOptionsInCell ) * ( countEmptyCellsInSquareContainsNum  *  countEmptyCellsInCols_ThatNotContainsNum ))) Max ((( countEmptyCellInCol  %  countEmptyCellInSquare ) Max ( countEmptyCellInSquare  /  countEmptyCellsInRowsContainsNum )) Max (( countEmptyCellsInSquareContainsNum  -  countEmptyCellsInColsContainsNum ) Min ( numOfOptionsToAppearInBoard  +  countEmptyCellInCol ))))),
7,17.0,2.0,9.53,Plus( Maximum( Minus( Minus( Plus( numOfOptionsInCell  numOfOptionsToAppearInBoard )  Maximum( countEmptyCellsInSquareContainsNum  countEmptyCellsInRowsContainsNum ) )  Multi( Multi( numOfOptionsToAppearInBoard  numOfOptionsInCell )  Multi( countEmptyCellsInSquareContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) ) )  Maximum( Maximum( Mod( countEmptyCellInCol  countEmptyCellInSquare )  div( countEmptyCellInSquare  countEmptyCellsInRowsContainsNum ) )  Minimum( Minus( countEmptyCellsInSquareContainsNum  countEmptyCellsInColsContainsNum )  Plus( numOfOptionsToAppearInBoard  countEmptyCellInCol ) ) ) )  Maximum( Minus( Minus( Plus( numOfOptionsInCell  numOfOptionsToAppearInBoard )  Maximum( countEmptyCellsInSquareContainsNum  countEmptyCellsInRowsContainsNum ) )  Multi( Multi( numOfOptionsToAppearInBoard  numOfOptionsInCell )  Multi( countEmptyCellsInSquareContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) ) )  Maximum( Maximum( Mod( countEmptyCellInCol  countEmptyCellInSquare )  div( countEmptyCellInSquare  countEmptyCellsInRowsContainsNum ) )  Minimum( Minus( countEmptyCellsInSquareContainsNum  countEmptyCellsInColsContainsNum )  Plus( numOfOptionsToAppearInBoard  countEmptyCellInCol ) ) ) ) ),((((( numOfOptionsInCell  +  numOfOptionsToAppearInBoard ) - ( countEmptyCellsInSquareContainsNum  Max  countEmptyCellsInRowsContainsNum )) - (( numOfOptionsToAppearInBoard  *  numOfOptionsInCell ) * ( countEmptyCellsInSquareContainsNum  *  countEmptyCellsInCols_ThatNotContainsNum ))) Max ((( countEmptyCellInCol  %  countEmptyCellInSquare ) Max ( countEmptyCellInSquare  /  countEmptyCellsInRowsContainsNum )) Max (( countEmptyCellsInSquareContainsNum  -  countEmptyCellsInColsContainsNum ) Min ( numOfOptionsToAppearInBoard  +  countEmptyCellInCol )))) + (((( numOfOptionsInCell  +  numOfOptionsToAppearInBoard ) - ( countEmptyCellsInSquareContainsNum  Max  countEmptyCellsInRowsContainsNum )) - (( numOfOptionsToAppearInBoard  *  numOfOptionsInCell ) * ( countEmptyCellsInSquareContainsNum  *  countEmptyCellsInCols_ThatNotContainsNum ))) Max ((( countEmptyCellInCol  %  countEmptyCellInSquare ) Max ( countEmptyCellInSquare  /  countEmptyCellsInRowsContainsNum )) Max (( countEmptyCellsInSquareContainsNum  -  countEmptyCellsInColsContainsNum ) Min ( numOfOptionsToAppearInBoard  +  countEmptyCellInCol ))))),
8,15.0,2.0,9.05,Plus( Maximum( Minus( div( Multi( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum )  Mod( numOfOptionsToAppearInBoard  countEmptyCellsInSquareContainsNum ) )  Multi( Multi( numOfOptionsToAppearInBoard  numOfOptionsInCell )  Multi( countEmptyCellsInSquareContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) ) )  Maximum( Maximum( Mod( countEmptyCellInCol  countEmptyCellInSquare )  div( countEmptyCellInSquare  countEmptyCellsInRowsContainsNum ) )  Minimum( Minus( countEmptyCellsInSquareContainsNum  countEmptyCellsInColsContainsNum )  Plus( numOfOptionsToAppearInBoard  countEmptyCellInCol ) ) ) )  Maximum( Minus( Minus( Plus( numOfOptionsInCell  numOfOptionsToAppearInBoard )  Maximum( countEmptyCellsInSquareContainsNum  countEmptyCellsInRowsContainsNum ) )  Multi( Multi( numOfOptionsToAppearInBoard  numOfOptionsInCell )  Multi( countEmptyCellsInSquareContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) ) )  Maximum( Maximum( Mod( countEmptyCellInCol  countEmptyCellInSquare )  div( countEmptyCellInSquare  countEmptyCellsInRowsContainsNum ) )  Minimum( Minus( countEmptyCellsInSquareContainsNum  countEmptyCellsInColsContainsNum )  Plus( numOfOptionsToAppearInBoard  countEmptyCellInCol ) ) ) ) ),((((( countEmptyCellsInRows_ThatNotContainsNum  *  countEmptyCellsInCols_ThatNotContainsNum ) / ( numOfOptionsToAppearInBoard  %  countEmptyCellsInSquareContainsNum )) - (( numOfOptionsToAppearInBoard  *  numOfOptionsInCell ) * ( countEmptyCellsInSquareContainsNum  *  countEmptyCellsInCols_ThatNotContainsNum ))) Max ((( countEmptyCellInCol  %  countEmptyCellInSquare ) Max ( countEmptyCellInSquare  /  countEmptyCellsInRowsContainsNum )) Max (( countEmptyCellsInSquareContainsNum  -  countEmptyCellsInColsContainsNum ) Min ( numOfOptionsToAppearInBoard  +  countEmptyCellInCol )))) + (((( numOfOptionsInCell  +  numOfOptionsToAppearInBoard ) - ( countEmptyCellsInSquareContainsNum  Max  countEmptyCellsInRowsContainsNum )) - (( numOfOptionsToAppearInBoard  *  numOfOptionsInCell ) * ( countEmptyCellsInSquareContainsNum  *  countEmptyCellsInCols_ThatNotContainsNum ))) Max ((( countEmptyCellInCol  %  countEmptyCellInSquare ) Max ( countEmptyCellInSquare  /  countEmptyCellsInRowsContainsNum )) Max (( countEmptyCellsInSquareContainsNum  -  countEmptyCellsInColsContainsNum ) Min ( numOfOptionsToAppearInBoard  +  countEmptyCellInCol ))))),
9,18.0,2.0,9.01,Plus( Maximum( Minus( div( Multi( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum )  Mod( numOfOptionsToAppearInBoard  countEmptyCellsInSquareContainsNum ) )  Multi( Multi( numOfOptionsToAppearInBoard  numOfOptionsInCell )  Multi( countEmptyCellsInSquareContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) ) )  Maximum( Maximum( Mod( countEmptyCellInCol  countEmptyCellInSquare )  div( countEmptyCellInSquare  countEmptyCellsInRowsContainsNum ) )  Minimum( Minus( countEmptyCellsInSquareContainsNum  countEmptyCellsInColsContainsNum )  Plus( numOfOptionsToAppearInBoard  countEmptyCellInCol ) ) ) )  Mod( Mod( Plus( Maximum( numOfOptionsInCell  countEmptyCellsInSquare_ThatNotContainsNum )  Plus( countEmptyCellsInColsContainsNum  countEmptyCellsInColsContainsNum ) )  Multi( Mod( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellInSquare )  Minus( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) ) )  Mod( Mod( div( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum )  div( numOfOptionsInCell  countEmptyCellsInRows_ThatNotContainsNum ) )  Minus( Mod( countEmptyCellInCol  countEmptyCellInRow )  div( countEmptyCellInRow  countEmptyCellsInRowsContainsNum ) ) ) ) ),((((( countEmptyCellsInRows_ThatNotContainsNum  *  countEmptyCellsInCols_ThatNotContainsNum ) / ( numOfOptionsToAppearInBoard  %  countEmptyCellsInSquareContainsNum )) - (( numOfOptionsToAppearInBoard  *  numOfOptionsInCell ) * ( countEmptyCellsInSquareContainsNum  *  countEmptyCellsInCols_ThatNotContainsNum ))) Max ((( countEmptyCellInCol  %  countEmptyCellInSquare ) Max ( countEmptyCellInSquare  /  countEmptyCellsInRowsContainsNum )) Max (( countEmptyCellsInSquareContainsNum  -  countEmptyCellsInColsContainsNum ) Min ( numOfOptionsToAppearInBoard  +  countEmptyCellInCol )))) + (((( numOfOptionsInCell  Max  countEmptyCellsInSquare_ThatNotContainsNum ) + ( countEmptyCellsInColsContainsNum  +  countEmptyCellsInColsContainsNum )) % (( countEmptyCellsInCols_ThatNotContainsNum  %  countEmptyCellInSquare ) * ( countEmptyCellsInRows_ThatNotContainsNum  -  countEmptyCellsInRows_ThatNotContainsNum ))) % ((( countEmptyCellsInSquare_ThatNotContainsNum  /  countEmptyCellsInRows_ThatNotContainsNum ) % ( numOfOptionsInCell  /  countEmptyCellsInRows_ThatNotContainsNum )) % (( countEmptyCellInCol  %  countEmptyCellInRow ) - ( countEmptyCellInRow  /  countEmptyCellsInRowsContainsNum ))))),
10,19.0,2.0,8.46,Plus( Maximum( Minus( Minus( Plus( numOfOptionsInCell  numOfOptionsToAppearInBoard )  Maximum( countEmptyCellsInSquareContainsNum  countEmptyCellsInRowsContainsNum ) )  Multi( Multi( numOfOptionsToAppearInBoard  numOfOptionsInCell )  Multi( countEmptyCellsInSquareContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) ) )  Maximum( Maximum( Mod( countEmptyCellInCol  countEmptyCellInSquare )  div( countEmptyCellInSquare  countEmptyCellsInRowsContainsNum ) )  Minimum( Minus( countEmptyCellsInSquareContainsNum  countEmptyCellsInColsContainsNum )  Plus( numOfOptionsToAppearInBoard  countEmptyCellInCol ) ) ) )  Multi( Maximum( Mod( Plus( countEmptyCellsInRows_ThatNotContainsNum  numOfOptionsInCell )  Minus( numOfOptionsToAppearInBoard  numOfOptionsToAppearInBoard ) )  Maximum( div( countEmptyCellInCol  numOfOptionsInCell )  Multi( countEmptyCellInRow  countEmptyCellsInRows_ThatNotContainsNum ) ) )  div( Multi( div( countEmptyCellsInRowsContainsNum  countEmptyCellInSquare )  Multi( numOfOptionsInCell  countEmptyCellsInRows_ThatNotContainsNum ) )  Multi( Minus( numOfOptionsInCell  countEmptyCellInCol )  div( countEmptyCellInSquare  numOfOptionsToAppearInBoard ) ) ) ) ),((((( numOfOptionsInCell  +  numOfOptionsToAppearInBoard ) - ( countEmptyCellsInSquareContainsNum  Max  countEmptyCellsInRowsContainsNum )) - (( numOfOptionsToAppearInBoard  *  numOfOptionsInCell ) * ( countEmptyCellsInSquareContainsNum  *  countEmptyCellsInCols_ThatNotContainsNum ))) Max ((( countEmptyCellInCol  %  countEmptyCellInSquare ) Max ( countEmptyCellInSquare  /  countEmptyCellsInRowsContainsNum )) Max (( countEmptyCellsInSquareContainsNum  -  countEmptyCellsInColsContainsNum ) Min ( numOfOptionsToAppearInBoard  +  countEmptyCellInCol )))) + (((( countEmptyCellsInRows_ThatNotContainsNum  +  numOfOptionsInCell ) % ( numOfOptionsToAppearInBoard  -  numOfOptionsToAppearInBoard )) Max (( countEmptyCellInCol  /  numOfOptionsInCell ) Max ( countEmptyCellInRow  *  countEmptyCellsInRows_ThatNotContainsNum ))) * ((( countEmptyCellsInRowsContainsNum  /  countEmptyCellInSquare ) * ( numOfOptionsInCell  *  countEmptyCellsInRows_ThatNotContainsNum )) / (( numOfOptionsInCell  -  countEmptyCellInCol ) * ( countEmptyCellInSquare  /  numOfOptionsToAppearInBoard ))))),
11,17.0,0.0,8.09,Plus( Maximum( Multi( Multi( Multi( countEmptyCellInRow  numOfOptionsInCell )  Multi( numOfOptionsInCell  numOfOptionsInCell ) )  Mod( Multi( countEmptyCellInSquare  countEmptyCellsInSquareContainsNum )  Mod( countEmptyCellInRow  countEmptyCellInRow ) ) )  Maximum( Maximum( Mod( countEmptyCellInCol  countEmptyCellInSquare )  div( countEmptyCellInSquare  countEmptyCellsInRowsContainsNum ) )  Minimum( Minus( countEmptyCellsInSquareContainsNum  countEmptyCellsInColsContainsNum )  Plus( numOfOptionsToAppearInBoard  countEmptyCellInCol ) ) ) )  Minimum( Maximum( div( Mod( numOfOptionsToAppearInBoard  countEmptyCellInRow )  Minimum( countEmptyCellsInRowsContainsNum  countEmptyCellsInRowsContainsNum ) )  Minus( Minimum( countEmptyCellInCol  numOfOptionsToAppearInBoard )  Maximum( numOfOptionsToAppearInBoard  countEmptyCellsInColsContainsNum ) ) )  Multi( Multi( Mod( countEmptyCellInSquare  countEmptyCellInRow )  Plus( countEmptyCellsInColsContainsNum  countEmptyCellsInColsContainsNum ) )  Multi( Mod( countEmptyCellsInRowsContainsNum  countEmptyCellsInRowsContainsNum )  Mod( countEmptyCellsInRowsContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) ) ) ) ),((((( countEmptyCellInRow  *  numOfOptionsInCell ) * ( numOfOptionsInCell  *  numOfOptionsInCell )) * (( countEmptyCellInSquare  *  countEmptyCellsInSquareContainsNum ) % ( countEmptyCellInRow  %  countEmptyCellInRow ))) Max ((( countEmptyCellInCol  %  countEmptyCellInSquare ) Max ( countEmptyCellInSquare  /  countEmptyCellsInRowsContainsNum )) Max (( countEmptyCellsInSquareContainsNum  -  countEmptyCellsInColsContainsNum ) Min ( numOfOptionsToAppearInBoard  +  countEmptyCellInCol )))) + (((( numOfOptionsToAppearInBoard  %  countEmptyCellInRow ) / ( countEmptyCellsInRowsContainsNum  Min  countEmptyCellsInRowsContainsNum )) Max (( countEmptyCellInCol  Min  numOfOptionsToAppearInBoard ) - ( numOfOptionsToAppearInBoard  Max  countEmptyCellsInColsContainsNum ))) Min ((( countEmptyCellInSquare  %  countEmptyCellInRow ) * ( countEmptyCellsInColsContainsNum  +  countEmptyCellsInColsContainsNum )) * (( countEmptyCellsInRowsContainsNum  %  countEmptyCellsInRowsContainsNum ) * ( countEmptyCellsInRowsContainsNum  %  countEmptyCellsInCols_ThatNotContainsNum ))))),
