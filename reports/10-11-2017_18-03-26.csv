Genetic Sudoku Experiment
Experiment Time: 10/11/2017 18:03:26
Experiment Parameters:,
Original Empty Cells:,55,
Population Size:,100,
Max Generations:,100,
Crossover Probability:,0.7,
Mutation Probability:,0.3,
Percent of good individuals from population:,0.4,
,
Primitive Set:,
Plus,Minus,Multi,div,Mod,Maximum,Minimum,
Terminal Set:,
countEmptyCellInRow,countEmptyCellInCol,countEmptyCellInSquare,numOfOptionsInCell,numOfOptionsToAppearInBoard,countEmptyCellsInRowsContainsNum,countEmptyCellsInColsContainsNum,countEmptyCellsInSquareContainsNum,countEmptyCellsInRows_ThatNotContainsNum,countEmptyCellsInCols_ThatNotContainsNum,countEmptyCellsInSquare_ThatNotContainsNum,
,
,
Generation,Worst Individual Fitness,Best Individual Fitness,Average Fitness,Best Individual Tree - Prefix,Best Individual Tree - Infix,
0,19.0,4.0,11.41,Minus( div( Mod( Minimum( Maximum( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellInSquare )  div( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInCol ) )  Multi( Minimum( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInRow )  Minimum( numOfOptionsInCell  countEmptyCellsInCols_ThatNotContainsNum ) ) )  Minus( Minimum( Minus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellInCol )  Maximum( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInColsContainsNum ) )  Plus( Minimum( numOfOptionsInCell  countEmptyCellsInSquare_ThatNotContainsNum )  Mod( countEmptyCellInSquare  numOfOptionsToAppearInBoard ) ) ) )  Plus( Minus( Minus( div( numOfOptionsInCell  countEmptyCellInRow )  Maximum( countEmptyCellsInColsContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) )  Minus( Minimum( numOfOptionsToAppearInBoard  numOfOptionsToAppearInBoard )  Minimum( countEmptyCellsInColsContainsNum  countEmptyCellsInSquareContainsNum ) ) )  Maximum( Maximum( div( countEmptyCellsInRowsContainsNum  countEmptyCellsInColsContainsNum )  Maximum( countEmptyCellInSquare  countEmptyCellInCol ) )  Maximum( Multi( numOfOptionsInCell  countEmptyCellsInRowsContainsNum )  Minimum( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) ) ) ) ),((((( countEmptyCellsInSquare_ThatNotContainsNum  Max  countEmptyCellInSquare ) Min ( countEmptyCellsInRows_ThatNotContainsNum  /  countEmptyCellInCol )) % (( countEmptyCellsInRows_ThatNotContainsNum  Min  countEmptyCellInRow ) * ( numOfOptionsInCell  Min  countEmptyCellsInCols_ThatNotContainsNum ))) / ((( countEmptyCellsInCols_ThatNotContainsNum  -  countEmptyCellInCol ) Min ( countEmptyCellsInCols_ThatNotContainsNum  Max  countEmptyCellsInColsContainsNum )) - (( numOfOptionsInCell  Min  countEmptyCellsInSquare_ThatNotContainsNum ) + ( countEmptyCellInSquare  %  numOfOptionsToAppearInBoard )))) - (((( numOfOptionsInCell  /  countEmptyCellInRow ) - ( countEmptyCellsInColsContainsNum  Max  countEmptyCellsInCols_ThatNotContainsNum )) - (( numOfOptionsToAppearInBoard  Min  numOfOptionsToAppearInBoard ) - ( countEmptyCellsInColsContainsNum  Min  countEmptyCellsInSquareContainsNum ))) + ((( countEmptyCellsInRowsContainsNum  /  countEmptyCellsInColsContainsNum ) Max ( countEmptyCellInSquare  Max  countEmptyCellInCol )) Max (( numOfOptionsInCell  *  countEmptyCellsInRowsContainsNum ) Max ( countEmptyCellsInCols_ThatNotContainsNum  Min  countEmptyCellsInRowsContainsNum ))))),
1,17.0,4.0,11.04,Plus( Minus( Minimum( Plus( Minimum( countEmptyCellsInRowsContainsNum  countEmptyCellsInCols_ThatNotContainsNum )  Mod( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) )  Maximum( Minus( countEmptyCellInRow  countEmptyCellsInSquareContainsNum )  Minimum( countEmptyCellsInColsContainsNum  countEmptyCellsInSquare_ThatNotContainsNum ) ) )  Plus( Minus( Maximum( countEmptyCellsInRowsContainsNum  countEmptyCellsInColsContainsNum )  Minus( numOfOptionsToAppearInBoard  countEmptyCellsInRows_ThatNotContainsNum ) )  div( Maximum( countEmptyCellInCol  countEmptyCellInCol )  Plus( countEmptyCellsInSquare_ThatNotContainsNum  numOfOptionsToAppearInBoard ) ) ) )  Minus( Minus( Multi( Plus( countEmptyCellsInColsContainsNum  numOfOptionsInCell )  div( numOfOptionsToAppearInBoard  numOfOptionsInCell ) )  Minus( Plus( numOfOptionsToAppearInBoard  countEmptyCellsInCols_ThatNotContainsNum )  Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) ) )  Mod( div( Minimum( numOfOptionsToAppearInBoard  numOfOptionsInCell )  Mod( numOfOptionsToAppearInBoard  countEmptyCellsInColsContainsNum ) )  Multi( Plus( countEmptyCellInCol  countEmptyCellsInColsContainsNum )  Maximum( numOfOptionsInCell  countEmptyCellInCol ) ) ) ) ),((((( countEmptyCellsInRowsContainsNum  Min  countEmptyCellsInCols_ThatNotContainsNum ) + ( countEmptyCellsInCols_ThatNotContainsNum  %  countEmptyCellsInCols_ThatNotContainsNum )) Min (( countEmptyCellInRow  -  countEmptyCellsInSquareContainsNum ) Max ( countEmptyCellsInColsContainsNum  Min  countEmptyCellsInSquare_ThatNotContainsNum ))) - ((( countEmptyCellsInRowsContainsNum  Max  countEmptyCellsInColsContainsNum ) - ( numOfOptionsToAppearInBoard  -  countEmptyCellsInRows_ThatNotContainsNum )) + (( countEmptyCellInCol  Max  countEmptyCellInCol ) / ( countEmptyCellsInSquare_ThatNotContainsNum  +  numOfOptionsToAppearInBoard )))) + (((( countEmptyCellsInColsContainsNum  +  numOfOptionsInCell ) * ( numOfOptionsToAppearInBoard  /  numOfOptionsInCell )) - (( numOfOptionsToAppearInBoard  +  countEmptyCellsInCols_ThatNotContainsNum ) - ( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellsInCols_ThatNotContainsNum ))) - ((( numOfOptionsToAppearInBoard  Min  numOfOptionsInCell ) / ( numOfOptionsToAppearInBoard  %  countEmptyCellsInColsContainsNum )) % (( countEmptyCellInCol  +  countEmptyCellsInColsContainsNum ) * ( numOfOptionsInCell  Max  countEmptyCellInCol ))))),
2,20.0,3.0,11.29,Minus( Plus( div( Mod( div( countEmptyCellInSquare  countEmptyCellsInCols_ThatNotContainsNum )  Minimum( countEmptyCellsInColsContainsNum  countEmptyCellsInSquareContainsNum ) )  Mod( Minimum( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInCol )  div( countEmptyCellsInRowsContainsNum  countEmptyCellInCol ) ) )  Plus( Multi( Multi( countEmptyCellsInRowsContainsNum  numOfOptionsInCell )  Plus( countEmptyCellsInColsContainsNum  numOfOptionsInCell ) )  div( Multi( countEmptyCellInSquare  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInRowsContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) ) ) )  div( Maximum( Mod( Minus( numOfOptionsToAppearInBoard  countEmptyCellInRow )  Plus( countEmptyCellsInColsContainsNum  countEmptyCellInRow ) )  Maximum( Plus( countEmptyCellInSquare  countEmptyCellInCol )  Plus( numOfOptionsInCell  countEmptyCellInCol ) ) )  Maximum( Plus( Mod( countEmptyCellsInColsContainsNum  countEmptyCellsInRows_ThatNotContainsNum )  Minimum( numOfOptionsToAppearInBoard  countEmptyCellsInRowsContainsNum ) )  Plus( Minus( countEmptyCellInRow  numOfOptionsInCell )  Maximum( numOfOptionsInCell  countEmptyCellsInRows_ThatNotContainsNum ) ) ) ) ),((((( countEmptyCellInSquare  /  countEmptyCellsInCols_ThatNotContainsNum ) % ( countEmptyCellsInColsContainsNum  Min  countEmptyCellsInSquareContainsNum )) / (( countEmptyCellsInRows_ThatNotContainsNum  Min  countEmptyCellInCol ) % ( countEmptyCellsInRowsContainsNum  /  countEmptyCellInCol ))) + ((( countEmptyCellsInRowsContainsNum  *  numOfOptionsInCell ) * ( countEmptyCellsInColsContainsNum  +  numOfOptionsInCell )) + (( countEmptyCellInSquare  *  numOfOptionsToAppearInBoard ) / ( countEmptyCellsInRowsContainsNum  *  countEmptyCellsInRows_ThatNotContainsNum )))) - (((( numOfOptionsToAppearInBoard  -  countEmptyCellInRow ) % ( countEmptyCellsInColsContainsNum  +  countEmptyCellInRow )) Max (( countEmptyCellInSquare  +  countEmptyCellInCol ) Max ( numOfOptionsInCell  +  countEmptyCellInCol ))) / ((( countEmptyCellsInColsContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum ) + ( numOfOptionsToAppearInBoard  Min  countEmptyCellsInRowsContainsNum )) Max (( countEmptyCellInRow  -  numOfOptionsInCell ) + ( numOfOptionsInCell  Max  countEmptyCellsInRows_ThatNotContainsNum ))))),
