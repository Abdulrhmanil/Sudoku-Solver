Genetic Sudoku Experiment
Experiment Time: 07/11/2017 16:53:30
Experiment Parameters:,
Original Empty Cells:,47,
Population Size:,100,
Max Generations:,100,
Crossover Probability:,0.7,
Mutation Probability:,0.3,
Percent of good individuals from population:,0.4,
,
Primitive Set:,
Plus,Minus,Multi,div,Mod,Maximum,Minimum,
Terminal Set:,
countEmptyCellInRow,countEmptyCellInCol,countEmptyCellInSquare,numOfOptionsInCell,numOfOptionsToAppearInBoard,countEmptyCellsInRowsContainsNum,countEmptyCellsInColsContainsNum,countEmptyCellsInSquareContainsNum,countEmptyCellsInRows_ThatNotContainsNum,countEmptyCellsInCols_ThatNotContainsNum,countEmptyCellsInSquare_ThatNotContainsNum,
,
,
Generation,Worst Individual Fitness,Best Individual Fitness,Average Fitness,Best Individual Tree - Prefix,Best Individual Tree - Infix,
0,16.0,0.0,10.14,Minimum( Plus( Maximum( Minimum( Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInColsContainsNum )  Minimum( numOfOptionsToAppearInBoard  countEmptyCellsInSquare_ThatNotContainsNum ) )  Plus( div( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInSquareContainsNum )  Multi( countEmptyCellInSquare  countEmptyCellsInColsContainsNum ) ) )  Plus( Multi( Multi( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInColsContainsNum )  Maximum( countEmptyCellsInRowsContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) )  Mod( Minus( countEmptyCellsInColsContainsNum  countEmptyCellInRow )  Multi( countEmptyCellsInRows_ThatNotContainsNum  numOfOptionsInCell ) ) ) )  Minimum( Minimum( Maximum( Minimum( countEmptyCellsInColsContainsNum  numOfOptionsInCell )  Minimum( numOfOptionsToAppearInBoard  numOfOptionsInCell ) )  Maximum( Maximum( numOfOptionsToAppearInBoard  countEmptyCellsInSquareContainsNum )  Minus( numOfOptionsInCell  countEmptyCellInSquare ) ) )  Maximum( Plus( Plus( countEmptyCellInSquare  countEmptyCellsInCols_ThatNotContainsNum )  Minus( numOfOptionsToAppearInBoard  countEmptyCellsInColsContainsNum ) )  Multi( Plus( numOfOptionsToAppearInBoard  numOfOptionsInCell )  Minimum( countEmptyCellInCol  countEmptyCellInCol ) ) ) ) ),((((( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInColsContainsNum ) Min ( numOfOptionsToAppearInBoard  Min  countEmptyCellsInSquare_ThatNotContainsNum )) Max (( countEmptyCellsInCols_ThatNotContainsNum  /  countEmptyCellsInSquareContainsNum ) + ( countEmptyCellInSquare  *  countEmptyCellsInColsContainsNum ))) + ((( countEmptyCellsInRows_ThatNotContainsNum  *  countEmptyCellsInColsContainsNum ) * ( countEmptyCellsInRowsContainsNum  Max  countEmptyCellsInCols_ThatNotContainsNum )) + (( countEmptyCellsInColsContainsNum  -  countEmptyCellInRow ) % ( countEmptyCellsInRows_ThatNotContainsNum  *  numOfOptionsInCell )))) Min (((( countEmptyCellsInColsContainsNum  Min  numOfOptionsInCell ) Max ( numOfOptionsToAppearInBoard  Min  numOfOptionsInCell )) Min (( numOfOptionsToAppearInBoard  Max  countEmptyCellsInSquareContainsNum ) Max ( numOfOptionsInCell  -  countEmptyCellInSquare ))) Min ((( countEmptyCellInSquare  +  countEmptyCellsInCols_ThatNotContainsNum ) + ( numOfOptionsToAppearInBoard  -  countEmptyCellsInColsContainsNum )) Max (( numOfOptionsToAppearInBoard  +  numOfOptionsInCell ) * ( countEmptyCellInCol  Min  countEmptyCellInCol ))))),
