Genetic Sudoku Experiment
Experiment Time: 23/06/2016 17:37:11
Expirement Parameters:,
Orginal Empty Cells:,55,
Population Size:,100,
Max Generations:,50,
Crossover Probability:,0.0,
Mutation Probability:,0.8,
Percent of good indviduals from population:,0.5,
,
Primitive Set:,
Plus,Minus,Multi,div,Mod,Maximum,Minimum,
Terminal Set:,
countEmptyCellInRow,countEmptyCellInCol,countEmptyCellInSquare,NumOfOptionsInCell,numOfOptionsToAppearInBoard,countEmptyCellsInRowsContainsNum,countEmptyCellsInColsContainsNum,countEmptyCellsInSquareContainsNum,countEmptyCellsInRows_ThatNotContainsNum,countEmptyCellsInCols_ThatNotContainsNum,countEmptyCellsInSquare_ThatNotContainsNum,
,
,
Generation,Worst Individual Fitness,Best Individual Fitness,Average Fitness,Best Individual Tree - Prefix,Best Individual Tree - Infix,
0,21.0,5.0,11.9,Multi( Minus( Minus( Maximum( Minus( countEmptyCellInCol  countEmptyCellInCol )  Minimum( NumOfOptionsInCell  countEmptyCellsInCols_ThatNotContainsNum ) )  div( Minus( countEmptyCellsInSquareContainsNum  countEmptyCellsInSquareContainsNum )  div( countEmptyCellInCol  countEmptyCellInRow ) ) )  Minimum( div( Plus( countEmptyCellsInSquareContainsNum  NumOfOptionsInCell )  Multi( countEmptyCellInSquare  countEmptyCellInCol ) )  Plus( Minus( countEmptyCellInRow  countEmptyCellsInColsContainsNum )  Plus( numOfOptionsToAppearInBoard  countEmptyCellsInColsContainsNum ) ) ) )  Minus( Maximum( Maximum( Minimum( countEmptyCellsInRowsContainsNum  numOfOptionsToAppearInBoard )  Minimum( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellInCol ) )  Multi( Minus( countEmptyCellInCol  countEmptyCellInCol )  Maximum( countEmptyCellInCol  countEmptyCellInRow ) ) )  Minimum( Maximum( Mod( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellInRow )  Multi( countEmptyCellsInColsContainsNum  countEmptyCellInRow ) )  div( Maximum( countEmptyCellsInRowsContainsNum  numOfOptionsToAppearInBoard )  Multi( NumOfOptionsInCell  numOfOptionsToAppearInBoard ) ) ) ) ),((((( countEmptyCellInCol  -  countEmptyCellInCol ) Max ( NumOfOptionsInCell  Min  countEmptyCellsInCols_ThatNotContainsNum )) - (( countEmptyCellsInSquareContainsNum  -  countEmptyCellsInSquareContainsNum ) / ( countEmptyCellInCol  /  countEmptyCellInRow ))) - ((( countEmptyCellsInSquareContainsNum  +  NumOfOptionsInCell ) / ( countEmptyCellInSquare  *  countEmptyCellInCol )) Min (( countEmptyCellInRow  -  countEmptyCellsInColsContainsNum ) + ( numOfOptionsToAppearInBoard  +  countEmptyCellsInColsContainsNum )))) * (((( countEmptyCellsInRowsContainsNum  Min  numOfOptionsToAppearInBoard ) Max ( countEmptyCellsInCols_ThatNotContainsNum  Min  countEmptyCellInCol )) Max (( countEmptyCellInCol  -  countEmptyCellInCol ) * ( countEmptyCellInCol  Max  countEmptyCellInRow ))) - ((( countEmptyCellsInCols_ThatNotContainsNum  %  countEmptyCellInRow ) Max ( countEmptyCellsInColsContainsNum  *  countEmptyCellInRow )) Min (( countEmptyCellsInRowsContainsNum  Max  numOfOptionsToAppearInBoard ) / ( NumOfOptionsInCell  *  numOfOptionsToAppearInBoard ))))),
1,21.0,3.0,11.84,Maximum( Plus( Mod( Minimum( Minus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellInSquare )  Multi( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInColsContainsNum ) )  Maximum( Multi( countEmptyCellInSquare  countEmptyCellInSquare )  Minus( countEmptyCellsInSquareContainsNum  NumOfOptionsInCell ) ) )  Maximum( Mod( Minus( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum )  Maximum( NumOfOptionsInCell  countEmptyCellInRow ) )  Multi( Plus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellInCol )  Mod( countEmptyCellInSquare  countEmptyCellInCol ) ) ) )  Minus( Plus( Minimum( Mod( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRowsContainsNum )  Multi( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInSquare ) )  Minimum( Minimum( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInSquareContainsNum )  div( NumOfOptionsInCell  countEmptyCellsInRows_ThatNotContainsNum ) ) )  Plus( Maximum( Minimum( countEmptyCellInCol  countEmptyCellsInRows_ThatNotContainsNum )  Multi( countEmptyCellInCol  countEmptyCellsInRowsContainsNum ) )  Maximum( div( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum )  Multi( countEmptyCellsInRows_ThatNotContainsNum  NumOfOptionsInCell ) ) ) ) ),((((( countEmptyCellsInCols_ThatNotContainsNum  -  countEmptyCellInSquare ) Min ( countEmptyCellsInCols_ThatNotContainsNum  *  countEmptyCellsInColsContainsNum )) % (( countEmptyCellInSquare  *  countEmptyCellInSquare ) Max ( countEmptyCellsInSquareContainsNum  -  NumOfOptionsInCell ))) + ((( countEmptyCellsInRows_ThatNotContainsNum  -  countEmptyCellsInRows_ThatNotContainsNum ) % ( NumOfOptionsInCell  Max  countEmptyCellInRow )) Max (( countEmptyCellsInCols_ThatNotContainsNum  +  countEmptyCellInCol ) * ( countEmptyCellInSquare  %  countEmptyCellInCol )))) Max (((( countEmptyCellsInSquare_ThatNotContainsNum  %  countEmptyCellsInRowsContainsNum ) Min ( countEmptyCellsInRows_ThatNotContainsNum  *  countEmptyCellInSquare )) + (( countEmptyCellsInSquare_ThatNotContainsNum  Min  countEmptyCellsInSquareContainsNum ) Min ( NumOfOptionsInCell  /  countEmptyCellsInRows_ThatNotContainsNum ))) - ((( countEmptyCellInCol  Min  countEmptyCellsInRows_ThatNotContainsNum ) Max ( countEmptyCellInCol  *  countEmptyCellsInRowsContainsNum )) + (( countEmptyCellsInCols_ThatNotContainsNum  /  countEmptyCellsInRows_ThatNotContainsNum ) Max ( countEmptyCellsInRows_ThatNotContainsNum  *  NumOfOptionsInCell ))))),
2,20.0,4.0,12.04,Multi( Minimum( Minus( Mod( Plus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum )  Minimum( numOfOptionsToAppearInBoard  numOfOptionsToAppearInBoard ) )  Maximum( Multi( countEmptyCellInCol  NumOfOptionsInCell )  div( countEmptyCellsInColsContainsNum  countEmptyCellInRow ) ) )  Plus( Minus( div( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInCol )  Minus( countEmptyCellInRow  numOfOptionsToAppearInBoard ) )  Multi( div( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInRowsContainsNum )  Plus( numOfOptionsToAppearInBoard  countEmptyCellsInRows_ThatNotContainsNum ) ) ) )  Plus( Mod( Multi( Plus( countEmptyCellInCol  countEmptyCellsInColsContainsNum )  Plus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInColsContainsNum ) )  Multi( Multi( NumOfOptionsInCell  countEmptyCellsInRowsContainsNum )  Plus( countEmptyCellInRow  countEmptyCellsInSquareContainsNum ) ) )  Plus( Maximum( Multi( NumOfOptionsInCell  countEmptyCellsInCols_ThatNotContainsNum )  Minus( NumOfOptionsInCell  countEmptyCellsInCols_ThatNotContainsNum ) )  Multi( div( countEmptyCellInRow  countEmptyCellInRow )  Plus( countEmptyCellsInSquareContainsNum  countEmptyCellInRow ) ) ) ) ),((((( countEmptyCellsInCols_ThatNotContainsNum  +  countEmptyCellsInCols_ThatNotContainsNum ) % ( numOfOptionsToAppearInBoard  Min  numOfOptionsToAppearInBoard )) - (( countEmptyCellInCol  *  NumOfOptionsInCell ) Max ( countEmptyCellsInColsContainsNum  /  countEmptyCellInRow ))) Min ((( countEmptyCellsInRows_ThatNotContainsNum  /  countEmptyCellInCol ) - ( countEmptyCellInRow  -  numOfOptionsToAppearInBoard )) + (( countEmptyCellsInCols_ThatNotContainsNum  /  countEmptyCellsInRowsContainsNum ) * ( numOfOptionsToAppearInBoard  +  countEmptyCellsInRows_ThatNotContainsNum )))) * (((( countEmptyCellInCol  +  countEmptyCellsInColsContainsNum ) * ( countEmptyCellsInCols_ThatNotContainsNum  +  countEmptyCellsInColsContainsNum )) % (( NumOfOptionsInCell  *  countEmptyCellsInRowsContainsNum ) * ( countEmptyCellInRow  +  countEmptyCellsInSquareContainsNum ))) + ((( NumOfOptionsInCell  *  countEmptyCellsInCols_ThatNotContainsNum ) Max ( NumOfOptionsInCell  -  countEmptyCellsInCols_ThatNotContainsNum )) + (( countEmptyCellInRow  /  countEmptyCellInRow ) * ( countEmptyCellsInSquareContainsNum  +  countEmptyCellInRow ))))),
3,20.0,4.0,11.7,Multi( div( Minimum( Minimum( Plus( numOfOptionsToAppearInBoard  countEmptyCellsInColsContainsNum )  Minimum( numOfOptionsToAppearInBoard  countEmptyCellsInSquare_ThatNotContainsNum ) )  Maximum( Minus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum )  Maximum( numOfOptionsToAppearInBoard  countEmptyCellInSquare ) ) )  Plus( Minimum( Multi( countEmptyCellsInColsContainsNum  countEmptyCellInRow )  Multi( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) )  div( Multi( countEmptyCellInRow  countEmptyCellsInRowsContainsNum )  Minimum( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInCol ) ) ) )  div( Minus( Multi( Plus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellInCol )  Plus( countEmptyCellInCol  countEmptyCellsInRowsContainsNum ) )  Minus( div( countEmptyCellsInSquareContainsNum  countEmptyCellInCol )  Mod( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) ) )  Minus( div( Multi( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum )  Minimum( countEmptyCellInCol  NumOfOptionsInCell ) )  Minus( Plus( countEmptyCellsInRowsContainsNum  numOfOptionsToAppearInBoard )  Maximum( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInRow ) ) ) ) ),((((( numOfOptionsToAppearInBoard  +  countEmptyCellsInColsContainsNum ) Min ( numOfOptionsToAppearInBoard  Min  countEmptyCellsInSquare_ThatNotContainsNum )) Min (( countEmptyCellsInCols_ThatNotContainsNum  -  countEmptyCellsInCols_ThatNotContainsNum ) Max ( numOfOptionsToAppearInBoard  Max  countEmptyCellInSquare ))) / ((( countEmptyCellsInColsContainsNum  *  countEmptyCellInRow ) Min ( countEmptyCellsInRows_ThatNotContainsNum  *  countEmptyCellsInRowsContainsNum )) + (( countEmptyCellInRow  *  countEmptyCellsInRowsContainsNum ) / ( countEmptyCellsInRows_ThatNotContainsNum  Min  countEmptyCellInCol )))) * (((( countEmptyCellsInCols_ThatNotContainsNum  +  countEmptyCellInCol ) * ( countEmptyCellInCol  +  countEmptyCellsInRowsContainsNum )) - (( countEmptyCellsInSquareContainsNum  /  countEmptyCellInCol ) - ( countEmptyCellsInCols_ThatNotContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum ))) / ((( countEmptyCellsInRows_ThatNotContainsNum  *  countEmptyCellsInCols_ThatNotContainsNum ) / ( countEmptyCellInCol  Min  NumOfOptionsInCell )) - (( countEmptyCellsInRowsContainsNum  +  numOfOptionsToAppearInBoard ) - ( countEmptyCellsInRows_ThatNotContainsNum  Max  countEmptyCellInRow ))))),
4,20.0,4.0,11.93,Plus( div( Multi( Multi( Plus( countEmptyCellsInRowsContainsNum  countEmptyCellsInSquare_ThatNotContainsNum )  Minimum( NumOfOptionsInCell  countEmptyCellsInSquareContainsNum ) )  Plus( Minimum( countEmptyCellInRow  NumOfOptionsInCell )  div( countEmptyCellsInRowsContainsNum  countEmptyCellInSquare ) ) )  Multi( div( Maximum( NumOfOptionsInCell  countEmptyCellsInColsContainsNum )  Plus( countEmptyCellInCol  countEmptyCellsInColsContainsNum ) )  div( Plus( countEmptyCellInRow  numOfOptionsToAppearInBoard )  Maximum( countEmptyCellsInColsContainsNum  countEmptyCellInRow ) ) ) )  Minus( div( Minus( Plus( countEmptyCellInRow  numOfOptionsToAppearInBoard )  Minimum( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) )  div( Plus( numOfOptionsToAppearInBoard  countEmptyCellsInRows_ThatNotContainsNum )  div( countEmptyCellsInRowsContainsNum  countEmptyCellInSquare ) ) )  Minus( Maximum( Minus( countEmptyCellInCol  countEmptyCellsInRowsContainsNum )  Multi( countEmptyCellsInRowsContainsNum  numOfOptionsToAppearInBoard ) )  Plus( div( NumOfOptionsInCell  countEmptyCellInSquare )  div( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInColsContainsNum ) ) ) ) ),((((( countEmptyCellsInRowsContainsNum  +  countEmptyCellsInSquare_ThatNotContainsNum ) * ( NumOfOptionsInCell  Min  countEmptyCellsInSquareContainsNum )) * (( countEmptyCellInRow  Min  NumOfOptionsInCell ) + ( countEmptyCellsInRowsContainsNum  /  countEmptyCellInSquare ))) / ((( NumOfOptionsInCell  Max  countEmptyCellsInColsContainsNum ) / ( countEmptyCellInCol  +  countEmptyCellsInColsContainsNum )) * (( countEmptyCellInRow  +  numOfOptionsToAppearInBoard ) / ( countEmptyCellsInColsContainsNum  Max  countEmptyCellInRow )))) + (((( countEmptyCellInRow  +  numOfOptionsToAppearInBoard ) - ( countEmptyCellsInRows_ThatNotContainsNum  Min  countEmptyCellsInCols_ThatNotContainsNum )) / (( numOfOptionsToAppearInBoard  +  countEmptyCellsInRows_ThatNotContainsNum ) / ( countEmptyCellsInRowsContainsNum  /  countEmptyCellInSquare ))) - ((( countEmptyCellInCol  -  countEmptyCellsInRowsContainsNum ) Max ( countEmptyCellsInRowsContainsNum  *  numOfOptionsToAppearInBoard )) - (( NumOfOptionsInCell  /  countEmptyCellInSquare ) + ( countEmptyCellsInSquare_ThatNotContainsNum  /  countEmptyCellsInColsContainsNum ))))),
5,21.0,2.0,12.24,Minus( Mod( div( Mod( Multi( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInSquare_ThatNotContainsNum )  Maximum( countEmptyCellInRow  countEmptyCellInCol ) )  Minus( Mod( countEmptyCellInCol  countEmptyCellInCol )  Plus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) ) )  Plus( Minus( Mod( countEmptyCellInCol  countEmptyCellInRow )  Minus( countEmptyCellInCol  numOfOptionsToAppearInBoard ) )  Minus( Maximum( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellInRow )  Maximum( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInSquareContainsNum ) ) ) )  Minus( Mod( Maximum( Minus( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRowsContainsNum )  Plus( countEmptyCellInSquare  countEmptyCellsInRowsContainsNum ) )  Minimum( Multi( countEmptyCellInCol  countEmptyCellsInRowsContainsNum )  Multi( NumOfOptionsInCell  countEmptyCellsInCols_ThatNotContainsNum ) ) )  div( div( Minus( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInSquareContainsNum )  Maximum( countEmptyCellsInRowsContainsNum  countEmptyCellInSquare ) )  Mod( div( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRowsContainsNum )  Maximum( countEmptyCellsInCols_ThatNotContainsNum  NumOfOptionsInCell ) ) ) ) ),((((( countEmptyCellsInCols_ThatNotContainsNum  *  countEmptyCellsInSquare_ThatNotContainsNum ) % ( countEmptyCellInRow  Max  countEmptyCellInCol )) / (( countEmptyCellInCol  %  countEmptyCellInCol ) - ( countEmptyCellsInCols_ThatNotContainsNum  +  countEmptyCellsInCols_ThatNotContainsNum ))) % ((( countEmptyCellInCol  %  countEmptyCellInRow ) - ( countEmptyCellInCol  -  numOfOptionsToAppearInBoard )) + (( countEmptyCellsInSquare_ThatNotContainsNum  Max  countEmptyCellInRow ) - ( countEmptyCellsInSquare_ThatNotContainsNum  Max  countEmptyCellsInSquareContainsNum )))) - (((( countEmptyCellsInSquare_ThatNotContainsNum  -  countEmptyCellsInRowsContainsNum ) Max ( countEmptyCellInSquare  +  countEmptyCellsInRowsContainsNum )) % (( countEmptyCellInCol  *  countEmptyCellsInRowsContainsNum ) Min ( NumOfOptionsInCell  *  countEmptyCellsInCols_ThatNotContainsNum ))) - ((( countEmptyCellsInRows_ThatNotContainsNum  -  countEmptyCellsInSquareContainsNum ) / ( countEmptyCellsInRowsContainsNum  Max  countEmptyCellInSquare )) / (( countEmptyCellsInRows_ThatNotContainsNum  /  countEmptyCellsInRowsContainsNum ) % ( countEmptyCellsInCols_ThatNotContainsNum  Max  NumOfOptionsInCell ))))),
6,20.0,3.0,12.29,Minus( div( Maximum( Minimum( Minus( numOfOptionsToAppearInBoard  countEmptyCellsInSquareContainsNum )  Maximum( countEmptyCellsInColsContainsNum  NumOfOptionsInCell ) )  Multi( Plus( countEmptyCellsInSquareContainsNum  countEmptyCellInCol )  Minus( countEmptyCellsInSquareContainsNum  countEmptyCellsInSquareContainsNum ) ) )  div( Maximum( div( countEmptyCellsInRowsContainsNum  countEmptyCellInRow )  Maximum( countEmptyCellsInColsContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  Plus( div( countEmptyCellInRow  countEmptyCellsInSquare_ThatNotContainsNum )  div( countEmptyCellsInRows_ThatNotContainsNum  NumOfOptionsInCell ) ) ) )  Maximum( Multi( Minimum( Maximum( countEmptyCellsInSquareContainsNum  countEmptyCellsInRowsContainsNum )  div( NumOfOptionsInCell  NumOfOptionsInCell ) )  div( Maximum( countEmptyCellsInRowsContainsNum  countEmptyCellsInSquareContainsNum )  Minimum( countEmptyCellsInColsContainsNum  countEmptyCellsInColsContainsNum ) ) )  Mod( Minimum( Multi( countEmptyCellInCol  countEmptyCellsInRows_ThatNotContainsNum )  Minus( numOfOptionsToAppearInBoard  countEmptyCellsInSquareContainsNum ) )  Multi( div( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum )  Multi( countEmptyCellsInSquareContainsNum  countEmptyCellsInSquare_ThatNotContainsNum ) ) ) ) ),((((( numOfOptionsToAppearInBoard  -  countEmptyCellsInSquareContainsNum ) Min ( countEmptyCellsInColsContainsNum  Max  NumOfOptionsInCell )) Max (( countEmptyCellsInSquareContainsNum  +  countEmptyCellInCol ) * ( countEmptyCellsInSquareContainsNum  -  countEmptyCellsInSquareContainsNum ))) / ((( countEmptyCellsInRowsContainsNum  /  countEmptyCellInRow ) Max ( countEmptyCellsInColsContainsNum  Max  countEmptyCellsInRows_ThatNotContainsNum )) / (( countEmptyCellInRow  /  countEmptyCellsInSquare_ThatNotContainsNum ) + ( countEmptyCellsInRows_ThatNotContainsNum  /  NumOfOptionsInCell )))) - (((( countEmptyCellsInSquareContainsNum  Max  countEmptyCellsInRowsContainsNum ) Min ( NumOfOptionsInCell  /  NumOfOptionsInCell )) * (( countEmptyCellsInRowsContainsNum  Max  countEmptyCellsInSquareContainsNum ) / ( countEmptyCellsInColsContainsNum  Min  countEmptyCellsInColsContainsNum ))) Max ((( countEmptyCellInCol  *  countEmptyCellsInRows_ThatNotContainsNum ) Min ( numOfOptionsToAppearInBoard  -  countEmptyCellsInSquareContainsNum )) % (( countEmptyCellsInSquare_ThatNotContainsNum  /  countEmptyCellsInCols_ThatNotContainsNum ) * ( countEmptyCellsInSquareContainsNum  *  countEmptyCellsInSquare_ThatNotContainsNum ))))),
7,20.0,4.0,12.69,Minimum( Maximum( Plus( Plus( Minus( countEmptyCellsInRows_ThatNotContainsNum  NumOfOptionsInCell )  div( numOfOptionsToAppearInBoard  countEmptyCellsInSquareContainsNum ) )  div( Maximum( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRowsContainsNum )  Minus( countEmptyCellInRow  countEmptyCellsInSquare_ThatNotContainsNum ) ) )  Minus( Minimum( div( numOfOptionsToAppearInBoard  countEmptyCellsInColsContainsNum )  Multi( countEmptyCellsInSquareContainsNum  countEmptyCellInRow ) )  div( Minus( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum )  Minus( countEmptyCellInCol  NumOfOptionsInCell ) ) ) )  div( div( div( Minimum( NumOfOptionsInCell  countEmptyCellsInSquare_ThatNotContainsNum )  Mod( numOfOptionsToAppearInBoard  countEmptyCellsInColsContainsNum ) )  Maximum( Plus( numOfOptionsToAppearInBoard  countEmptyCellInRow )  Plus( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellInCol ) ) )  div( Multi( Mod( countEmptyCellInRow  countEmptyCellInRow )  Multi( countEmptyCellInCol  NumOfOptionsInCell ) )  Plus( Minus( numOfOptionsToAppearInBoard  numOfOptionsToAppearInBoard )  Mod( countEmptyCellsInColsContainsNum  countEmptyCellInSquare ) ) ) ) ),((((( countEmptyCellsInRows_ThatNotContainsNum  -  NumOfOptionsInCell ) + ( numOfOptionsToAppearInBoard  /  countEmptyCellsInSquareContainsNum )) + (( countEmptyCellsInRows_ThatNotContainsNum  Max  countEmptyCellsInRowsContainsNum ) / ( countEmptyCellInRow  -  countEmptyCellsInSquare_ThatNotContainsNum ))) Max ((( numOfOptionsToAppearInBoard  /  countEmptyCellsInColsContainsNum ) Min ( countEmptyCellsInSquareContainsNum  *  countEmptyCellInRow )) - (( countEmptyCellsInRows_ThatNotContainsNum  -  countEmptyCellsInCols_ThatNotContainsNum ) / ( countEmptyCellInCol  -  NumOfOptionsInCell )))) Min (((( NumOfOptionsInCell  Min  countEmptyCellsInSquare_ThatNotContainsNum ) / ( numOfOptionsToAppearInBoard  %  countEmptyCellsInColsContainsNum )) / (( numOfOptionsToAppearInBoard  +  countEmptyCellInRow ) Max ( countEmptyCellsInSquare_ThatNotContainsNum  +  countEmptyCellInCol ))) / ((( countEmptyCellInRow  %  countEmptyCellInRow ) * ( countEmptyCellInCol  *  NumOfOptionsInCell )) / (( numOfOptionsToAppearInBoard  -  numOfOptionsToAppearInBoard ) + ( countEmptyCellsInColsContainsNum  %  countEmptyCellInSquare ))))),
8,20.0,4.0,12.6,Minimum( Maximum( Plus( Plus( Minus( countEmptyCellsInRows_ThatNotContainsNum  NumOfOptionsInCell )  div( numOfOptionsToAppearInBoard  countEmptyCellsInSquareContainsNum ) )  div( Maximum( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRowsContainsNum )  Minus( countEmptyCellInRow  countEmptyCellsInSquare_ThatNotContainsNum ) ) )  Minus( Minimum( div( numOfOptionsToAppearInBoard  countEmptyCellsInColsContainsNum )  Multi( countEmptyCellsInSquareContainsNum  countEmptyCellInRow ) )  div( Minus( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum )  Minus( countEmptyCellInCol  NumOfOptionsInCell ) ) ) )  div( div( div( Minimum( NumOfOptionsInCell  countEmptyCellsInSquare_ThatNotContainsNum )  Mod( numOfOptionsToAppearInBoard  countEmptyCellsInColsContainsNum ) )  Maximum( Plus( numOfOptionsToAppearInBoard  countEmptyCellInRow )  Plus( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellInCol ) ) )  div( Multi( Mod( countEmptyCellInRow  countEmptyCellInRow )  Multi( countEmptyCellInCol  NumOfOptionsInCell ) )  Multi( div( countEmptyCellsInRowsContainsNum  countEmptyCellsInRowsContainsNum )  Minimum( countEmptyCellsInColsContainsNum  numOfOptionsToAppearInBoard ) ) ) ) ),((((( countEmptyCellsInRows_ThatNotContainsNum  -  NumOfOptionsInCell ) + ( numOfOptionsToAppearInBoard  /  countEmptyCellsInSquareContainsNum )) + (( countEmptyCellsInRows_ThatNotContainsNum  Max  countEmptyCellsInRowsContainsNum ) / ( countEmptyCellInRow  -  countEmptyCellsInSquare_ThatNotContainsNum ))) Max ((( numOfOptionsToAppearInBoard  /  countEmptyCellsInColsContainsNum ) Min ( countEmptyCellsInSquareContainsNum  *  countEmptyCellInRow )) - (( countEmptyCellsInRows_ThatNotContainsNum  -  countEmptyCellsInCols_ThatNotContainsNum ) / ( countEmptyCellInCol  -  NumOfOptionsInCell )))) Min (((( NumOfOptionsInCell  Min  countEmptyCellsInSquare_ThatNotContainsNum ) / ( numOfOptionsToAppearInBoard  %  countEmptyCellsInColsContainsNum )) / (( numOfOptionsToAppearInBoard  +  countEmptyCellInRow ) Max ( countEmptyCellsInSquare_ThatNotContainsNum  +  countEmptyCellInCol ))) / ((( countEmptyCellInRow  %  countEmptyCellInRow ) * ( countEmptyCellInCol  *  NumOfOptionsInCell )) / (( countEmptyCellsInRowsContainsNum  /  countEmptyCellsInRowsContainsNum ) * ( countEmptyCellsInColsContainsNum  Min  numOfOptionsToAppearInBoard ))))),
9,21.0,5.0,12.83,div( Multi( Multi( Minus( Mod( countEmptyCellInCol  countEmptyCellInCol )  Plus( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInSquare_ThatNotContainsNum ) )  div( Mod( countEmptyCellsInSquareContainsNum  countEmptyCellsInSquare_ThatNotContainsNum )  Minimum( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInSquareContainsNum ) ) )  Minimum( Mod( div( countEmptyCellsInColsContainsNum  countEmptyCellsInCols_ThatNotContainsNum )  Minimum( countEmptyCellsInRowsContainsNum  countEmptyCellInSquare ) )  Maximum( Multi( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum )  Minus( countEmptyCellsInSquare_ThatNotContainsNum  NumOfOptionsInCell ) ) ) )  Plus( Plus( Plus( div( countEmptyCellsInSquare_ThatNotContainsNum  NumOfOptionsInCell )  div( countEmptyCellsInSquareContainsNum  countEmptyCellInSquare ) )  Plus( Minus( countEmptyCellInCol  countEmptyCellsInRowsContainsNum )  Minus( numOfOptionsToAppearInBoard  countEmptyCellsInRowsContainsNum ) ) )  Maximum( Maximum( Plus( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInSquareContainsNum )  Multi( countEmptyCellInCol  countEmptyCellsInRows_ThatNotContainsNum ) )  Minimum( Minus( countEmptyCellsInSquareContainsNum  countEmptyCellInRow )  Plus( countEmptyCellInSquare  countEmptyCellInCol ) ) ) ) ),((((( countEmptyCellInCol  %  countEmptyCellInCol ) - ( countEmptyCellsInSquare_ThatNotContainsNum  +  countEmptyCellsInSquare_ThatNotContainsNum )) * (( countEmptyCellsInSquareContainsNum  %  countEmptyCellsInSquare_ThatNotContainsNum ) / ( countEmptyCellsInRows_ThatNotContainsNum  Min  countEmptyCellsInSquareContainsNum ))) * ((( countEmptyCellsInColsContainsNum  /  countEmptyCellsInCols_ThatNotContainsNum ) % ( countEmptyCellsInRowsContainsNum  Min  countEmptyCellInSquare )) Min (( countEmptyCellsInRows_ThatNotContainsNum  *  countEmptyCellsInCols_ThatNotContainsNum ) Max ( countEmptyCellsInSquare_ThatNotContainsNum  -  NumOfOptionsInCell )))) / (((( countEmptyCellsInSquare_ThatNotContainsNum  /  NumOfOptionsInCell ) + ( countEmptyCellsInSquareContainsNum  /  countEmptyCellInSquare )) + (( countEmptyCellInCol  -  countEmptyCellsInRowsContainsNum ) + ( numOfOptionsToAppearInBoard  -  countEmptyCellsInRowsContainsNum ))) + ((( countEmptyCellsInSquare_ThatNotContainsNum  +  countEmptyCellsInSquareContainsNum ) Max ( countEmptyCellInCol  *  countEmptyCellsInRows_ThatNotContainsNum )) Max (( countEmptyCellsInSquareContainsNum  -  countEmptyCellInRow ) Min ( countEmptyCellInSquare  +  countEmptyCellInCol ))))),
10,21.0,4.0,12.34,Minus( div( Multi( Multi( Mod( countEmptyCellsInColsContainsNum  countEmptyCellsInSquareContainsNum )  Mod( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInColsContainsNum ) )  Minimum( Minus( countEmptyCellsInSquareContainsNum  NumOfOptionsInCell )  Mod( countEmptyCellsInColsContainsNum  NumOfOptionsInCell ) ) )  Plus( Multi( Mod( NumOfOptionsInCell  countEmptyCellsInSquare_ThatNotContainsNum )  Plus( countEmptyCellsInColsContainsNum  countEmptyCellsInSquare_ThatNotContainsNum ) )  Multi( Minus( countEmptyCellInRow  countEmptyCellsInColsContainsNum )  Multi( NumOfOptionsInCell  countEmptyCellsInRowsContainsNum ) ) ) )  Maximum( Multi( div( Mod( countEmptyCellInRow  countEmptyCellsInSquareContainsNum )  Multi( countEmptyCellInCol  countEmptyCellInSquare ) )  Minus( Minimum( numOfOptionsToAppearInBoard  countEmptyCellsInSquare_ThatNotContainsNum )  Minimum( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInColsContainsNum ) ) )  Minus( Plus( Plus( countEmptyCellInRow  NumOfOptionsInCell )  Multi( NumOfOptionsInCell  countEmptyCellsInCols_ThatNotContainsNum ) )  Minimum( div( NumOfOptionsInCell  countEmptyCellsInSquareContainsNum )  Plus( numOfOptionsToAppearInBoard  countEmptyCellsInColsContainsNum ) ) ) ) ),((((( countEmptyCellsInColsContainsNum  %  countEmptyCellsInSquareContainsNum ) * ( countEmptyCellsInCols_ThatNotContainsNum  %  countEmptyCellsInColsContainsNum )) * (( countEmptyCellsInSquareContainsNum  -  NumOfOptionsInCell ) Min ( countEmptyCellsInColsContainsNum  %  NumOfOptionsInCell ))) / ((( NumOfOptionsInCell  %  countEmptyCellsInSquare_ThatNotContainsNum ) * ( countEmptyCellsInColsContainsNum  +  countEmptyCellsInSquare_ThatNotContainsNum )) + (( countEmptyCellInRow  -  countEmptyCellsInColsContainsNum ) * ( NumOfOptionsInCell  *  countEmptyCellsInRowsContainsNum )))) - (((( countEmptyCellInRow  %  countEmptyCellsInSquareContainsNum ) / ( countEmptyCellInCol  *  countEmptyCellInSquare )) * (( numOfOptionsToAppearInBoard  Min  countEmptyCellsInSquare_ThatNotContainsNum ) - ( countEmptyCellsInSquare_ThatNotContainsNum  Min  countEmptyCellsInColsContainsNum ))) Max ((( countEmptyCellInRow  +  NumOfOptionsInCell ) + ( NumOfOptionsInCell  *  countEmptyCellsInCols_ThatNotContainsNum )) - (( NumOfOptionsInCell  /  countEmptyCellsInSquareContainsNum ) Min ( numOfOptionsToAppearInBoard  +  countEmptyCellsInColsContainsNum ))))),
11,20.0,2.0,12.25,Maximum( Maximum( Plus( Mod( div( countEmptyCellInSquare  numOfOptionsToAppearInBoard )  Plus( countEmptyCellsInSquareContainsNum  countEmptyCellsInColsContainsNum ) )  div( Minimum( countEmptyCellInRow  countEmptyCellsInRowsContainsNum )  Multi( countEmptyCellsInCols_ThatNotContainsNum  NumOfOptionsInCell ) ) )  Multi( Plus( Minimum( countEmptyCellsInRowsContainsNum  countEmptyCellsInColsContainsNum )  Minimum( countEmptyCellsInColsContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) )  Plus( div( NumOfOptionsInCell  countEmptyCellsInSquareContainsNum )  Minimum( NumOfOptionsInCell  countEmptyCellInSquare ) ) ) )  Minus( Maximum( Plus( Minimum( countEmptyCellInSquare  countEmptyCellsInSquare_ThatNotContainsNum )  Minus( countEmptyCellsInCols_ThatNotContainsNum  NumOfOptionsInCell ) )  Maximum( Minus( countEmptyCellInCol  NumOfOptionsInCell )  Plus( countEmptyCellInRow  numOfOptionsToAppearInBoard ) ) )  Mod( Maximum( Mod( countEmptyCellInRow  countEmptyCellInCol )  Minimum( countEmptyCellInRow  countEmptyCellInCol ) )  Multi( Minus( countEmptyCellInCol  countEmptyCellsInRowsContainsNum )  Multi( countEmptyCellsInColsContainsNum  countEmptyCellInSquare ) ) ) ) ),((((( countEmptyCellInSquare  /  numOfOptionsToAppearInBoard ) % ( countEmptyCellsInSquareContainsNum  +  countEmptyCellsInColsContainsNum )) + (( countEmptyCellInRow  Min  countEmptyCellsInRowsContainsNum ) / ( countEmptyCellsInCols_ThatNotContainsNum  *  NumOfOptionsInCell ))) Max ((( countEmptyCellsInRowsContainsNum  Min  countEmptyCellsInColsContainsNum ) + ( countEmptyCellsInColsContainsNum  Min  countEmptyCellsInCols_ThatNotContainsNum )) * (( NumOfOptionsInCell  /  countEmptyCellsInSquareContainsNum ) + ( NumOfOptionsInCell  Min  countEmptyCellInSquare )))) Max (((( countEmptyCellInSquare  Min  countEmptyCellsInSquare_ThatNotContainsNum ) + ( countEmptyCellsInCols_ThatNotContainsNum  -  NumOfOptionsInCell )) Max (( countEmptyCellInCol  -  NumOfOptionsInCell ) Max ( countEmptyCellInRow  +  numOfOptionsToAppearInBoard ))) - ((( countEmptyCellInRow  %  countEmptyCellInCol ) Max ( countEmptyCellInRow  Min  countEmptyCellInCol )) % (( countEmptyCellInCol  -  countEmptyCellsInRowsContainsNum ) * ( countEmptyCellsInColsContainsNum  *  countEmptyCellInSquare ))))),
12,19.0,2.0,12.11,Maximum( Maximum( Plus( Mod( div( countEmptyCellInSquare  numOfOptionsToAppearInBoard )  Plus( countEmptyCellsInSquareContainsNum  countEmptyCellsInColsContainsNum ) )  div( Minimum( countEmptyCellInRow  countEmptyCellsInRowsContainsNum )  Multi( countEmptyCellsInCols_ThatNotContainsNum  NumOfOptionsInCell ) ) )  Multi( Plus( Minimum( countEmptyCellsInRowsContainsNum  countEmptyCellsInColsContainsNum )  Minimum( countEmptyCellsInColsContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) )  Plus( div( NumOfOptionsInCell  countEmptyCellsInSquareContainsNum )  Minimum( NumOfOptionsInCell  countEmptyCellInSquare ) ) ) )  Minus( Maximum( Plus( Minimum( countEmptyCellInSquare  countEmptyCellsInSquare_ThatNotContainsNum )  Minus( countEmptyCellsInCols_ThatNotContainsNum  NumOfOptionsInCell ) )  div( Minimum( countEmptyCellsInColsContainsNum  countEmptyCellsInRows_ThatNotContainsNum )  Plus( countEmptyCellsInRowsContainsNum  countEmptyCellInSquare ) ) )  Mod( Maximum( Mod( countEmptyCellInRow  countEmptyCellInCol )  Minimum( countEmptyCellInRow  countEmptyCellInCol ) )  Multi( Minus( countEmptyCellInCol  countEmptyCellsInRowsContainsNum )  Multi( countEmptyCellsInColsContainsNum  countEmptyCellInSquare ) ) ) ) ),((((( countEmptyCellInSquare  /  numOfOptionsToAppearInBoard ) % ( countEmptyCellsInSquareContainsNum  +  countEmptyCellsInColsContainsNum )) + (( countEmptyCellInRow  Min  countEmptyCellsInRowsContainsNum ) / ( countEmptyCellsInCols_ThatNotContainsNum  *  NumOfOptionsInCell ))) Max ((( countEmptyCellsInRowsContainsNum  Min  countEmptyCellsInColsContainsNum ) + ( countEmptyCellsInColsContainsNum  Min  countEmptyCellsInCols_ThatNotContainsNum )) * (( NumOfOptionsInCell  /  countEmptyCellsInSquareContainsNum ) + ( NumOfOptionsInCell  Min  countEmptyCellInSquare )))) Max (((( countEmptyCellInSquare  Min  countEmptyCellsInSquare_ThatNotContainsNum ) + ( countEmptyCellsInCols_ThatNotContainsNum  -  NumOfOptionsInCell )) Max (( countEmptyCellsInColsContainsNum  Min  countEmptyCellsInRows_ThatNotContainsNum ) / ( countEmptyCellsInRowsContainsNum  +  countEmptyCellInSquare ))) - ((( countEmptyCellInRow  %  countEmptyCellInCol ) Max ( countEmptyCellInRow  Min  countEmptyCellInCol )) % (( countEmptyCellInCol  -  countEmptyCellsInRowsContainsNum ) * ( countEmptyCellsInColsContainsNum  *  countEmptyCellInSquare ))))),
13,20.0,2.0,12.14,Maximum( Maximum( Plus( Mod( div( countEmptyCellInSquare  numOfOptionsToAppearInBoard )  Plus( countEmptyCellsInSquareContainsNum  countEmptyCellsInColsContainsNum ) )  div( Minimum( countEmptyCellInRow  countEmptyCellsInRowsContainsNum )  Multi( countEmptyCellsInCols_ThatNotContainsNum  NumOfOptionsInCell ) ) )  Multi( Plus( Minimum( countEmptyCellsInRowsContainsNum  countEmptyCellsInColsContainsNum )  Minimum( countEmptyCellsInColsContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) )  Plus( div( NumOfOptionsInCell  countEmptyCellsInSquareContainsNum )  Minimum( NumOfOptionsInCell  countEmptyCellInSquare ) ) ) )  Minus( Maximum( Plus( Minimum( countEmptyCellInSquare  countEmptyCellsInSquare_ThatNotContainsNum )  Minus( countEmptyCellsInCols_ThatNotContainsNum  NumOfOptionsInCell ) )  div( Minimum( countEmptyCellsInColsContainsNum  countEmptyCellsInRows_ThatNotContainsNum )  Plus( countEmptyCellsInRowsContainsNum  countEmptyCellInSquare ) ) )  Mod( Maximum( Mod( countEmptyCellInRow  countEmptyCellInCol )  Minimum( countEmptyCellInRow  countEmptyCellInCol ) )  Multi( Minus( countEmptyCellInCol  countEmptyCellsInRowsContainsNum )  Multi( countEmptyCellsInColsContainsNum  countEmptyCellInSquare ) ) ) ) ),((((( countEmptyCellInSquare  /  numOfOptionsToAppearInBoard ) % ( countEmptyCellsInSquareContainsNum  +  countEmptyCellsInColsContainsNum )) + (( countEmptyCellInRow  Min  countEmptyCellsInRowsContainsNum ) / ( countEmptyCellsInCols_ThatNotContainsNum  *  NumOfOptionsInCell ))) Max ((( countEmptyCellsInRowsContainsNum  Min  countEmptyCellsInColsContainsNum ) + ( countEmptyCellsInColsContainsNum  Min  countEmptyCellsInCols_ThatNotContainsNum )) * (( NumOfOptionsInCell  /  countEmptyCellsInSquareContainsNum ) + ( NumOfOptionsInCell  Min  countEmptyCellInSquare )))) Max (((( countEmptyCellInSquare  Min  countEmptyCellsInSquare_ThatNotContainsNum ) + ( countEmptyCellsInCols_ThatNotContainsNum  -  NumOfOptionsInCell )) Max (( countEmptyCellsInColsContainsNum  Min  countEmptyCellsInRows_ThatNotContainsNum ) / ( countEmptyCellsInRowsContainsNum  +  countEmptyCellInSquare ))) - ((( countEmptyCellInRow  %  countEmptyCellInCol ) Max ( countEmptyCellInRow  Min  countEmptyCellInCol )) % (( countEmptyCellInCol  -  countEmptyCellsInRowsContainsNum ) * ( countEmptyCellsInColsContainsNum  *  countEmptyCellInSquare ))))),
14,19.0,2.0,11.88,Multi( Plus( Multi( div( Multi( countEmptyCellInCol  countEmptyCellsInColsContainsNum )  Plus( numOfOptionsToAppearInBoard  countEmptyCellInSquare ) )  Minimum( Maximum( numOfOptionsToAppearInBoard  countEmptyCellsInRows_ThatNotContainsNum )  Multi( countEmptyCellsInSquareContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) ) )  Plus( Plus( div( countEmptyCellInRow  countEmptyCellsInSquareContainsNum )  Minus( NumOfOptionsInCell  countEmptyCellsInSquare_ThatNotContainsNum ) )  Mod( Minus( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRowsContainsNum )  Maximum( countEmptyCellsInSquareContainsNum  numOfOptionsToAppearInBoard ) ) ) )  Maximum( div( Minimum( div( countEmptyCellInCol  countEmptyCellInSquare )  Mod( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellInSquare ) )  Plus( Mod( countEmptyCellInSquare  countEmptyCellsInRowsContainsNum )  Mod( countEmptyCellsInColsContainsNum  countEmptyCellInRow ) ) )  Maximum( Mod( Mod( countEmptyCellsInCols_ThatNotContainsNum  numOfOptionsToAppearInBoard )  div( countEmptyCellsInRows_ThatNotContainsNum  NumOfOptionsInCell ) )  Multi( Plus( NumOfOptionsInCell  countEmptyCellInSquare )  Multi( countEmptyCellInCol  NumOfOptionsInCell ) ) ) ) ),((((( countEmptyCellInCol  *  countEmptyCellsInColsContainsNum ) / ( numOfOptionsToAppearInBoard  +  countEmptyCellInSquare )) * (( numOfOptionsToAppearInBoard  Max  countEmptyCellsInRows_ThatNotContainsNum ) Min ( countEmptyCellsInSquareContainsNum  *  countEmptyCellsInRows_ThatNotContainsNum ))) + ((( countEmptyCellInRow  /  countEmptyCellsInSquareContainsNum ) + ( NumOfOptionsInCell  -  countEmptyCellsInSquare_ThatNotContainsNum )) + (( countEmptyCellsInRows_ThatNotContainsNum  -  countEmptyCellsInRowsContainsNum ) % ( countEmptyCellsInSquareContainsNum  Max  numOfOptionsToAppearInBoard )))) * (((( countEmptyCellInCol  /  countEmptyCellInSquare ) Min ( countEmptyCellsInCols_ThatNotContainsNum  %  countEmptyCellInSquare )) / (( countEmptyCellInSquare  %  countEmptyCellsInRowsContainsNum ) + ( countEmptyCellsInColsContainsNum  %  countEmptyCellInRow ))) Max ((( countEmptyCellsInCols_ThatNotContainsNum  %  numOfOptionsToAppearInBoard ) % ( countEmptyCellsInRows_ThatNotContainsNum  /  NumOfOptionsInCell )) Max (( NumOfOptionsInCell  +  countEmptyCellInSquare ) * ( countEmptyCellInCol  *  NumOfOptionsInCell ))))),
15,20.0,3.0,12.12,Maximum( Maximum( Plus( Mod( Mod( countEmptyCellsInRowsContainsNum  countEmptyCellsInRows_ThatNotContainsNum )  Plus( countEmptyCellsInSquareContainsNum  countEmptyCellsInColsContainsNum ) )  div( Minimum( countEmptyCellInRow  countEmptyCellsInRowsContainsNum )  Multi( countEmptyCellsInCols_ThatNotContainsNum  NumOfOptionsInCell ) ) )  Multi( Plus( Minimum( countEmptyCellsInRowsContainsNum  countEmptyCellsInColsContainsNum )  Minimum( countEmptyCellsInColsContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) )  Plus( div( NumOfOptionsInCell  countEmptyCellsInSquareContainsNum )  Minimum( NumOfOptionsInCell  countEmptyCellInSquare ) ) ) )  Minus( Maximum( Plus( Minimum( countEmptyCellInSquare  countEmptyCellsInSquare_ThatNotContainsNum )  Minus( countEmptyCellsInCols_ThatNotContainsNum  NumOfOptionsInCell ) )  div( Minimum( countEmptyCellsInColsContainsNum  countEmptyCellsInRows_ThatNotContainsNum )  Plus( countEmptyCellsInRowsContainsNum  countEmptyCellInSquare ) ) )  Minus( Maximum( div( countEmptyCellInRow  countEmptyCellsInCols_ThatNotContainsNum )  Mod( countEmptyCellInRow  NumOfOptionsInCell ) )  Plus( Minimum( countEmptyCellInRow  countEmptyCellsInSquareContainsNum )  Minimum( countEmptyCellInCol  countEmptyCellsInSquareContainsNum ) ) ) ) ),((((( countEmptyCellsInRowsContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum ) % ( countEmptyCellsInSquareContainsNum  +  countEmptyCellsInColsContainsNum )) + (( countEmptyCellInRow  Min  countEmptyCellsInRowsContainsNum ) / ( countEmptyCellsInCols_ThatNotContainsNum  *  NumOfOptionsInCell ))) Max ((( countEmptyCellsInRowsContainsNum  Min  countEmptyCellsInColsContainsNum ) + ( countEmptyCellsInColsContainsNum  Min  countEmptyCellsInCols_ThatNotContainsNum )) * (( NumOfOptionsInCell  /  countEmptyCellsInSquareContainsNum ) + ( NumOfOptionsInCell  Min  countEmptyCellInSquare )))) Max (((( countEmptyCellInSquare  Min  countEmptyCellsInSquare_ThatNotContainsNum ) + ( countEmptyCellsInCols_ThatNotContainsNum  -  NumOfOptionsInCell )) Max (( countEmptyCellsInColsContainsNum  Min  countEmptyCellsInRows_ThatNotContainsNum ) / ( countEmptyCellsInRowsContainsNum  +  countEmptyCellInSquare ))) - ((( countEmptyCellInRow  /  countEmptyCellsInCols_ThatNotContainsNum ) Max ( countEmptyCellInRow  %  NumOfOptionsInCell )) - (( countEmptyCellInRow  Min  countEmptyCellsInSquareContainsNum ) + ( countEmptyCellInCol  Min  countEmptyCellsInSquareContainsNum ))))),
16,21.0,4.0,12.0,Multi( Plus( Multi( div( Multi( countEmptyCellInCol  countEmptyCellsInColsContainsNum )  Plus( numOfOptionsToAppearInBoard  countEmptyCellInSquare ) )  Minimum( Maximum( numOfOptionsToAppearInBoard  countEmptyCellsInRows_ThatNotContainsNum )  Multi( countEmptyCellsInSquareContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) ) )  Plus( Plus( div( countEmptyCellInRow  countEmptyCellsInSquareContainsNum )  div( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInRow ) )  Mod( Minus( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRowsContainsNum )  Maximum( countEmptyCellsInSquareContainsNum  numOfOptionsToAppearInBoard ) ) ) )  Maximum( div( Minimum( div( countEmptyCellInCol  countEmptyCellInSquare )  Mod( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellInSquare ) )  Plus( Mod( countEmptyCellInSquare  countEmptyCellsInRowsContainsNum )  Mod( countEmptyCellsInColsContainsNum  countEmptyCellInRow ) ) )  Maximum( Mod( Mod( countEmptyCellsInCols_ThatNotContainsNum  numOfOptionsToAppearInBoard )  div( countEmptyCellsInRows_ThatNotContainsNum  NumOfOptionsInCell ) )  Multi( Plus( NumOfOptionsInCell  countEmptyCellInSquare )  Multi( countEmptyCellInCol  NumOfOptionsInCell ) ) ) ) ),((((( countEmptyCellInCol  *  countEmptyCellsInColsContainsNum ) / ( numOfOptionsToAppearInBoard  +  countEmptyCellInSquare )) * (( numOfOptionsToAppearInBoard  Max  countEmptyCellsInRows_ThatNotContainsNum ) Min ( countEmptyCellsInSquareContainsNum  *  countEmptyCellsInRows_ThatNotContainsNum ))) + ((( countEmptyCellInRow  /  countEmptyCellsInSquareContainsNum ) + ( countEmptyCellsInRows_ThatNotContainsNum  /  countEmptyCellInRow )) + (( countEmptyCellsInRows_ThatNotContainsNum  -  countEmptyCellsInRowsContainsNum ) % ( countEmptyCellsInSquareContainsNum  Max  numOfOptionsToAppearInBoard )))) * (((( countEmptyCellInCol  /  countEmptyCellInSquare ) Min ( countEmptyCellsInCols_ThatNotContainsNum  %  countEmptyCellInSquare )) / (( countEmptyCellInSquare  %  countEmptyCellsInRowsContainsNum ) + ( countEmptyCellsInColsContainsNum  %  countEmptyCellInRow ))) Max ((( countEmptyCellsInCols_ThatNotContainsNum  %  numOfOptionsToAppearInBoard ) % ( countEmptyCellsInRows_ThatNotContainsNum  /  NumOfOptionsInCell )) Max (( NumOfOptionsInCell  +  countEmptyCellInSquare ) * ( countEmptyCellInCol  *  NumOfOptionsInCell ))))),
17,19.0,3.0,11.83,Minus( Maximum( Minimum( Maximum( div( countEmptyCellsInRowsContainsNum  countEmptyCellInSquare )  Minus( countEmptyCellInRow  countEmptyCellsInSquareContainsNum ) )  Minimum( Plus( countEmptyCellInRow  numOfOptionsToAppearInBoard )  Mod( NumOfOptionsInCell  countEmptyCellsInCols_ThatNotContainsNum ) ) )  Maximum( Minus( Maximum( numOfOptionsToAppearInBoard  countEmptyCellsInRows_ThatNotContainsNum )  Mod( countEmptyCellsInRowsContainsNum  countEmptyCellsInRowsContainsNum ) )  Multi( div( countEmptyCellsInColsContainsNum  countEmptyCellsInColsContainsNum )  Maximum( countEmptyCellsInRowsContainsNum  NumOfOptionsInCell ) ) ) )  Maximum( Multi( div( Mod( countEmptyCellInRow  countEmptyCellsInSquareContainsNum )  Multi( countEmptyCellInCol  countEmptyCellInSquare ) )  Minus( Minimum( numOfOptionsToAppearInBoard  countEmptyCellsInSquare_ThatNotContainsNum )  Minimum( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInColsContainsNum ) ) )  Minus( Plus( Plus( countEmptyCellInRow  NumOfOptionsInCell )  Multi( NumOfOptionsInCell  countEmptyCellsInCols_ThatNotContainsNum ) )  Minus( div( countEmptyCellInSquare  countEmptyCellsInRowsContainsNum )  Plus( numOfOptionsToAppearInBoard  countEmptyCellInSquare ) ) ) ) ),((((( countEmptyCellsInRowsContainsNum  /  countEmptyCellInSquare ) Max ( countEmptyCellInRow  -  countEmptyCellsInSquareContainsNum )) Min (( countEmptyCellInRow  +  numOfOptionsToAppearInBoard ) Min ( NumOfOptionsInCell  %  countEmptyCellsInCols_ThatNotContainsNum ))) Max ((( numOfOptionsToAppearInBoard  Max  countEmptyCellsInRows_ThatNotContainsNum ) - ( countEmptyCellsInRowsContainsNum  %  countEmptyCellsInRowsContainsNum )) Max (( countEmptyCellsInColsContainsNum  /  countEmptyCellsInColsContainsNum ) * ( countEmptyCellsInRowsContainsNum  Max  NumOfOptionsInCell )))) - (((( countEmptyCellInRow  %  countEmptyCellsInSquareContainsNum ) / ( countEmptyCellInCol  *  countEmptyCellInSquare )) * (( numOfOptionsToAppearInBoard  Min  countEmptyCellsInSquare_ThatNotContainsNum ) - ( countEmptyCellsInSquare_ThatNotContainsNum  Min  countEmptyCellsInColsContainsNum ))) Max ((( countEmptyCellInRow  +  NumOfOptionsInCell ) + ( NumOfOptionsInCell  *  countEmptyCellsInCols_ThatNotContainsNum )) - (( countEmptyCellInSquare  /  countEmptyCellsInRowsContainsNum ) - ( numOfOptionsToAppearInBoard  +  countEmptyCellInSquare ))))),
18,20.0,6.0,12.1,Multi( Plus( Multi( div( Multi( countEmptyCellInCol  countEmptyCellsInColsContainsNum )  Plus( numOfOptionsToAppearInBoard  countEmptyCellInSquare ) )  Minimum( Maximum( numOfOptionsToAppearInBoard  countEmptyCellsInRows_ThatNotContainsNum )  Multi( countEmptyCellsInSquareContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) ) )  Plus( Plus( div( countEmptyCellInRow  countEmptyCellsInSquareContainsNum )  div( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInRow ) )  Mod( Minus( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRowsContainsNum )  Maximum( countEmptyCellsInSquareContainsNum  numOfOptionsToAppearInBoard ) ) ) )  Maximum( Minus( Multi( Minus( countEmptyCellInCol  countEmptyCellsInRowsContainsNum )  Minimum( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellInRow ) )  Minus( Plus( countEmptyCellsInColsContainsNum  countEmptyCellInCol )  Mod( countEmptyCellInRow  numOfOptionsToAppearInBoard ) ) )  Maximum( Mod( Mod( countEmptyCellsInCols_ThatNotContainsNum  numOfOptionsToAppearInBoard )  div( countEmptyCellsInRows_ThatNotContainsNum  NumOfOptionsInCell ) )  Multi( Plus( NumOfOptionsInCell  countEmptyCellInSquare )  Multi( countEmptyCellInCol  NumOfOptionsInCell ) ) ) ) ),((((( countEmptyCellInCol  *  countEmptyCellsInColsContainsNum ) / ( numOfOptionsToAppearInBoard  +  countEmptyCellInSquare )) * (( numOfOptionsToAppearInBoard  Max  countEmptyCellsInRows_ThatNotContainsNum ) Min ( countEmptyCellsInSquareContainsNum  *  countEmptyCellsInRows_ThatNotContainsNum ))) + ((( countEmptyCellInRow  /  countEmptyCellsInSquareContainsNum ) + ( countEmptyCellsInRows_ThatNotContainsNum  /  countEmptyCellInRow )) + (( countEmptyCellsInRows_ThatNotContainsNum  -  countEmptyCellsInRowsContainsNum ) % ( countEmptyCellsInSquareContainsNum  Max  numOfOptionsToAppearInBoard )))) * (((( countEmptyCellInCol  -  countEmptyCellsInRowsContainsNum ) * ( countEmptyCellsInCols_ThatNotContainsNum  Min  countEmptyCellInRow )) - (( countEmptyCellsInColsContainsNum  +  countEmptyCellInCol ) - ( countEmptyCellInRow  %  numOfOptionsToAppearInBoard ))) Max ((( countEmptyCellsInCols_ThatNotContainsNum  %  numOfOptionsToAppearInBoard ) % ( countEmptyCellsInRows_ThatNotContainsNum  /  NumOfOptionsInCell )) Max (( NumOfOptionsInCell  +  countEmptyCellInSquare ) * ( countEmptyCellInCol  *  NumOfOptionsInCell ))))),
19,20.0,3.0,11.8,div( Mod( div( Maximum( Minimum( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInSquare )  Mod( countEmptyCellInSquare  countEmptyCellInRow ) )  Mod( Minus( countEmptyCellInCol  countEmptyCellsInCols_ThatNotContainsNum )  Multi( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInCol ) ) )  Minimum( Plus( div( countEmptyCellsInColsContainsNum  countEmptyCellInRow )  Mod( countEmptyCellsInRowsContainsNum  numOfOptionsToAppearInBoard ) )  Plus( Plus( numOfOptionsToAppearInBoard  countEmptyCellsInSquare_ThatNotContainsNum )  div( countEmptyCellInRow  numOfOptionsToAppearInBoard ) ) ) )  div( div( Plus( div( countEmptyCellsInRowsContainsNum  numOfOptionsToAppearInBoard )  div( countEmptyCellInCol  NumOfOptionsInCell ) )  div( Plus( countEmptyCellInRow  countEmptyCellsInCols_ThatNotContainsNum )  div( countEmptyCellsInCols_ThatNotContainsNum  NumOfOptionsInCell ) ) )  Maximum( div( Mod( countEmptyCellInCol  countEmptyCellsInRows_ThatNotContainsNum )  Minus( NumOfOptionsInCell  countEmptyCellInSquare ) )  Mod( Multi( countEmptyCellsInSquare_ThatNotContainsNum  numOfOptionsToAppearInBoard )  Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInSquare_ThatNotContainsNum ) ) ) ) ),((((( countEmptyCellsInRows_ThatNotContainsNum  Min  countEmptyCellInSquare ) Max ( countEmptyCellInSquare  %  countEmptyCellInRow )) / (( countEmptyCellInCol  -  countEmptyCellsInCols_ThatNotContainsNum ) % ( countEmptyCellsInRows_ThatNotContainsNum  *  countEmptyCellInCol ))) % ((( countEmptyCellsInColsContainsNum  /  countEmptyCellInRow ) + ( countEmptyCellsInRowsContainsNum  %  numOfOptionsToAppearInBoard )) Min (( numOfOptionsToAppearInBoard  +  countEmptyCellsInSquare_ThatNotContainsNum ) + ( countEmptyCellInRow  /  numOfOptionsToAppearInBoard )))) / (((( countEmptyCellsInRowsContainsNum  /  numOfOptionsToAppearInBoard ) + ( countEmptyCellInCol  /  NumOfOptionsInCell )) / (( countEmptyCellInRow  +  countEmptyCellsInCols_ThatNotContainsNum ) / ( countEmptyCellsInCols_ThatNotContainsNum  /  NumOfOptionsInCell ))) / ((( countEmptyCellInCol  %  countEmptyCellsInRows_ThatNotContainsNum ) / ( NumOfOptionsInCell  -  countEmptyCellInSquare )) Max (( countEmptyCellsInSquare_ThatNotContainsNum  *  numOfOptionsToAppearInBoard ) % ( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInSquare_ThatNotContainsNum ))))),
20,19.0,3.0,11.85,div( Mod( div( Maximum( Minimum( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInSquare )  Mod( countEmptyCellInSquare  countEmptyCellInRow ) )  Mod( Minus( countEmptyCellInCol  countEmptyCellsInCols_ThatNotContainsNum )  Multi( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInCol ) ) )  Minimum( Plus( div( countEmptyCellsInColsContainsNum  countEmptyCellInRow )  Mod( countEmptyCellsInRowsContainsNum  numOfOptionsToAppearInBoard ) )  Plus( Plus( numOfOptionsToAppearInBoard  countEmptyCellsInSquare_ThatNotContainsNum )  div( countEmptyCellInRow  numOfOptionsToAppearInBoard ) ) ) )  div( div( Plus( div( countEmptyCellsInRowsContainsNum  numOfOptionsToAppearInBoard )  div( countEmptyCellInCol  NumOfOptionsInCell ) )  div( Plus( countEmptyCellInRow  countEmptyCellsInCols_ThatNotContainsNum )  div( countEmptyCellsInCols_ThatNotContainsNum  NumOfOptionsInCell ) ) )  Maximum( div( Mod( countEmptyCellInCol  countEmptyCellsInRows_ThatNotContainsNum )  Minus( NumOfOptionsInCell  countEmptyCellInSquare ) )  Mod( Multi( countEmptyCellsInSquare_ThatNotContainsNum  numOfOptionsToAppearInBoard )  Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInSquare_ThatNotContainsNum ) ) ) ) ),((((( countEmptyCellsInRows_ThatNotContainsNum  Min  countEmptyCellInSquare ) Max ( countEmptyCellInSquare  %  countEmptyCellInRow )) / (( countEmptyCellInCol  -  countEmptyCellsInCols_ThatNotContainsNum ) % ( countEmptyCellsInRows_ThatNotContainsNum  *  countEmptyCellInCol ))) % ((( countEmptyCellsInColsContainsNum  /  countEmptyCellInRow ) + ( countEmptyCellsInRowsContainsNum  %  numOfOptionsToAppearInBoard )) Min (( numOfOptionsToAppearInBoard  +  countEmptyCellsInSquare_ThatNotContainsNum ) + ( countEmptyCellInRow  /  numOfOptionsToAppearInBoard )))) / (((( countEmptyCellsInRowsContainsNum  /  numOfOptionsToAppearInBoard ) + ( countEmptyCellInCol  /  NumOfOptionsInCell )) / (( countEmptyCellInRow  +  countEmptyCellsInCols_ThatNotContainsNum ) / ( countEmptyCellsInCols_ThatNotContainsNum  /  NumOfOptionsInCell ))) / ((( countEmptyCellInCol  %  countEmptyCellsInRows_ThatNotContainsNum ) / ( NumOfOptionsInCell  -  countEmptyCellInSquare )) Max (( countEmptyCellsInSquare_ThatNotContainsNum  *  numOfOptionsToAppearInBoard ) % ( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInSquare_ThatNotContainsNum ))))),
21,19.0,3.0,11.92,div( Mod( div( Maximum( Minimum( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInSquare )  Mod( countEmptyCellInSquare  countEmptyCellInRow ) )  Mod( Minus( countEmptyCellInCol  countEmptyCellsInCols_ThatNotContainsNum )  Multi( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInCol ) ) )  Minimum( Plus( div( countEmptyCellsInColsContainsNum  countEmptyCellInRow )  Mod( countEmptyCellsInRowsContainsNum  numOfOptionsToAppearInBoard ) )  Plus( Plus( numOfOptionsToAppearInBoard  countEmptyCellsInSquare_ThatNotContainsNum )  div( countEmptyCellInRow  numOfOptionsToAppearInBoard ) ) ) )  div( div( Plus( div( countEmptyCellsInRowsContainsNum  numOfOptionsToAppearInBoard )  div( countEmptyCellInCol  NumOfOptionsInCell ) )  div( Plus( countEmptyCellInRow  countEmptyCellsInCols_ThatNotContainsNum )  div( countEmptyCellsInCols_ThatNotContainsNum  NumOfOptionsInCell ) ) )  Minus( Multi( Mod( countEmptyCellsInColsContainsNum  countEmptyCellsInRowsContainsNum )  Mod( countEmptyCellInRow  countEmptyCellsInSquare_ThatNotContainsNum ) )  Minus( Plus( countEmptyCellInCol  countEmptyCellInRow )  Multi( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) ) ) ) ),((((( countEmptyCellsInRows_ThatNotContainsNum  Min  countEmptyCellInSquare ) Max ( countEmptyCellInSquare  %  countEmptyCellInRow )) / (( countEmptyCellInCol  -  countEmptyCellsInCols_ThatNotContainsNum ) % ( countEmptyCellsInRows_ThatNotContainsNum  *  countEmptyCellInCol ))) % ((( countEmptyCellsInColsContainsNum  /  countEmptyCellInRow ) + ( countEmptyCellsInRowsContainsNum  %  numOfOptionsToAppearInBoard )) Min (( numOfOptionsToAppearInBoard  +  countEmptyCellsInSquare_ThatNotContainsNum ) + ( countEmptyCellInRow  /  numOfOptionsToAppearInBoard )))) / (((( countEmptyCellsInRowsContainsNum  /  numOfOptionsToAppearInBoard ) + ( countEmptyCellInCol  /  NumOfOptionsInCell )) / (( countEmptyCellInRow  +  countEmptyCellsInCols_ThatNotContainsNum ) / ( countEmptyCellsInCols_ThatNotContainsNum  /  NumOfOptionsInCell ))) / ((( countEmptyCellsInColsContainsNum  %  countEmptyCellsInRowsContainsNum ) * ( countEmptyCellInRow  %  countEmptyCellsInSquare_ThatNotContainsNum )) - (( countEmptyCellInCol  +  countEmptyCellInRow ) - ( countEmptyCellsInCols_ThatNotContainsNum  *  countEmptyCellsInRowsContainsNum ))))),
22,21.0,5.0,12.25,div( Mod( div( Minus( div( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInColsContainsNum )  Multi( NumOfOptionsInCell  countEmptyCellInCol ) )  Mod( Minus( countEmptyCellInCol  countEmptyCellsInCols_ThatNotContainsNum )  Multi( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInCol ) ) )  Minimum( Plus( div( countEmptyCellsInColsContainsNum  countEmptyCellInRow )  Mod( countEmptyCellsInRowsContainsNum  numOfOptionsToAppearInBoard ) )  Plus( Plus( numOfOptionsToAppearInBoard  countEmptyCellsInSquare_ThatNotContainsNum )  div( countEmptyCellInRow  numOfOptionsToAppearInBoard ) ) ) )  div( div( Plus( div( countEmptyCellsInRowsContainsNum  numOfOptionsToAppearInBoard )  div( countEmptyCellInCol  NumOfOptionsInCell ) )  div( Plus( countEmptyCellInRow  countEmptyCellsInCols_ThatNotContainsNum )  div( countEmptyCellsInCols_ThatNotContainsNum  NumOfOptionsInCell ) ) )  Minus( Multi( Mod( countEmptyCellsInColsContainsNum  countEmptyCellsInRowsContainsNum )  Mod( countEmptyCellInRow  countEmptyCellsInSquare_ThatNotContainsNum ) )  Minus( Plus( countEmptyCellInCol  countEmptyCellInRow )  Multi( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) ) ) ) ),((((( countEmptyCellsInRows_ThatNotContainsNum  /  countEmptyCellsInColsContainsNum ) - ( NumOfOptionsInCell  *  countEmptyCellInCol )) / (( countEmptyCellInCol  -  countEmptyCellsInCols_ThatNotContainsNum ) % ( countEmptyCellsInRows_ThatNotContainsNum  *  countEmptyCellInCol ))) % ((( countEmptyCellsInColsContainsNum  /  countEmptyCellInRow ) + ( countEmptyCellsInRowsContainsNum  %  numOfOptionsToAppearInBoard )) Min (( numOfOptionsToAppearInBoard  +  countEmptyCellsInSquare_ThatNotContainsNum ) + ( countEmptyCellInRow  /  numOfOptionsToAppearInBoard )))) / (((( countEmptyCellsInRowsContainsNum  /  numOfOptionsToAppearInBoard ) + ( countEmptyCellInCol  /  NumOfOptionsInCell )) / (( countEmptyCellInRow  +  countEmptyCellsInCols_ThatNotContainsNum ) / ( countEmptyCellsInCols_ThatNotContainsNum  /  NumOfOptionsInCell ))) / ((( countEmptyCellsInColsContainsNum  %  countEmptyCellsInRowsContainsNum ) * ( countEmptyCellInRow  %  countEmptyCellsInSquare_ThatNotContainsNum )) - (( countEmptyCellInCol  +  countEmptyCellInRow ) - ( countEmptyCellsInCols_ThatNotContainsNum  *  countEmptyCellsInRowsContainsNum ))))),
23,20.0,2.0,12.07,Minus( Minimum( Mod( Multi( Maximum( countEmptyCellInRow  countEmptyCellInCol )  Minus( countEmptyCellInSquare  countEmptyCellsInRows_ThatNotContainsNum ) )  Plus( Multi( countEmptyCellInCol  countEmptyCellsInCols_ThatNotContainsNum )  Multi( countEmptyCellsInRows_ThatNotContainsNum  numOfOptionsToAppearInBoard ) ) )  Multi( Minus( div( countEmptyCellsInSquareContainsNum  countEmptyCellsInRows_ThatNotContainsNum )  Multi( countEmptyCellsInRowsContainsNum  countEmptyCellsInSquareContainsNum ) )  Mod( Plus( countEmptyCellsInRowsContainsNum  countEmptyCellsInRowsContainsNum )  Plus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInSquare_ThatNotContainsNum ) ) ) )  Plus( div( Maximum( Minus( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRowsContainsNum )  div( countEmptyCellInSquare  numOfOptionsToAppearInBoard ) )  Multi( Multi( numOfOptionsToAppearInBoard  countEmptyCellsInSquare_ThatNotContainsNum )  Mod( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInColsContainsNum ) ) )  Minimum( Maximum( Plus( numOfOptionsToAppearInBoard  countEmptyCellsInRows_ThatNotContainsNum )  Maximum( countEmptyCellInRow  NumOfOptionsInCell ) )  div( Maximum( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInSquareContainsNum )  Mod( NumOfOptionsInCell  countEmptyCellsInSquareContainsNum ) ) ) ) ),((((( countEmptyCellInRow  Max  countEmptyCellInCol ) * ( countEmptyCellInSquare  -  countEmptyCellsInRows_ThatNotContainsNum )) % (( countEmptyCellInCol  *  countEmptyCellsInCols_ThatNotContainsNum ) + ( countEmptyCellsInRows_ThatNotContainsNum  *  numOfOptionsToAppearInBoard ))) Min ((( countEmptyCellsInSquareContainsNum  /  countEmptyCellsInRows_ThatNotContainsNum ) - ( countEmptyCellsInRowsContainsNum  *  countEmptyCellsInSquareContainsNum )) * (( countEmptyCellsInRowsContainsNum  +  countEmptyCellsInRowsContainsNum ) % ( countEmptyCellsInCols_ThatNotContainsNum  +  countEmptyCellsInSquare_ThatNotContainsNum )))) - (((( countEmptyCellsInRows_ThatNotContainsNum  -  countEmptyCellsInRowsContainsNum ) Max ( countEmptyCellInSquare  /  numOfOptionsToAppearInBoard )) / (( numOfOptionsToAppearInBoard  *  countEmptyCellsInSquare_ThatNotContainsNum ) * ( countEmptyCellsInCols_ThatNotContainsNum  %  countEmptyCellsInColsContainsNum ))) + ((( numOfOptionsToAppearInBoard  +  countEmptyCellsInRows_ThatNotContainsNum ) Max ( countEmptyCellInRow  Max  NumOfOptionsInCell )) Min (( countEmptyCellsInSquare_ThatNotContainsNum  Max  countEmptyCellsInSquareContainsNum ) / ( NumOfOptionsInCell  %  countEmptyCellsInSquareContainsNum ))))),
24,20.0,2.0,12.14,Minus( Minimum( Mod( Multi( Maximum( countEmptyCellInRow  countEmptyCellInCol )  Minus( countEmptyCellInSquare  countEmptyCellsInRows_ThatNotContainsNum ) )  Plus( Multi( countEmptyCellInCol  countEmptyCellsInCols_ThatNotContainsNum )  Multi( countEmptyCellsInRows_ThatNotContainsNum  numOfOptionsToAppearInBoard ) ) )  Multi( Minus( div( countEmptyCellsInSquareContainsNum  countEmptyCellsInRows_ThatNotContainsNum )  Multi( countEmptyCellsInRowsContainsNum  countEmptyCellsInSquareContainsNum ) )  Mod( Plus( countEmptyCellsInRowsContainsNum  countEmptyCellsInRowsContainsNum )  Plus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInSquare_ThatNotContainsNum ) ) ) )  Plus( div( Maximum( Minus( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRowsContainsNum )  div( countEmptyCellInSquare  numOfOptionsToAppearInBoard ) )  Multi( Multi( numOfOptionsToAppearInBoard  countEmptyCellsInSquare_ThatNotContainsNum )  Mod( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInColsContainsNum ) ) )  Minimum( Maximum( Plus( numOfOptionsToAppearInBoard  countEmptyCellsInRows_ThatNotContainsNum )  Maximum( countEmptyCellInRow  NumOfOptionsInCell ) )  div( Maximum( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInSquareContainsNum )  Mod( NumOfOptionsInCell  countEmptyCellsInSquareContainsNum ) ) ) ) ),((((( countEmptyCellInRow  Max  countEmptyCellInCol ) * ( countEmptyCellInSquare  -  countEmptyCellsInRows_ThatNotContainsNum )) % (( countEmptyCellInCol  *  countEmptyCellsInCols_ThatNotContainsNum ) + ( countEmptyCellsInRows_ThatNotContainsNum  *  numOfOptionsToAppearInBoard ))) Min ((( countEmptyCellsInSquareContainsNum  /  countEmptyCellsInRows_ThatNotContainsNum ) - ( countEmptyCellsInRowsContainsNum  *  countEmptyCellsInSquareContainsNum )) * (( countEmptyCellsInRowsContainsNum  +  countEmptyCellsInRowsContainsNum ) % ( countEmptyCellsInCols_ThatNotContainsNum  +  countEmptyCellsInSquare_ThatNotContainsNum )))) - (((( countEmptyCellsInRows_ThatNotContainsNum  -  countEmptyCellsInRowsContainsNum ) Max ( countEmptyCellInSquare  /  numOfOptionsToAppearInBoard )) / (( numOfOptionsToAppearInBoard  *  countEmptyCellsInSquare_ThatNotContainsNum ) * ( countEmptyCellsInCols_ThatNotContainsNum  %  countEmptyCellsInColsContainsNum ))) + ((( numOfOptionsToAppearInBoard  +  countEmptyCellsInRows_ThatNotContainsNum ) Max ( countEmptyCellInRow  Max  NumOfOptionsInCell )) Min (( countEmptyCellsInSquare_ThatNotContainsNum  Max  countEmptyCellsInSquareContainsNum ) / ( NumOfOptionsInCell  %  countEmptyCellsInSquareContainsNum ))))),
25,21.0,5.0,12.01,Minimum( Maximum( Mod( Mod( Maximum( countEmptyCellInCol  countEmptyCellsInSquareContainsNum )  Minus( countEmptyCellInSquare  countEmptyCellsInColsContainsNum ) )  Mod( div( NumOfOptionsInCell  countEmptyCellsInSquare_ThatNotContainsNum )  div( countEmptyCellsInRowsContainsNum  countEmptyCellsInColsContainsNum ) ) )  Minimum( Minimum( Plus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellInRow )  Multi( numOfOptionsToAppearInBoard  countEmptyCellsInSquare_ThatNotContainsNum ) )  Maximum( Minimum( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum )  Multi( countEmptyCellInCol  countEmptyCellInCol ) ) ) )  Plus( Plus( Multi( Plus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInSquareContainsNum )  div( countEmptyCellsInRowsContainsNum  countEmptyCellInRow ) )  Mod( Plus( countEmptyCellsInRowsContainsNum  countEmptyCellsInCols_ThatNotContainsNum )  Minus( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) ) )  Multi( Plus( Minimum( countEmptyCellInCol  NumOfOptionsInCell )  Multi( NumOfOptionsInCell  countEmptyCellInRow ) )  Maximum( Mod( numOfOptionsToAppearInBoard  countEmptyCellsInSquareContainsNum )  Mod( numOfOptionsToAppearInBoard  countEmptyCellsInSquare_ThatNotContainsNum ) ) ) ) ),((((( countEmptyCellInCol  Max  countEmptyCellsInSquareContainsNum ) % ( countEmptyCellInSquare  -  countEmptyCellsInColsContainsNum )) % (( NumOfOptionsInCell  /  countEmptyCellsInSquare_ThatNotContainsNum ) % ( countEmptyCellsInRowsContainsNum  /  countEmptyCellsInColsContainsNum ))) Max ((( countEmptyCellsInCols_ThatNotContainsNum  +  countEmptyCellInRow ) Min ( numOfOptionsToAppearInBoard  *  countEmptyCellsInSquare_ThatNotContainsNum )) Min (( countEmptyCellsInSquare_ThatNotContainsNum  Min  countEmptyCellsInCols_ThatNotContainsNum ) Max ( countEmptyCellInCol  *  countEmptyCellInCol )))) Min (((( countEmptyCellsInCols_ThatNotContainsNum  +  countEmptyCellsInSquareContainsNum ) * ( countEmptyCellsInRowsContainsNum  /  countEmptyCellInRow )) + (( countEmptyCellsInRowsContainsNum  +  countEmptyCellsInCols_ThatNotContainsNum ) % ( countEmptyCellsInRows_ThatNotContainsNum  -  countEmptyCellsInRows_ThatNotContainsNum ))) + ((( countEmptyCellInCol  Min  NumOfOptionsInCell ) + ( NumOfOptionsInCell  *  countEmptyCellInRow )) * (( numOfOptionsToAppearInBoard  %  countEmptyCellsInSquareContainsNum ) Max ( numOfOptionsToAppearInBoard  %  countEmptyCellsInSquare_ThatNotContainsNum ))))),
26,21.0,5.0,12.09,Minimum( Maximum( Mod( Mod( Maximum( countEmptyCellInCol  countEmptyCellsInSquareContainsNum )  Minus( countEmptyCellInSquare  countEmptyCellsInColsContainsNum ) )  Mod( div( NumOfOptionsInCell  countEmptyCellsInSquare_ThatNotContainsNum )  div( countEmptyCellsInRowsContainsNum  countEmptyCellsInColsContainsNum ) ) )  Minimum( Minimum( Plus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellInRow )  Multi( numOfOptionsToAppearInBoard  countEmptyCellsInSquare_ThatNotContainsNum ) )  Maximum( Minimum( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum )  Multi( countEmptyCellInCol  countEmptyCellInCol ) ) ) )  Plus( Plus( Multi( Plus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInSquareContainsNum )  div( countEmptyCellsInRowsContainsNum  countEmptyCellInRow ) )  Mod( Minus( NumOfOptionsInCell  countEmptyCellsInCols_ThatNotContainsNum )  Minus( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) ) )  Multi( Plus( Minimum( countEmptyCellInCol  NumOfOptionsInCell )  Multi( NumOfOptionsInCell  countEmptyCellInRow ) )  Maximum( Mod( numOfOptionsToAppearInBoard  countEmptyCellsInSquareContainsNum )  Mod( numOfOptionsToAppearInBoard  countEmptyCellsInSquare_ThatNotContainsNum ) ) ) ) ),((((( countEmptyCellInCol  Max  countEmptyCellsInSquareContainsNum ) % ( countEmptyCellInSquare  -  countEmptyCellsInColsContainsNum )) % (( NumOfOptionsInCell  /  countEmptyCellsInSquare_ThatNotContainsNum ) % ( countEmptyCellsInRowsContainsNum  /  countEmptyCellsInColsContainsNum ))) Max ((( countEmptyCellsInCols_ThatNotContainsNum  +  countEmptyCellInRow ) Min ( numOfOptionsToAppearInBoard  *  countEmptyCellsInSquare_ThatNotContainsNum )) Min (( countEmptyCellsInSquare_ThatNotContainsNum  Min  countEmptyCellsInCols_ThatNotContainsNum ) Max ( countEmptyCellInCol  *  countEmptyCellInCol )))) Min (((( countEmptyCellsInCols_ThatNotContainsNum  +  countEmptyCellsInSquareContainsNum ) * ( countEmptyCellsInRowsContainsNum  /  countEmptyCellInRow )) + (( NumOfOptionsInCell  -  countEmptyCellsInCols_ThatNotContainsNum ) % ( countEmptyCellsInRows_ThatNotContainsNum  -  countEmptyCellsInRows_ThatNotContainsNum ))) + ((( countEmptyCellInCol  Min  NumOfOptionsInCell ) + ( NumOfOptionsInCell  *  countEmptyCellInRow )) * (( numOfOptionsToAppearInBoard  %  countEmptyCellsInSquareContainsNum ) Max ( numOfOptionsToAppearInBoard  %  countEmptyCellsInSquare_ThatNotContainsNum ))))),
27,22.0,5.0,12.16,Minimum( Maximum( Mod( Mod( Maximum( countEmptyCellInCol  countEmptyCellsInSquareContainsNum )  Minus( countEmptyCellInSquare  countEmptyCellsInColsContainsNum ) )  Mod( div( NumOfOptionsInCell  countEmptyCellsInSquare_ThatNotContainsNum )  div( countEmptyCellsInRowsContainsNum  countEmptyCellsInColsContainsNum ) ) )  Minimum( Minimum( Plus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellInRow )  Multi( numOfOptionsToAppearInBoard  countEmptyCellsInSquare_ThatNotContainsNum ) )  Maximum( Minimum( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum )  Multi( countEmptyCellInCol  countEmptyCellInCol ) ) ) )  Plus( Plus( Multi( Plus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInSquareContainsNum )  div( countEmptyCellsInRowsContainsNum  countEmptyCellInRow ) )  div( Multi( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInCol )  Minus( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) ) )  Multi( Plus( Minimum( countEmptyCellInCol  NumOfOptionsInCell )  Multi( NumOfOptionsInCell  countEmptyCellInRow ) )  Maximum( Mod( numOfOptionsToAppearInBoard  countEmptyCellsInSquareContainsNum )  Mod( numOfOptionsToAppearInBoard  countEmptyCellsInSquare_ThatNotContainsNum ) ) ) ) ),((((( countEmptyCellInCol  Max  countEmptyCellsInSquareContainsNum ) % ( countEmptyCellInSquare  -  countEmptyCellsInColsContainsNum )) % (( NumOfOptionsInCell  /  countEmptyCellsInSquare_ThatNotContainsNum ) % ( countEmptyCellsInRowsContainsNum  /  countEmptyCellsInColsContainsNum ))) Max ((( countEmptyCellsInCols_ThatNotContainsNum  +  countEmptyCellInRow ) Min ( numOfOptionsToAppearInBoard  *  countEmptyCellsInSquare_ThatNotContainsNum )) Min (( countEmptyCellsInSquare_ThatNotContainsNum  Min  countEmptyCellsInCols_ThatNotContainsNum ) Max ( countEmptyCellInCol  *  countEmptyCellInCol )))) Min (((( countEmptyCellsInCols_ThatNotContainsNum  +  countEmptyCellsInSquareContainsNum ) * ( countEmptyCellsInRowsContainsNum  /  countEmptyCellInRow )) + (( countEmptyCellsInRows_ThatNotContainsNum  *  countEmptyCellInCol ) / ( countEmptyCellsInSquare_ThatNotContainsNum  -  countEmptyCellsInRows_ThatNotContainsNum ))) + ((( countEmptyCellInCol  Min  NumOfOptionsInCell ) + ( NumOfOptionsInCell  *  countEmptyCellInRow )) * (( numOfOptionsToAppearInBoard  %  countEmptyCellsInSquareContainsNum ) Max ( numOfOptionsToAppearInBoard  %  countEmptyCellsInSquare_ThatNotContainsNum ))))),
28,20.0,5.0,12.06,Minimum( Maximum( Mod( Mod( Maximum( countEmptyCellInCol  countEmptyCellsInSquareContainsNum )  Minus( countEmptyCellInSquare  countEmptyCellsInColsContainsNum ) )  Multi( div( countEmptyCellInSquare  countEmptyCellInSquare )  Minus( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) ) )  Minimum( Minimum( Plus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellInRow )  Multi( numOfOptionsToAppearInBoard  countEmptyCellsInSquare_ThatNotContainsNum ) )  Maximum( Minimum( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum )  Multi( countEmptyCellInCol  countEmptyCellInCol ) ) ) )  Plus( Plus( Multi( Plus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInSquareContainsNum )  div( countEmptyCellsInRowsContainsNum  countEmptyCellInRow ) )  div( Multi( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInCol )  Minus( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) ) )  Multi( Plus( Minimum( countEmptyCellInCol  NumOfOptionsInCell )  Multi( NumOfOptionsInCell  countEmptyCellInRow ) )  Maximum( Mod( numOfOptionsToAppearInBoard  countEmptyCellsInSquareContainsNum )  Mod( numOfOptionsToAppearInBoard  countEmptyCellsInSquare_ThatNotContainsNum ) ) ) ) ),((((( countEmptyCellInCol  Max  countEmptyCellsInSquareContainsNum ) % ( countEmptyCellInSquare  -  countEmptyCellsInColsContainsNum )) % (( countEmptyCellInSquare  /  countEmptyCellInSquare ) * ( countEmptyCellsInSquare_ThatNotContainsNum  -  countEmptyCellsInRows_ThatNotContainsNum ))) Max ((( countEmptyCellsInCols_ThatNotContainsNum  +  countEmptyCellInRow ) Min ( numOfOptionsToAppearInBoard  *  countEmptyCellsInSquare_ThatNotContainsNum )) Min (( countEmptyCellsInSquare_ThatNotContainsNum  Min  countEmptyCellsInCols_ThatNotContainsNum ) Max ( countEmptyCellInCol  *  countEmptyCellInCol )))) Min (((( countEmptyCellsInCols_ThatNotContainsNum  +  countEmptyCellsInSquareContainsNum ) * ( countEmptyCellsInRowsContainsNum  /  countEmptyCellInRow )) + (( countEmptyCellsInRows_ThatNotContainsNum  *  countEmptyCellInCol ) / ( countEmptyCellsInSquare_ThatNotContainsNum  -  countEmptyCellsInRows_ThatNotContainsNum ))) + ((( countEmptyCellInCol  Min  NumOfOptionsInCell ) + ( NumOfOptionsInCell  *  countEmptyCellInRow )) * (( numOfOptionsToAppearInBoard  %  countEmptyCellsInSquareContainsNum ) Max ( numOfOptionsToAppearInBoard  %  countEmptyCellsInSquare_ThatNotContainsNum ))))),
29,21.0,5.0,12.31,Minimum( Maximum( Mod( Mod( Maximum( countEmptyCellInCol  countEmptyCellsInSquareContainsNum )  Minus( countEmptyCellInSquare  countEmptyCellsInColsContainsNum ) )  Multi( div( countEmptyCellInSquare  countEmptyCellInSquare )  Minus( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) ) )  Minimum( Minimum( Plus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellInRow )  Multi( numOfOptionsToAppearInBoard  countEmptyCellsInSquare_ThatNotContainsNum ) )  Maximum( Minimum( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum )  Multi( countEmptyCellInCol  countEmptyCellInCol ) ) ) )  Plus( Minimum( Maximum( Minus( countEmptyCellInRow  numOfOptionsToAppearInBoard )  Minimum( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellInCol ) )  Multi( Minus( countEmptyCellsInSquareContainsNum  numOfOptionsToAppearInBoard )  Mod( NumOfOptionsInCell  countEmptyCellsInRowsContainsNum ) ) )  Multi( Plus( Minimum( countEmptyCellInCol  NumOfOptionsInCell )  Multi( NumOfOptionsInCell  countEmptyCellInRow ) )  Maximum( Mod( numOfOptionsToAppearInBoard  countEmptyCellsInSquareContainsNum )  Mod( numOfOptionsToAppearInBoard  countEmptyCellsInSquare_ThatNotContainsNum ) ) ) ) ),((((( countEmptyCellInCol  Max  countEmptyCellsInSquareContainsNum ) % ( countEmptyCellInSquare  -  countEmptyCellsInColsContainsNum )) % (( countEmptyCellInSquare  /  countEmptyCellInSquare ) * ( countEmptyCellsInSquare_ThatNotContainsNum  -  countEmptyCellsInRows_ThatNotContainsNum ))) Max ((( countEmptyCellsInCols_ThatNotContainsNum  +  countEmptyCellInRow ) Min ( numOfOptionsToAppearInBoard  *  countEmptyCellsInSquare_ThatNotContainsNum )) Min (( countEmptyCellsInSquare_ThatNotContainsNum  Min  countEmptyCellsInCols_ThatNotContainsNum ) Max ( countEmptyCellInCol  *  countEmptyCellInCol )))) Min (((( countEmptyCellInRow  -  numOfOptionsToAppearInBoard ) Max ( countEmptyCellsInSquare_ThatNotContainsNum  Min  countEmptyCellInCol )) Min (( countEmptyCellsInSquareContainsNum  -  numOfOptionsToAppearInBoard ) * ( NumOfOptionsInCell  %  countEmptyCellsInRowsContainsNum ))) + ((( countEmptyCellInCol  Min  NumOfOptionsInCell ) + ( NumOfOptionsInCell  *  countEmptyCellInRow )) * (( numOfOptionsToAppearInBoard  %  countEmptyCellsInSquareContainsNum ) Max ( numOfOptionsToAppearInBoard  %  countEmptyCellsInSquare_ThatNotContainsNum ))))),
30,21.0,4.0,12.31,Plus( div( Maximum( Plus( div( countEmptyCellsInSquare_ThatNotContainsNum  numOfOptionsToAppearInBoard )  Multi( countEmptyCellInSquare  countEmptyCellsInColsContainsNum ) )  div( Mod( countEmptyCellInRow  countEmptyCellInSquare )  Mod( numOfOptionsToAppearInBoard  numOfOptionsToAppearInBoard ) ) )  Minimum( Multi( Minus( NumOfOptionsInCell  countEmptyCellsInCols_ThatNotContainsNum )  div( countEmptyCellInSquare  countEmptyCellsInSquareContainsNum ) )  Minus( Multi( countEmptyCellsInRows_ThatNotContainsNum  NumOfOptionsInCell )  Mod( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) ) ) )  Minus( Minimum( Mod( Minimum( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInSquareContainsNum )  Minus( countEmptyCellsInSquareContainsNum  countEmptyCellsInColsContainsNum ) )  Mod( Minimum( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRowsContainsNum )  Plus( countEmptyCellsInColsContainsNum  numOfOptionsToAppearInBoard ) ) )  div( Minus( Minimum( countEmptyCellInRow  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInColsContainsNum ) )  Maximum( Mod( countEmptyCellsInSquareContainsNum  countEmptyCellsInSquare_ThatNotContainsNum )  Maximum( countEmptyCellsInRows_ThatNotContainsNum  numOfOptionsToAppearInBoard ) ) ) ) ),((((( countEmptyCellsInSquare_ThatNotContainsNum  /  numOfOptionsToAppearInBoard ) + ( countEmptyCellInSquare  *  countEmptyCellsInColsContainsNum )) Max (( countEmptyCellInRow  %  countEmptyCellInSquare ) / ( numOfOptionsToAppearInBoard  %  numOfOptionsToAppearInBoard ))) / ((( NumOfOptionsInCell  -  countEmptyCellsInCols_ThatNotContainsNum ) * ( countEmptyCellInSquare  /  countEmptyCellsInSquareContainsNum )) Min (( countEmptyCellsInRows_ThatNotContainsNum  *  NumOfOptionsInCell ) - ( countEmptyCellsInCols_ThatNotContainsNum  %  countEmptyCellsInRowsContainsNum )))) + (((( countEmptyCellsInRows_ThatNotContainsNum  Min  countEmptyCellsInSquareContainsNum ) % ( countEmptyCellsInSquareContainsNum  -  countEmptyCellsInColsContainsNum )) Min (( countEmptyCellsInRows_ThatNotContainsNum  Min  countEmptyCellsInRowsContainsNum ) % ( countEmptyCellsInColsContainsNum  +  numOfOptionsToAppearInBoard ))) - ((( countEmptyCellInRow  Min  numOfOptionsToAppearInBoard ) - ( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellsInColsContainsNum )) / (( countEmptyCellsInSquareContainsNum  %  countEmptyCellsInSquare_ThatNotContainsNum ) Max ( countEmptyCellsInRows_ThatNotContainsNum  Max  numOfOptionsToAppearInBoard ))))),
31,20.0,4.0,11.6,div( Maximum( Mod( Multi( Maximum( countEmptyCellsInColsContainsNum  countEmptyCellsInCols_ThatNotContainsNum )  Multi( countEmptyCellInSquare  numOfOptionsToAppearInBoard ) )  Mod( Maximum( NumOfOptionsInCell  countEmptyCellInCol )  Plus( NumOfOptionsInCell  countEmptyCellsInCols_ThatNotContainsNum ) ) )  Plus( div( Multi( NumOfOptionsInCell  countEmptyCellsInRows_ThatNotContainsNum )  div( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInCol ) )  Maximum( div( countEmptyCellsInColsContainsNum  countEmptyCellsInRows_ThatNotContainsNum )  Minus( countEmptyCellInRow  countEmptyCellInRow ) ) ) )  div( Minimum( Multi( Minus( countEmptyCellsInSquareContainsNum  countEmptyCellsInSquare_ThatNotContainsNum )  Maximum( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) )  Minimum( Maximum( NumOfOptionsInCell  countEmptyCellsInSquareContainsNum )  Plus( NumOfOptionsInCell  countEmptyCellsInSquareContainsNum ) ) )  div( Maximum( Mod( countEmptyCellsInColsContainsNum  countEmptyCellsInCols_ThatNotContainsNum )  Multi( countEmptyCellInSquare  countEmptyCellsInSquareContainsNum ) )  Plus( div( countEmptyCellsInRows_ThatNotContainsNum  NumOfOptionsInCell )  div( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) ) ) ) ),((((( countEmptyCellsInColsContainsNum  Max  countEmptyCellsInCols_ThatNotContainsNum ) * ( countEmptyCellInSquare  *  numOfOptionsToAppearInBoard )) % (( NumOfOptionsInCell  Max  countEmptyCellInCol ) % ( NumOfOptionsInCell  +  countEmptyCellsInCols_ThatNotContainsNum ))) Max ((( NumOfOptionsInCell  *  countEmptyCellsInRows_ThatNotContainsNum ) / ( countEmptyCellsInRows_ThatNotContainsNum  /  countEmptyCellInCol )) + (( countEmptyCellsInColsContainsNum  /  countEmptyCellsInRows_ThatNotContainsNum ) Max ( countEmptyCellInRow  -  countEmptyCellInRow )))) / (((( countEmptyCellsInSquareContainsNum  -  countEmptyCellsInSquare_ThatNotContainsNum ) * ( countEmptyCellsInRows_ThatNotContainsNum  Max  countEmptyCellsInCols_ThatNotContainsNum )) Min (( NumOfOptionsInCell  Max  countEmptyCellsInSquareContainsNum ) Min ( NumOfOptionsInCell  +  countEmptyCellsInSquareContainsNum ))) / ((( countEmptyCellsInColsContainsNum  %  countEmptyCellsInCols_ThatNotContainsNum ) Max ( countEmptyCellInSquare  *  countEmptyCellsInSquareContainsNum )) / (( countEmptyCellsInRows_ThatNotContainsNum  /  NumOfOptionsInCell ) + ( countEmptyCellsInRows_ThatNotContainsNum  /  countEmptyCellsInCols_ThatNotContainsNum ))))),
32,20.0,4.0,12.17,div( Maximum( Mod( Multi( Maximum( countEmptyCellsInColsContainsNum  countEmptyCellsInCols_ThatNotContainsNum )  Multi( countEmptyCellInSquare  numOfOptionsToAppearInBoard ) )  Mod( Maximum( NumOfOptionsInCell  countEmptyCellInCol )  Plus( NumOfOptionsInCell  countEmptyCellsInCols_ThatNotContainsNum ) ) )  Plus( div( Multi( NumOfOptionsInCell  countEmptyCellsInRows_ThatNotContainsNum )  div( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInCol ) )  Maximum( div( countEmptyCellsInColsContainsNum  countEmptyCellsInRows_ThatNotContainsNum )  Minus( countEmptyCellInRow  countEmptyCellInRow ) ) ) )  div( Minimum( Multi( Minus( countEmptyCellsInSquareContainsNum  countEmptyCellsInSquare_ThatNotContainsNum )  Maximum( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) )  Minimum( Maximum( NumOfOptionsInCell  countEmptyCellsInSquareContainsNum )  Plus( NumOfOptionsInCell  countEmptyCellsInSquareContainsNum ) ) )  div( Maximum( Mod( countEmptyCellsInColsContainsNum  countEmptyCellsInCols_ThatNotContainsNum )  Multi( countEmptyCellInSquare  countEmptyCellsInSquareContainsNum ) )  Plus( div( countEmptyCellsInRows_ThatNotContainsNum  NumOfOptionsInCell )  div( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) ) ) ) ),((((( countEmptyCellsInColsContainsNum  Max  countEmptyCellsInCols_ThatNotContainsNum ) * ( countEmptyCellInSquare  *  numOfOptionsToAppearInBoard )) % (( NumOfOptionsInCell  Max  countEmptyCellInCol ) % ( NumOfOptionsInCell  +  countEmptyCellsInCols_ThatNotContainsNum ))) Max ((( NumOfOptionsInCell  *  countEmptyCellsInRows_ThatNotContainsNum ) / ( countEmptyCellsInRows_ThatNotContainsNum  /  countEmptyCellInCol )) + (( countEmptyCellsInColsContainsNum  /  countEmptyCellsInRows_ThatNotContainsNum ) Max ( countEmptyCellInRow  -  countEmptyCellInRow )))) / (((( countEmptyCellsInSquareContainsNum  -  countEmptyCellsInSquare_ThatNotContainsNum ) * ( countEmptyCellsInRows_ThatNotContainsNum  Max  countEmptyCellsInCols_ThatNotContainsNum )) Min (( NumOfOptionsInCell  Max  countEmptyCellsInSquareContainsNum ) Min ( NumOfOptionsInCell  +  countEmptyCellsInSquareContainsNum ))) / ((( countEmptyCellsInColsContainsNum  %  countEmptyCellsInCols_ThatNotContainsNum ) Max ( countEmptyCellInSquare  *  countEmptyCellsInSquareContainsNum )) / (( countEmptyCellsInRows_ThatNotContainsNum  /  NumOfOptionsInCell ) + ( countEmptyCellsInRows_ThatNotContainsNum  /  countEmptyCellsInCols_ThatNotContainsNum ))))),
33,20.0,4.0,11.97,Minimum( Minus( Multi( Plus( Maximum( countEmptyCellsInColsContainsNum  countEmptyCellsInCols_ThatNotContainsNum )  Multi( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellInSquare ) )  Plus( Minimum( countEmptyCellsInSquareContainsNum  countEmptyCellInCol )  Multi( countEmptyCellsInColsContainsNum  countEmptyCellInSquare ) ) )  Mod( Minus( Mod( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellInCol )  Minimum( countEmptyCellInSquare  countEmptyCellsInRows_ThatNotContainsNum ) )  Mod( Minimum( numOfOptionsToAppearInBoard  countEmptyCellInCol )  Mod( countEmptyCellsInRowsContainsNum  countEmptyCellInRow ) ) ) )  Minus( Multi( Plus( Maximum( countEmptyCellInRow  countEmptyCellsInCols_ThatNotContainsNum )  Maximum( countEmptyCellsInRowsContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) )  Multi( div( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRowsContainsNum )  Plus( NumOfOptionsInCell  countEmptyCellsInSquareContainsNum ) ) )  Mod( Minus( Minus( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInSquareContainsNum )  Plus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) )  div( div( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInSquare_ThatNotContainsNum )  Multi( NumOfOptionsInCell  countEmptyCellsInSquare_ThatNotContainsNum ) ) ) ) ),((((( countEmptyCellsInColsContainsNum  Max  countEmptyCellsInCols_ThatNotContainsNum ) + ( countEmptyCellsInCols_ThatNotContainsNum  *  countEmptyCellInSquare )) * (( countEmptyCellsInSquareContainsNum  Min  countEmptyCellInCol ) + ( countEmptyCellsInColsContainsNum  *  countEmptyCellInSquare ))) - ((( countEmptyCellsInCols_ThatNotContainsNum  %  countEmptyCellInCol ) - ( countEmptyCellInSquare  Min  countEmptyCellsInRows_ThatNotContainsNum )) % (( numOfOptionsToAppearInBoard  Min  countEmptyCellInCol ) % ( countEmptyCellsInRowsContainsNum  %  countEmptyCellInRow )))) Min (((( countEmptyCellInRow  Max  countEmptyCellsInCols_ThatNotContainsNum ) + ( countEmptyCellsInRowsContainsNum  Max  countEmptyCellsInCols_ThatNotContainsNum )) * (( countEmptyCellsInRows_ThatNotContainsNum  /  countEmptyCellsInRowsContainsNum ) * ( NumOfOptionsInCell  +  countEmptyCellsInSquareContainsNum ))) - ((( countEmptyCellsInRows_ThatNotContainsNum  -  countEmptyCellsInSquareContainsNum ) - ( countEmptyCellsInCols_ThatNotContainsNum  +  countEmptyCellsInCols_ThatNotContainsNum )) % (( countEmptyCellsInRows_ThatNotContainsNum  /  countEmptyCellsInSquare_ThatNotContainsNum ) / ( NumOfOptionsInCell  *  countEmptyCellsInSquare_ThatNotContainsNum ))))),
34,19.0,4.0,12.04,Minimum( Plus( Multi( Mod( Minus( countEmptyCellsInColsContainsNum  numOfOptionsToAppearInBoard )  Minus( numOfOptionsToAppearInBoard  countEmptyCellsInSquare_ThatNotContainsNum ) )  Multi( Plus( numOfOptionsToAppearInBoard  NumOfOptionsInCell )  div( NumOfOptionsInCell  countEmptyCellsInSquareContainsNum ) ) )  Minimum( Minimum( Mod( countEmptyCellsInRowsContainsNum  countEmptyCellsInSquareContainsNum )  Multi( NumOfOptionsInCell  countEmptyCellsInSquareContainsNum ) )  Minimum( Mod( countEmptyCellInCol  countEmptyCellsInSquare_ThatNotContainsNum )  Maximum( NumOfOptionsInCell  countEmptyCellsInColsContainsNum ) ) ) )  Minus( Minus( Maximum( div( countEmptyCellsInRowsContainsNum  countEmptyCellsInSquareContainsNum )  div( numOfOptionsToAppearInBoard  countEmptyCellsInColsContainsNum ) )  div( Minimum( countEmptyCellInCol  countEmptyCellInRow )  Plus( numOfOptionsToAppearInBoard  countEmptyCellInRow ) ) )  Multi( Minimum( Plus( countEmptyCellInCol  NumOfOptionsInCell )  Minimum( countEmptyCellsInRowsContainsNum  countEmptyCellsInRowsContainsNum ) )  Maximum( Plus( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum )  Plus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) ) ) ) ),((((( countEmptyCellsInColsContainsNum  -  numOfOptionsToAppearInBoard ) % ( numOfOptionsToAppearInBoard  -  countEmptyCellsInSquare_ThatNotContainsNum )) * (( numOfOptionsToAppearInBoard  +  NumOfOptionsInCell ) * ( NumOfOptionsInCell  /  countEmptyCellsInSquareContainsNum ))) + ((( countEmptyCellsInRowsContainsNum  %  countEmptyCellsInSquareContainsNum ) Min ( NumOfOptionsInCell  *  countEmptyCellsInSquareContainsNum )) Min (( countEmptyCellInCol  %  countEmptyCellsInSquare_ThatNotContainsNum ) Min ( NumOfOptionsInCell  Max  countEmptyCellsInColsContainsNum )))) Min (((( countEmptyCellsInRowsContainsNum  /  countEmptyCellsInSquareContainsNum ) Max ( numOfOptionsToAppearInBoard  /  countEmptyCellsInColsContainsNum )) - (( countEmptyCellInCol  Min  countEmptyCellInRow ) / ( numOfOptionsToAppearInBoard  +  countEmptyCellInRow ))) - ((( countEmptyCellInCol  +  NumOfOptionsInCell ) Min ( countEmptyCellsInRowsContainsNum  Min  countEmptyCellsInRowsContainsNum )) * (( countEmptyCellsInSquare_ThatNotContainsNum  +  countEmptyCellsInCols_ThatNotContainsNum ) Max ( countEmptyCellsInCols_ThatNotContainsNum  +  countEmptyCellsInCols_ThatNotContainsNum ))))),
35,20.0,4.0,12.13,Minimum( Plus( Multi( Mod( Minus( countEmptyCellsInColsContainsNum  numOfOptionsToAppearInBoard )  Minus( numOfOptionsToAppearInBoard  countEmptyCellsInSquare_ThatNotContainsNum ) )  Multi( Plus( numOfOptionsToAppearInBoard  NumOfOptionsInCell )  div( NumOfOptionsInCell  countEmptyCellsInSquareContainsNum ) ) )  Minimum( Minimum( Mod( countEmptyCellsInRowsContainsNum  countEmptyCellsInSquareContainsNum )  Multi( NumOfOptionsInCell  countEmptyCellsInSquareContainsNum ) )  Minimum( Mod( countEmptyCellInCol  countEmptyCellsInSquare_ThatNotContainsNum )  Maximum( NumOfOptionsInCell  countEmptyCellsInColsContainsNum ) ) ) )  Minus( Minus( Maximum( div( countEmptyCellsInRowsContainsNum  countEmptyCellsInSquareContainsNum )  div( numOfOptionsToAppearInBoard  countEmptyCellsInColsContainsNum ) )  div( Minimum( countEmptyCellInCol  countEmptyCellInRow )  Plus( numOfOptionsToAppearInBoard  countEmptyCellInRow ) ) )  Multi( Minimum( Plus( countEmptyCellInCol  NumOfOptionsInCell )  Minimum( countEmptyCellsInRowsContainsNum  countEmptyCellsInRowsContainsNum ) )  Maximum( Minimum( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRowsContainsNum )  Plus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) ) ) ) ),((((( countEmptyCellsInColsContainsNum  -  numOfOptionsToAppearInBoard ) % ( numOfOptionsToAppearInBoard  -  countEmptyCellsInSquare_ThatNotContainsNum )) * (( numOfOptionsToAppearInBoard  +  NumOfOptionsInCell ) * ( NumOfOptionsInCell  /  countEmptyCellsInSquareContainsNum ))) + ((( countEmptyCellsInRowsContainsNum  %  countEmptyCellsInSquareContainsNum ) Min ( NumOfOptionsInCell  *  countEmptyCellsInSquareContainsNum )) Min (( countEmptyCellInCol  %  countEmptyCellsInSquare_ThatNotContainsNum ) Min ( NumOfOptionsInCell  Max  countEmptyCellsInColsContainsNum )))) Min (((( countEmptyCellsInRowsContainsNum  /  countEmptyCellsInSquareContainsNum ) Max ( numOfOptionsToAppearInBoard  /  countEmptyCellsInColsContainsNum )) - (( countEmptyCellInCol  Min  countEmptyCellInRow ) / ( numOfOptionsToAppearInBoard  +  countEmptyCellInRow ))) - ((( countEmptyCellInCol  +  NumOfOptionsInCell ) Min ( countEmptyCellsInRowsContainsNum  Min  countEmptyCellsInRowsContainsNum )) * (( countEmptyCellsInRows_ThatNotContainsNum  Min  countEmptyCellsInRowsContainsNum ) Max ( countEmptyCellsInCols_ThatNotContainsNum  +  countEmptyCellsInCols_ThatNotContainsNum ))))),
36,20.0,4.0,12.18,Minimum( Plus( Multi( Mod( Minus( countEmptyCellsInColsContainsNum  numOfOptionsToAppearInBoard )  Minus( numOfOptionsToAppearInBoard  countEmptyCellsInSquare_ThatNotContainsNum ) )  Multi( Plus( numOfOptionsToAppearInBoard  NumOfOptionsInCell )  div( NumOfOptionsInCell  countEmptyCellsInSquareContainsNum ) ) )  Minimum( Minimum( Mod( countEmptyCellsInRowsContainsNum  countEmptyCellsInSquareContainsNum )  Multi( NumOfOptionsInCell  countEmptyCellsInSquareContainsNum ) )  Minimum( Mod( countEmptyCellInCol  countEmptyCellsInSquare_ThatNotContainsNum )  Maximum( NumOfOptionsInCell  countEmptyCellsInColsContainsNum ) ) ) )  Minus( Minus( Maximum( div( countEmptyCellsInRowsContainsNum  countEmptyCellsInSquareContainsNum )  div( numOfOptionsToAppearInBoard  countEmptyCellsInColsContainsNum ) )  div( Minimum( countEmptyCellInCol  countEmptyCellInRow )  Plus( numOfOptionsToAppearInBoard  countEmptyCellInRow ) ) )  Multi( Minimum( Plus( countEmptyCellInCol  NumOfOptionsInCell )  Minimum( countEmptyCellsInRowsContainsNum  countEmptyCellsInRowsContainsNum ) )  Maximum( Minimum( countEmptyCellInSquare  countEmptyCellsInRows_ThatNotContainsNum )  Plus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) ) ) ) ),((((( countEmptyCellsInColsContainsNum  -  numOfOptionsToAppearInBoard ) % ( numOfOptionsToAppearInBoard  -  countEmptyCellsInSquare_ThatNotContainsNum )) * (( numOfOptionsToAppearInBoard  +  NumOfOptionsInCell ) * ( NumOfOptionsInCell  /  countEmptyCellsInSquareContainsNum ))) + ((( countEmptyCellsInRowsContainsNum  %  countEmptyCellsInSquareContainsNum ) Min ( NumOfOptionsInCell  *  countEmptyCellsInSquareContainsNum )) Min (( countEmptyCellInCol  %  countEmptyCellsInSquare_ThatNotContainsNum ) Min ( NumOfOptionsInCell  Max  countEmptyCellsInColsContainsNum )))) Min (((( countEmptyCellsInRowsContainsNum  /  countEmptyCellsInSquareContainsNum ) Max ( numOfOptionsToAppearInBoard  /  countEmptyCellsInColsContainsNum )) - (( countEmptyCellInCol  Min  countEmptyCellInRow ) / ( numOfOptionsToAppearInBoard  +  countEmptyCellInRow ))) - ((( countEmptyCellInCol  +  NumOfOptionsInCell ) Min ( countEmptyCellsInRowsContainsNum  Min  countEmptyCellsInRowsContainsNum )) * (( countEmptyCellInSquare  Min  countEmptyCellsInRows_ThatNotContainsNum ) Max ( countEmptyCellsInCols_ThatNotContainsNum  +  countEmptyCellsInCols_ThatNotContainsNum ))))),
37,20.0,4.0,12.48,Minimum( Plus( Multi( Mod( Minus( countEmptyCellsInColsContainsNum  numOfOptionsToAppearInBoard )  Minus( numOfOptionsToAppearInBoard  countEmptyCellsInSquare_ThatNotContainsNum ) )  Multi( Plus( numOfOptionsToAppearInBoard  NumOfOptionsInCell )  div( NumOfOptionsInCell  countEmptyCellsInSquareContainsNum ) ) )  Minimum( Minimum( Mod( countEmptyCellsInRowsContainsNum  countEmptyCellsInSquareContainsNum )  Multi( NumOfOptionsInCell  countEmptyCellsInSquareContainsNum ) )  Minimum( Mod( countEmptyCellInCol  countEmptyCellsInSquare_ThatNotContainsNum )  Maximum( NumOfOptionsInCell  countEmptyCellsInColsContainsNum ) ) ) )  Minus( Minus( Maximum( div( countEmptyCellsInRowsContainsNum  countEmptyCellsInSquareContainsNum )  div( numOfOptionsToAppearInBoard  countEmptyCellsInColsContainsNum ) )  div( Minimum( countEmptyCellInCol  countEmptyCellInRow )  Plus( numOfOptionsToAppearInBoard  countEmptyCellInRow ) ) )  Multi( Minus( Plus( countEmptyCellsInSquare_ThatNotContainsNum  numOfOptionsToAppearInBoard )  div( countEmptyCellsInColsContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  Minimum( Minimum( NumOfOptionsInCell  countEmptyCellsInRows_ThatNotContainsNum )  Maximum( numOfOptionsToAppearInBoard  countEmptyCellsInRows_ThatNotContainsNum ) ) ) ) ),((((( countEmptyCellsInColsContainsNum  -  numOfOptionsToAppearInBoard ) % ( numOfOptionsToAppearInBoard  -  countEmptyCellsInSquare_ThatNotContainsNum )) * (( numOfOptionsToAppearInBoard  +  NumOfOptionsInCell ) * ( NumOfOptionsInCell  /  countEmptyCellsInSquareContainsNum ))) + ((( countEmptyCellsInRowsContainsNum  %  countEmptyCellsInSquareContainsNum ) Min ( NumOfOptionsInCell  *  countEmptyCellsInSquareContainsNum )) Min (( countEmptyCellInCol  %  countEmptyCellsInSquare_ThatNotContainsNum ) Min ( NumOfOptionsInCell  Max  countEmptyCellsInColsContainsNum )))) Min (((( countEmptyCellsInRowsContainsNum  /  countEmptyCellsInSquareContainsNum ) Max ( numOfOptionsToAppearInBoard  /  countEmptyCellsInColsContainsNum )) - (( countEmptyCellInCol  Min  countEmptyCellInRow ) / ( numOfOptionsToAppearInBoard  +  countEmptyCellInRow ))) - ((( countEmptyCellsInSquare_ThatNotContainsNum  +  numOfOptionsToAppearInBoard ) - ( countEmptyCellsInColsContainsNum  /  countEmptyCellsInRows_ThatNotContainsNum )) * (( NumOfOptionsInCell  Min  countEmptyCellsInRows_ThatNotContainsNum ) Min ( numOfOptionsToAppearInBoard  Max  countEmptyCellsInRows_ThatNotContainsNum ))))),
38,18.0,3.0,12.08,Maximum( div( Minimum( Minimum( div( numOfOptionsToAppearInBoard  countEmptyCellsInCols_ThatNotContainsNum )  Multi( NumOfOptionsInCell  countEmptyCellsInCols_ThatNotContainsNum ) )  Multi( div( countEmptyCellsInRowsContainsNum  countEmptyCellsInRowsContainsNum )  div( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInCol ) ) )  Maximum( Minus( Mod( countEmptyCellsInRowsContainsNum  countEmptyCellsInRowsContainsNum )  Minus( countEmptyCellInSquare  countEmptyCellsInSquareContainsNum ) )  Multi( Plus( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInSquare_ThatNotContainsNum )  Minimum( countEmptyCellInCol  countEmptyCellsInRows_ThatNotContainsNum ) ) ) )  Multi( Minimum( Plus( Multi( countEmptyCellsInRowsContainsNum  countEmptyCellsInCols_ThatNotContainsNum )  Plus( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellInSquare ) )  Maximum( Multi( countEmptyCellsInSquareContainsNum  countEmptyCellsInColsContainsNum )  Minus( NumOfOptionsInCell  countEmptyCellsInColsContainsNum ) ) )  Maximum( Maximum( Multi( countEmptyCellsInCols_ThatNotContainsNum  NumOfOptionsInCell )  div( numOfOptionsToAppearInBoard  countEmptyCellInRow ) )  Minus( div( countEmptyCellsInColsContainsNum  countEmptyCellInCol )  Minimum( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) ) ) ) ),((((( numOfOptionsToAppearInBoard  /  countEmptyCellsInCols_ThatNotContainsNum ) Min ( NumOfOptionsInCell  *  countEmptyCellsInCols_ThatNotContainsNum )) Min (( countEmptyCellsInRowsContainsNum  /  countEmptyCellsInRowsContainsNum ) * ( countEmptyCellsInRows_ThatNotContainsNum  /  countEmptyCellInCol ))) / ((( countEmptyCellsInRowsContainsNum  %  countEmptyCellsInRowsContainsNum ) - ( countEmptyCellInSquare  -  countEmptyCellsInSquareContainsNum )) Max (( countEmptyCellsInSquare_ThatNotContainsNum  +  countEmptyCellsInSquare_ThatNotContainsNum ) * ( countEmptyCellInCol  Min  countEmptyCellsInRows_ThatNotContainsNum )))) Max (((( countEmptyCellsInRowsContainsNum  *  countEmptyCellsInCols_ThatNotContainsNum ) + ( countEmptyCellsInSquare_ThatNotContainsNum  +  countEmptyCellInSquare )) Min (( countEmptyCellsInSquareContainsNum  *  countEmptyCellsInColsContainsNum ) Max ( NumOfOptionsInCell  -  countEmptyCellsInColsContainsNum ))) * ((( countEmptyCellsInCols_ThatNotContainsNum  *  NumOfOptionsInCell ) Max ( numOfOptionsToAppearInBoard  /  countEmptyCellInRow )) Max (( countEmptyCellsInColsContainsNum  /  countEmptyCellInCol ) - ( countEmptyCellsInRows_ThatNotContainsNum  Min  countEmptyCellsInCols_ThatNotContainsNum ))))),
39,20.0,3.0,12.5,Maximum( div( Minimum( Minimum( div( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum )  Multi( NumOfOptionsInCell  countEmptyCellsInCols_ThatNotContainsNum ) )  Multi( div( countEmptyCellsInRowsContainsNum  countEmptyCellsInRowsContainsNum )  div( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInCol ) ) )  Maximum( Minus( Mod( countEmptyCellsInRowsContainsNum  countEmptyCellsInRowsContainsNum )  Minus( countEmptyCellInSquare  countEmptyCellsInSquareContainsNum ) )  Multi( Plus( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInSquare_ThatNotContainsNum )  Minimum( countEmptyCellInCol  countEmptyCellsInRows_ThatNotContainsNum ) ) ) )  Multi( Minimum( Plus( Multi( countEmptyCellsInRowsContainsNum  countEmptyCellsInCols_ThatNotContainsNum )  Plus( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellInSquare ) )  Maximum( Multi( countEmptyCellsInSquareContainsNum  countEmptyCellsInColsContainsNum )  Minus( NumOfOptionsInCell  countEmptyCellsInColsContainsNum ) ) )  Maximum( Maximum( Multi( countEmptyCellsInCols_ThatNotContainsNum  NumOfOptionsInCell )  div( numOfOptionsToAppearInBoard  countEmptyCellInRow ) )  Minus( div( countEmptyCellsInColsContainsNum  countEmptyCellInCol )  Minimum( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) ) ) ) ),((((( countEmptyCellsInCols_ThatNotContainsNum  /  countEmptyCellsInRows_ThatNotContainsNum ) Min ( NumOfOptionsInCell  *  countEmptyCellsInCols_ThatNotContainsNum )) Min (( countEmptyCellsInRowsContainsNum  /  countEmptyCellsInRowsContainsNum ) * ( countEmptyCellsInRows_ThatNotContainsNum  /  countEmptyCellInCol ))) / ((( countEmptyCellsInRowsContainsNum  %  countEmptyCellsInRowsContainsNum ) - ( countEmptyCellInSquare  -  countEmptyCellsInSquareContainsNum )) Max (( countEmptyCellsInSquare_ThatNotContainsNum  +  countEmptyCellsInSquare_ThatNotContainsNum ) * ( countEmptyCellInCol  Min  countEmptyCellsInRows_ThatNotContainsNum )))) Max (((( countEmptyCellsInRowsContainsNum  *  countEmptyCellsInCols_ThatNotContainsNum ) + ( countEmptyCellsInSquare_ThatNotContainsNum  +  countEmptyCellInSquare )) Min (( countEmptyCellsInSquareContainsNum  *  countEmptyCellsInColsContainsNum ) Max ( NumOfOptionsInCell  -  countEmptyCellsInColsContainsNum ))) * ((( countEmptyCellsInCols_ThatNotContainsNum  *  NumOfOptionsInCell ) Max ( numOfOptionsToAppearInBoard  /  countEmptyCellInRow )) Max (( countEmptyCellsInColsContainsNum  /  countEmptyCellInCol ) - ( countEmptyCellsInRows_ThatNotContainsNum  Min  countEmptyCellsInCols_ThatNotContainsNum ))))),
40,20.0,3.0,12.32,Maximum( div( Minimum( Minimum( div( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum )  Multi( NumOfOptionsInCell  countEmptyCellsInCols_ThatNotContainsNum ) )  Multi( Minimum( numOfOptionsToAppearInBoard  numOfOptionsToAppearInBoard )  div( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInCol ) ) )  Maximum( Minus( Mod( countEmptyCellsInRowsContainsNum  countEmptyCellsInRowsContainsNum )  Minus( countEmptyCellInSquare  countEmptyCellsInSquareContainsNum ) )  Multi( Plus( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInSquare_ThatNotContainsNum )  Minimum( countEmptyCellInCol  countEmptyCellsInRows_ThatNotContainsNum ) ) ) )  Multi( Minimum( Plus( Multi( countEmptyCellsInRowsContainsNum  countEmptyCellsInCols_ThatNotContainsNum )  Plus( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellInSquare ) )  Maximum( Multi( countEmptyCellsInSquareContainsNum  countEmptyCellsInColsContainsNum )  Minus( NumOfOptionsInCell  countEmptyCellsInColsContainsNum ) ) )  Maximum( Maximum( Multi( countEmptyCellsInCols_ThatNotContainsNum  NumOfOptionsInCell )  div( numOfOptionsToAppearInBoard  countEmptyCellInRow ) )  Minus( div( countEmptyCellsInColsContainsNum  countEmptyCellInCol )  Minimum( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) ) ) ) ),((((( countEmptyCellsInCols_ThatNotContainsNum  /  countEmptyCellsInRows_ThatNotContainsNum ) Min ( NumOfOptionsInCell  *  countEmptyCellsInCols_ThatNotContainsNum )) Min (( numOfOptionsToAppearInBoard  Min  numOfOptionsToAppearInBoard ) * ( countEmptyCellsInRows_ThatNotContainsNum  /  countEmptyCellInCol ))) / ((( countEmptyCellsInRowsContainsNum  %  countEmptyCellsInRowsContainsNum ) - ( countEmptyCellInSquare  -  countEmptyCellsInSquareContainsNum )) Max (( countEmptyCellsInSquare_ThatNotContainsNum  +  countEmptyCellsInSquare_ThatNotContainsNum ) * ( countEmptyCellInCol  Min  countEmptyCellsInRows_ThatNotContainsNum )))) Max (((( countEmptyCellsInRowsContainsNum  *  countEmptyCellsInCols_ThatNotContainsNum ) + ( countEmptyCellsInSquare_ThatNotContainsNum  +  countEmptyCellInSquare )) Min (( countEmptyCellsInSquareContainsNum  *  countEmptyCellsInColsContainsNum ) Max ( NumOfOptionsInCell  -  countEmptyCellsInColsContainsNum ))) * ((( countEmptyCellsInCols_ThatNotContainsNum  *  NumOfOptionsInCell ) Max ( numOfOptionsToAppearInBoard  /  countEmptyCellInRow )) Max (( countEmptyCellsInColsContainsNum  /  countEmptyCellInCol ) - ( countEmptyCellsInRows_ThatNotContainsNum  Min  countEmptyCellsInCols_ThatNotContainsNum ))))),
41,20.0,3.0,12.16,Maximum( div( Minimum( Minimum( div( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum )  Multi( NumOfOptionsInCell  countEmptyCellsInCols_ThatNotContainsNum ) )  Multi( Minimum( numOfOptionsToAppearInBoard  numOfOptionsToAppearInBoard )  div( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInCol ) ) )  Maximum( Minus( Mod( countEmptyCellsInRowsContainsNum  countEmptyCellsInRowsContainsNum )  Minus( countEmptyCellInSquare  countEmptyCellsInSquareContainsNum ) )  Multi( Plus( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInSquare_ThatNotContainsNum )  Minimum( countEmptyCellInCol  countEmptyCellsInRows_ThatNotContainsNum ) ) ) )  Multi( Minimum( Plus( Multi( countEmptyCellsInRowsContainsNum  countEmptyCellsInCols_ThatNotContainsNum )  Plus( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellInSquare ) )  Maximum( Multi( countEmptyCellsInSquareContainsNum  countEmptyCellsInColsContainsNum )  Minus( NumOfOptionsInCell  countEmptyCellsInColsContainsNum ) ) )  Maximum( Maximum( Multi( countEmptyCellsInCols_ThatNotContainsNum  NumOfOptionsInCell )  div( numOfOptionsToAppearInBoard  countEmptyCellInRow ) )  Minus( div( countEmptyCellsInColsContainsNum  countEmptyCellInCol )  Minimum( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) ) ) ) ),((((( countEmptyCellsInCols_ThatNotContainsNum  /  countEmptyCellsInRows_ThatNotContainsNum ) Min ( NumOfOptionsInCell  *  countEmptyCellsInCols_ThatNotContainsNum )) Min (( numOfOptionsToAppearInBoard  Min  numOfOptionsToAppearInBoard ) * ( countEmptyCellsInRows_ThatNotContainsNum  /  countEmptyCellInCol ))) / ((( countEmptyCellsInRowsContainsNum  %  countEmptyCellsInRowsContainsNum ) - ( countEmptyCellInSquare  -  countEmptyCellsInSquareContainsNum )) Max (( countEmptyCellsInSquare_ThatNotContainsNum  +  countEmptyCellsInSquare_ThatNotContainsNum ) * ( countEmptyCellInCol  Min  countEmptyCellsInRows_ThatNotContainsNum )))) Max (((( countEmptyCellsInRowsContainsNum  *  countEmptyCellsInCols_ThatNotContainsNum ) + ( countEmptyCellsInSquare_ThatNotContainsNum  +  countEmptyCellInSquare )) Min (( countEmptyCellsInSquareContainsNum  *  countEmptyCellsInColsContainsNum ) Max ( NumOfOptionsInCell  -  countEmptyCellsInColsContainsNum ))) * ((( countEmptyCellsInCols_ThatNotContainsNum  *  NumOfOptionsInCell ) Max ( numOfOptionsToAppearInBoard  /  countEmptyCellInRow )) Max (( countEmptyCellsInColsContainsNum  /  countEmptyCellInCol ) - ( countEmptyCellsInRows_ThatNotContainsNum  Min  countEmptyCellsInCols_ThatNotContainsNum ))))),
42,18.0,4.0,11.83,Maximum( div( Minimum( Minimum( div( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum )  Multi( NumOfOptionsInCell  countEmptyCellsInCols_ThatNotContainsNum ) )  Multi( Minimum( numOfOptionsToAppearInBoard  numOfOptionsToAppearInBoard )  div( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInCol ) ) )  Maximum( Minus( Mod( countEmptyCellsInRowsContainsNum  countEmptyCellsInRowsContainsNum )  Minus( countEmptyCellInSquare  countEmptyCellsInSquareContainsNum ) )  Multi( Plus( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInSquare_ThatNotContainsNum )  Minimum( countEmptyCellInCol  countEmptyCellsInRows_ThatNotContainsNum ) ) ) )  Multi( Minimum( Maximum( Plus( NumOfOptionsInCell  countEmptyCellsInCols_ThatNotContainsNum )  Minimum( numOfOptionsToAppearInBoard  countEmptyCellsInRows_ThatNotContainsNum ) )  Maximum( Multi( countEmptyCellsInSquareContainsNum  countEmptyCellsInColsContainsNum )  Minus( NumOfOptionsInCell  countEmptyCellsInColsContainsNum ) ) )  Maximum( Maximum( Multi( countEmptyCellsInCols_ThatNotContainsNum  NumOfOptionsInCell )  div( numOfOptionsToAppearInBoard  countEmptyCellInRow ) )  Minus( div( countEmptyCellsInColsContainsNum  countEmptyCellInCol )  Minimum( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) ) ) ) ),((((( countEmptyCellsInCols_ThatNotContainsNum  /  countEmptyCellsInRows_ThatNotContainsNum ) Min ( NumOfOptionsInCell  *  countEmptyCellsInCols_ThatNotContainsNum )) Min (( numOfOptionsToAppearInBoard  Min  numOfOptionsToAppearInBoard ) * ( countEmptyCellsInRows_ThatNotContainsNum  /  countEmptyCellInCol ))) / ((( countEmptyCellsInRowsContainsNum  %  countEmptyCellsInRowsContainsNum ) - ( countEmptyCellInSquare  -  countEmptyCellsInSquareContainsNum )) Max (( countEmptyCellsInSquare_ThatNotContainsNum  +  countEmptyCellsInSquare_ThatNotContainsNum ) * ( countEmptyCellInCol  Min  countEmptyCellsInRows_ThatNotContainsNum )))) Max (((( NumOfOptionsInCell  +  countEmptyCellsInCols_ThatNotContainsNum ) Max ( numOfOptionsToAppearInBoard  Min  countEmptyCellsInRows_ThatNotContainsNum )) Min (( countEmptyCellsInSquareContainsNum  *  countEmptyCellsInColsContainsNum ) Max ( NumOfOptionsInCell  -  countEmptyCellsInColsContainsNum ))) * ((( countEmptyCellsInCols_ThatNotContainsNum  *  NumOfOptionsInCell ) Max ( numOfOptionsToAppearInBoard  /  countEmptyCellInRow )) Max (( countEmptyCellsInColsContainsNum  /  countEmptyCellInCol ) - ( countEmptyCellsInRows_ThatNotContainsNum  Min  countEmptyCellsInCols_ThatNotContainsNum ))))),
43,22.0,4.0,11.81,Maximum( div( Minimum( Minimum( div( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum )  Multi( NumOfOptionsInCell  countEmptyCellsInCols_ThatNotContainsNum ) )  Multi( Minimum( numOfOptionsToAppearInBoard  numOfOptionsToAppearInBoard )  div( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInCol ) ) )  Maximum( Minus( Mod( countEmptyCellsInRowsContainsNum  countEmptyCellsInRowsContainsNum )  Minus( countEmptyCellInSquare  countEmptyCellsInSquareContainsNum ) )  Multi( Plus( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInSquare_ThatNotContainsNum )  Minimum( countEmptyCellInCol  countEmptyCellsInRows_ThatNotContainsNum ) ) ) )  Multi( Minimum( Maximum( Plus( NumOfOptionsInCell  countEmptyCellsInCols_ThatNotContainsNum )  Minimum( numOfOptionsToAppearInBoard  countEmptyCellsInRows_ThatNotContainsNum ) )  Maximum( Multi( countEmptyCellsInSquareContainsNum  countEmptyCellsInColsContainsNum )  Minus( NumOfOptionsInCell  countEmptyCellsInColsContainsNum ) ) )  Maximum( Maximum( Multi( countEmptyCellsInCols_ThatNotContainsNum  NumOfOptionsInCell )  div( numOfOptionsToAppearInBoard  countEmptyCellInRow ) )  Minus( div( countEmptyCellsInColsContainsNum  countEmptyCellInCol )  Minimum( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) ) ) ) ),((((( countEmptyCellsInCols_ThatNotContainsNum  /  countEmptyCellsInRows_ThatNotContainsNum ) Min ( NumOfOptionsInCell  *  countEmptyCellsInCols_ThatNotContainsNum )) Min (( numOfOptionsToAppearInBoard  Min  numOfOptionsToAppearInBoard ) * ( countEmptyCellsInRows_ThatNotContainsNum  /  countEmptyCellInCol ))) / ((( countEmptyCellsInRowsContainsNum  %  countEmptyCellsInRowsContainsNum ) - ( countEmptyCellInSquare  -  countEmptyCellsInSquareContainsNum )) Max (( countEmptyCellsInSquare_ThatNotContainsNum  +  countEmptyCellsInSquare_ThatNotContainsNum ) * ( countEmptyCellInCol  Min  countEmptyCellsInRows_ThatNotContainsNum )))) Max (((( NumOfOptionsInCell  +  countEmptyCellsInCols_ThatNotContainsNum ) Max ( numOfOptionsToAppearInBoard  Min  countEmptyCellsInRows_ThatNotContainsNum )) Min (( countEmptyCellsInSquareContainsNum  *  countEmptyCellsInColsContainsNum ) Max ( NumOfOptionsInCell  -  countEmptyCellsInColsContainsNum ))) * ((( countEmptyCellsInCols_ThatNotContainsNum  *  NumOfOptionsInCell ) Max ( numOfOptionsToAppearInBoard  /  countEmptyCellInRow )) Max (( countEmptyCellsInColsContainsNum  /  countEmptyCellInCol ) - ( countEmptyCellsInRows_ThatNotContainsNum  Min  countEmptyCellsInCols_ThatNotContainsNum ))))),
44,22.0,2.0,11.83,Minimum( Plus( div( Mod( div( countEmptyCellsInRowsContainsNum  countEmptyCellsInSquareContainsNum )  Maximum( countEmptyCellsInSquareContainsNum  countEmptyCellsInSquare_ThatNotContainsNum ) )  Minus( Mod( countEmptyCellsInSquareContainsNum  countEmptyCellsInCols_ThatNotContainsNum )  Maximum( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellInCol ) ) )  Mod( Minimum( Maximum( countEmptyCellsInSquareContainsNum  countEmptyCellsInSquareContainsNum )  Minimum( countEmptyCellInRow  NumOfOptionsInCell ) )  Plus( Minus( numOfOptionsToAppearInBoard  numOfOptionsToAppearInBoard )  Multi( countEmptyCellInCol  countEmptyCellsInSquare_ThatNotContainsNum ) ) ) )  Maximum( Plus( Maximum( div( countEmptyCellInRow  countEmptyCellInSquare )  Minus( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellInRow ) )  Maximum( Maximum( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellInCol )  div( countEmptyCellsInSquareContainsNum  countEmptyCellInCol ) ) )  Mod( Plus( Mod( countEmptyCellInSquare  countEmptyCellsInCols_ThatNotContainsNum )  Mod( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) )  Maximum( Plus( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum )  Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInSquareContainsNum ) ) ) ) ),((((( countEmptyCellsInRowsContainsNum  /  countEmptyCellsInSquareContainsNum ) % ( countEmptyCellsInSquareContainsNum  Max  countEmptyCellsInSquare_ThatNotContainsNum )) / (( countEmptyCellsInSquareContainsNum  %  countEmptyCellsInCols_ThatNotContainsNum ) - ( countEmptyCellsInCols_ThatNotContainsNum  Max  countEmptyCellInCol ))) + ((( countEmptyCellsInSquareContainsNum  Max  countEmptyCellsInSquareContainsNum ) Min ( countEmptyCellInRow  Min  NumOfOptionsInCell )) % (( numOfOptionsToAppearInBoard  -  numOfOptionsToAppearInBoard ) + ( countEmptyCellInCol  *  countEmptyCellsInSquare_ThatNotContainsNum )))) Min (((( countEmptyCellInRow  /  countEmptyCellInSquare ) Max ( countEmptyCellsInSquare_ThatNotContainsNum  -  countEmptyCellInRow )) + (( countEmptyCellsInSquare_ThatNotContainsNum  Max  countEmptyCellInCol ) Max ( countEmptyCellsInSquareContainsNum  /  countEmptyCellInCol ))) Max ((( countEmptyCellInSquare  %  countEmptyCellsInCols_ThatNotContainsNum ) + ( countEmptyCellsInSquare_ThatNotContainsNum  %  countEmptyCellsInRowsContainsNum )) % (( countEmptyCellsInSquare_ThatNotContainsNum  +  countEmptyCellsInRows_ThatNotContainsNum ) Max ( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInSquareContainsNum ))))),
45,20.0,2.0,12.02,Minimum( Plus( div( Mod( div( countEmptyCellsInRowsContainsNum  countEmptyCellsInSquareContainsNum )  Maximum( countEmptyCellsInSquareContainsNum  countEmptyCellsInSquare_ThatNotContainsNum ) )  Minus( Mod( countEmptyCellsInSquareContainsNum  countEmptyCellsInCols_ThatNotContainsNum )  Maximum( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellInCol ) ) )  Mod( Minimum( Maximum( countEmptyCellsInSquareContainsNum  countEmptyCellsInSquareContainsNum )  Minimum( countEmptyCellInRow  NumOfOptionsInCell ) )  Plus( Minus( numOfOptionsToAppearInBoard  numOfOptionsToAppearInBoard )  Multi( countEmptyCellInCol  countEmptyCellsInSquare_ThatNotContainsNum ) ) ) )  Maximum( Plus( Maximum( div( countEmptyCellInRow  countEmptyCellInSquare )  Minus( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellInRow ) )  Maximum( Maximum( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellInCol )  div( countEmptyCellsInSquareContainsNum  countEmptyCellInCol ) ) )  Mod( Plus( Mod( countEmptyCellInSquare  countEmptyCellsInCols_ThatNotContainsNum )  Mod( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) )  Maximum( Plus( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum )  Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInSquareContainsNum ) ) ) ) ),((((( countEmptyCellsInRowsContainsNum  /  countEmptyCellsInSquareContainsNum ) % ( countEmptyCellsInSquareContainsNum  Max  countEmptyCellsInSquare_ThatNotContainsNum )) / (( countEmptyCellsInSquareContainsNum  %  countEmptyCellsInCols_ThatNotContainsNum ) - ( countEmptyCellsInCols_ThatNotContainsNum  Max  countEmptyCellInCol ))) + ((( countEmptyCellsInSquareContainsNum  Max  countEmptyCellsInSquareContainsNum ) Min ( countEmptyCellInRow  Min  NumOfOptionsInCell )) % (( numOfOptionsToAppearInBoard  -  numOfOptionsToAppearInBoard ) + ( countEmptyCellInCol  *  countEmptyCellsInSquare_ThatNotContainsNum )))) Min (((( countEmptyCellInRow  /  countEmptyCellInSquare ) Max ( countEmptyCellsInSquare_ThatNotContainsNum  -  countEmptyCellInRow )) + (( countEmptyCellsInSquare_ThatNotContainsNum  Max  countEmptyCellInCol ) Max ( countEmptyCellsInSquareContainsNum  /  countEmptyCellInCol ))) Max ((( countEmptyCellInSquare  %  countEmptyCellsInCols_ThatNotContainsNum ) + ( countEmptyCellsInSquare_ThatNotContainsNum  %  countEmptyCellsInRowsContainsNum )) % (( countEmptyCellsInSquare_ThatNotContainsNum  +  countEmptyCellsInRows_ThatNotContainsNum ) Max ( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInSquareContainsNum ))))),
46,20.0,3.0,12.45,Minimum( Plus( div( Minus( Minimum( countEmptyCellInSquare  countEmptyCellInRow )  Plus( countEmptyCellsInRowsContainsNum  countEmptyCellInRow ) )  Minus( Mod( countEmptyCellsInSquareContainsNum  countEmptyCellsInCols_ThatNotContainsNum )  Maximum( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellInCol ) ) )  Mod( Minimum( Maximum( countEmptyCellsInSquareContainsNum  countEmptyCellsInSquareContainsNum )  Minimum( countEmptyCellInRow  NumOfOptionsInCell ) )  Plus( Minus( numOfOptionsToAppearInBoard  numOfOptionsToAppearInBoard )  Multi( countEmptyCellInCol  countEmptyCellsInSquare_ThatNotContainsNum ) ) ) )  Maximum( Plus( Maximum( div( countEmptyCellInRow  countEmptyCellInSquare )  Minus( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellInRow ) )  Maximum( Maximum( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellInCol )  div( countEmptyCellsInSquareContainsNum  countEmptyCellInCol ) ) )  Mod( Plus( Mod( countEmptyCellInSquare  countEmptyCellsInCols_ThatNotContainsNum )  Mod( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) )  Maximum( Plus( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum )  Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInSquareContainsNum ) ) ) ) ),((((( countEmptyCellInSquare  Min  countEmptyCellInRow ) - ( countEmptyCellsInRowsContainsNum  +  countEmptyCellInRow )) / (( countEmptyCellsInSquareContainsNum  %  countEmptyCellsInCols_ThatNotContainsNum ) - ( countEmptyCellsInCols_ThatNotContainsNum  Max  countEmptyCellInCol ))) + ((( countEmptyCellsInSquareContainsNum  Max  countEmptyCellsInSquareContainsNum ) Min ( countEmptyCellInRow  Min  NumOfOptionsInCell )) % (( numOfOptionsToAppearInBoard  -  numOfOptionsToAppearInBoard ) + ( countEmptyCellInCol  *  countEmptyCellsInSquare_ThatNotContainsNum )))) Min (((( countEmptyCellInRow  /  countEmptyCellInSquare ) Max ( countEmptyCellsInSquare_ThatNotContainsNum  -  countEmptyCellInRow )) + (( countEmptyCellsInSquare_ThatNotContainsNum  Max  countEmptyCellInCol ) Max ( countEmptyCellsInSquareContainsNum  /  countEmptyCellInCol ))) Max ((( countEmptyCellInSquare  %  countEmptyCellsInCols_ThatNotContainsNum ) + ( countEmptyCellsInSquare_ThatNotContainsNum  %  countEmptyCellsInRowsContainsNum )) % (( countEmptyCellsInSquare_ThatNotContainsNum  +  countEmptyCellsInRows_ThatNotContainsNum ) Max ( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInSquareContainsNum ))))),
47,19.0,3.0,11.99,div( Maximum( Maximum( Minus( Plus( countEmptyCellInCol  countEmptyCellInCol )  Minimum( NumOfOptionsInCell  NumOfOptionsInCell ) )  Minus( Minus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInSquare_ThatNotContainsNum )  Minus( countEmptyCellInCol  countEmptyCellInRow ) ) )  Maximum( Minus( Multi( countEmptyCellInCol  countEmptyCellInRow )  Plus( countEmptyCellInCol  NumOfOptionsInCell ) )  Minus( Plus( countEmptyCellsInSquareContainsNum  countEmptyCellsInRows_ThatNotContainsNum )  Plus( countEmptyCellInRow  countEmptyCellsInCols_ThatNotContainsNum ) ) ) )  Multi( Maximum( Mod( Mod( countEmptyCellInRow  NumOfOptionsInCell )  Minus( countEmptyCellInCol  countEmptyCellsInSquareContainsNum ) )  Minus( Mod( countEmptyCellsInCols_ThatNotContainsNum  numOfOptionsToAppearInBoard )  Maximum( countEmptyCellsInRowsContainsNum  countEmptyCellInCol ) ) )  div( Multi( Multi( countEmptyCellInSquare  countEmptyCellsInSquareContainsNum )  Minimum( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInColsContainsNum ) )  Maximum( div( countEmptyCellsInSquare_ThatNotContainsNum  NumOfOptionsInCell )  Multi( countEmptyCellsInRows_ThatNotContainsNum  NumOfOptionsInCell ) ) ) ) ),((((( countEmptyCellInCol  +  countEmptyCellInCol ) - ( NumOfOptionsInCell  Min  NumOfOptionsInCell )) Max (( countEmptyCellsInCols_ThatNotContainsNum  -  countEmptyCellsInSquare_ThatNotContainsNum ) - ( countEmptyCellInCol  -  countEmptyCellInRow ))) Max ((( countEmptyCellInCol  *  countEmptyCellInRow ) - ( countEmptyCellInCol  +  NumOfOptionsInCell )) Max (( countEmptyCellsInSquareContainsNum  +  countEmptyCellsInRows_ThatNotContainsNum ) - ( countEmptyCellInRow  +  countEmptyCellsInCols_ThatNotContainsNum )))) / (((( countEmptyCellInRow  %  NumOfOptionsInCell ) % ( countEmptyCellInCol  -  countEmptyCellsInSquareContainsNum )) Max (( countEmptyCellsInCols_ThatNotContainsNum  %  numOfOptionsToAppearInBoard ) - ( countEmptyCellsInRowsContainsNum  Max  countEmptyCellInCol ))) * ((( countEmptyCellInSquare  *  countEmptyCellsInSquareContainsNum ) * ( countEmptyCellsInRows_ThatNotContainsNum  Min  countEmptyCellsInColsContainsNum )) / (( countEmptyCellsInSquare_ThatNotContainsNum  /  NumOfOptionsInCell ) Max ( countEmptyCellsInRows_ThatNotContainsNum  *  NumOfOptionsInCell ))))),
48,19.0,0.0,12.17,Minimum( Plus( div( Minus( Minimum( countEmptyCellInSquare  countEmptyCellInRow )  Plus( countEmptyCellsInRowsContainsNum  countEmptyCellInRow ) )  Minus( Multi( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInSquare_ThatNotContainsNum )  div( countEmptyCellsInColsContainsNum  countEmptyCellsInColsContainsNum ) ) )  Mod( Minimum( Maximum( countEmptyCellsInSquareContainsNum  countEmptyCellsInSquareContainsNum )  Minimum( countEmptyCellInRow  NumOfOptionsInCell ) )  Plus( Minus( numOfOptionsToAppearInBoard  numOfOptionsToAppearInBoard )  Multi( countEmptyCellInCol  countEmptyCellsInSquare_ThatNotContainsNum ) ) ) )  Maximum( Plus( Maximum( div( countEmptyCellInRow  countEmptyCellInSquare )  Minus( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellInRow ) )  Maximum( Maximum( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellInCol )  div( countEmptyCellsInSquareContainsNum  countEmptyCellInCol ) ) )  Mod( Plus( Mod( countEmptyCellInSquare  countEmptyCellsInCols_ThatNotContainsNum )  Mod( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) )  Maximum( Plus( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum )  Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInSquareContainsNum ) ) ) ) ),((((( countEmptyCellInSquare  Min  countEmptyCellInRow ) - ( countEmptyCellsInRowsContainsNum  +  countEmptyCellInRow )) / (( countEmptyCellsInRows_ThatNotContainsNum  *  countEmptyCellsInSquare_ThatNotContainsNum ) - ( countEmptyCellsInColsContainsNum  /  countEmptyCellsInColsContainsNum ))) + ((( countEmptyCellsInSquareContainsNum  Max  countEmptyCellsInSquareContainsNum ) Min ( countEmptyCellInRow  Min  NumOfOptionsInCell )) % (( numOfOptionsToAppearInBoard  -  numOfOptionsToAppearInBoard ) + ( countEmptyCellInCol  *  countEmptyCellsInSquare_ThatNotContainsNum )))) Min (((( countEmptyCellInRow  /  countEmptyCellInSquare ) Max ( countEmptyCellsInSquare_ThatNotContainsNum  -  countEmptyCellInRow )) + (( countEmptyCellsInSquare_ThatNotContainsNum  Max  countEmptyCellInCol ) Max ( countEmptyCellsInSquareContainsNum  /  countEmptyCellInCol ))) Max ((( countEmptyCellInSquare  %  countEmptyCellsInCols_ThatNotContainsNum ) + ( countEmptyCellsInSquare_ThatNotContainsNum  %  countEmptyCellsInRowsContainsNum )) % (( countEmptyCellsInSquare_ThatNotContainsNum  +  countEmptyCellsInRows_ThatNotContainsNum ) Max ( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInSquareContainsNum ))))),
