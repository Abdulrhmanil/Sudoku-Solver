Genetic Sudoku Experiment
Experiment Time: 23/06/2016 17:17:36
Expirement Parameters:,
Orginal Empty Cells:,55,
Population Size:,100,
Max Generations:,50,
Crossover Probability:,0.8,
Mutation Probability:,0.2,
Percent of good indviduals from population:,0.5,
,
Primitive Set:,
Plus,Minus,Multi,div,Mod,Maximum,Minimum,
Terminal Set:,
countEmptyCellInRow,countEmptyCellInCol,countEmptyCellInSquare,NumOfOptionsInCell,numOfOptionsToAppearInBoard,countEmptyCellsInRowsContainsNum,countEmptyCellsInColsContainsNum,countEmptyCellsInSquareContainsNum,countEmptyCellsInRows_ThatNotContainsNum,countEmptyCellsInCols_ThatNotContainsNum,countEmptyCellsInSquare_ThatNotContainsNum,
,
,
Generation,Worst Individual Fitness,Best Individual Fitness,Average Fitness,Best Individual Tree - Prefix,Best Individual Tree - Infix,
0,18.0,2.0,12.42,Plus( Maximum( Plus( Minimum( Maximum( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInColsContainsNum )  Minimum( countEmptyCellsInSquareContainsNum  countEmptyCellsInSquareContainsNum ) )  div( Minimum( countEmptyCellInCol  countEmptyCellsInColsContainsNum )  Minus( countEmptyCellsInRowsContainsNum  countEmptyCellsInColsContainsNum ) ) )  Multi( Maximum( Maximum( countEmptyCellsInSquareContainsNum  countEmptyCellInSquare )  Maximum( numOfOptionsToAppearInBoard  countEmptyCellsInSquareContainsNum ) )  Multi( Minimum( countEmptyCellsInColsContainsNum  NumOfOptionsInCell )  Maximum( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) ) ) )  div( Minimum( Minimum( Minus( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRowsContainsNum )  Minimum( countEmptyCellsInColsContainsNum  countEmptyCellInSquare ) )  Plus( Plus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum )  Plus( countEmptyCellsInColsContainsNum  countEmptyCellInRow ) ) )  Maximum( Maximum( Mod( countEmptyCellsInCols_ThatNotContainsNum  numOfOptionsToAppearInBoard )  Minus( countEmptyCellsInSquareContainsNum  countEmptyCellInCol ) )  Minus( Mod( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInRowsContainsNum )  Minus( countEmptyCellInCol  countEmptyCellsInSquare_ThatNotContainsNum ) ) ) ) ),((((( countEmptyCellsInSquare_ThatNotContainsNum  Max  countEmptyCellsInColsContainsNum ) Min ( countEmptyCellsInSquareContainsNum  Min  countEmptyCellsInSquareContainsNum )) + (( countEmptyCellInCol  Min  countEmptyCellsInColsContainsNum ) / ( countEmptyCellsInRowsContainsNum  -  countEmptyCellsInColsContainsNum ))) Max ((( countEmptyCellsInSquareContainsNum  Max  countEmptyCellInSquare ) Max ( numOfOptionsToAppearInBoard  Max  countEmptyCellsInSquareContainsNum )) * (( countEmptyCellsInColsContainsNum  Min  NumOfOptionsInCell ) * ( countEmptyCellsInSquare_ThatNotContainsNum  Max  countEmptyCellsInRows_ThatNotContainsNum )))) + (((( countEmptyCellsInSquare_ThatNotContainsNum  -  countEmptyCellsInRowsContainsNum ) Min ( countEmptyCellsInColsContainsNum  Min  countEmptyCellInSquare )) Min (( countEmptyCellsInCols_ThatNotContainsNum  +  countEmptyCellsInCols_ThatNotContainsNum ) + ( countEmptyCellsInColsContainsNum  +  countEmptyCellInRow ))) / ((( countEmptyCellsInCols_ThatNotContainsNum  %  numOfOptionsToAppearInBoard ) Max ( countEmptyCellsInSquareContainsNum  -  countEmptyCellInCol )) Max (( countEmptyCellsInCols_ThatNotContainsNum  %  countEmptyCellsInRowsContainsNum ) - ( countEmptyCellInCol  -  countEmptyCellsInSquare_ThatNotContainsNum ))))),
1,19.0,3.0,11.76,Multi( Multi( Plus( Maximum( Mod( NumOfOptionsInCell  numOfOptionsToAppearInBoard )  div( numOfOptionsToAppearInBoard  NumOfOptionsInCell ) )  Plus( Minimum( countEmptyCellsInRowsContainsNum  countEmptyCellInSquare )  Multi( NumOfOptionsInCell  countEmptyCellsInSquare_ThatNotContainsNum ) ) )  Maximum( Maximum( Minimum( countEmptyCellInCol  countEmptyCellsInCols_ThatNotContainsNum )  Mod( NumOfOptionsInCell  countEmptyCellsInCols_ThatNotContainsNum ) )  Mod( Plus( countEmptyCellsInColsContainsNum  countEmptyCellsInRowsContainsNum )  Minus( countEmptyCellInCol  countEmptyCellInRow ) ) ) )  Plus( Maximum( Minimum( Minus( NumOfOptionsInCell  countEmptyCellsInColsContainsNum )  Minimum( numOfOptionsToAppearInBoard  countEmptyCellsInSquareContainsNum ) )  Minimum( Mod( numOfOptionsToAppearInBoard  countEmptyCellsInRows_ThatNotContainsNum )  Multi( countEmptyCellInSquare  NumOfOptionsInCell ) ) )  Multi( Minimum( Minus( countEmptyCellsInRowsContainsNum  countEmptyCellsInSquare_ThatNotContainsNum )  Mod( countEmptyCellInRow  countEmptyCellsInRows_ThatNotContainsNum ) )  Plus( Maximum( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum )  Maximum( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellInRow ) ) ) ) ),((((( NumOfOptionsInCell  %  numOfOptionsToAppearInBoard ) Max ( numOfOptionsToAppearInBoard  /  NumOfOptionsInCell )) + (( countEmptyCellsInRowsContainsNum  Min  countEmptyCellInSquare ) + ( NumOfOptionsInCell  *  countEmptyCellsInSquare_ThatNotContainsNum ))) * ((( countEmptyCellInCol  Min  countEmptyCellsInCols_ThatNotContainsNum ) Max ( NumOfOptionsInCell  %  countEmptyCellsInCols_ThatNotContainsNum )) Max (( countEmptyCellsInColsContainsNum  +  countEmptyCellsInRowsContainsNum ) % ( countEmptyCellInCol  -  countEmptyCellInRow )))) * (((( NumOfOptionsInCell  -  countEmptyCellsInColsContainsNum ) Min ( numOfOptionsToAppearInBoard  Min  countEmptyCellsInSquareContainsNum )) Max (( numOfOptionsToAppearInBoard  %  countEmptyCellsInRows_ThatNotContainsNum ) Min ( countEmptyCellInSquare  *  NumOfOptionsInCell ))) + ((( countEmptyCellsInRowsContainsNum  -  countEmptyCellsInSquare_ThatNotContainsNum ) Min ( countEmptyCellInRow  %  countEmptyCellsInRows_ThatNotContainsNum )) * (( countEmptyCellsInCols_ThatNotContainsNum  Max  countEmptyCellsInRows_ThatNotContainsNum ) + ( countEmptyCellsInSquare_ThatNotContainsNum  Max  countEmptyCellInRow ))))),
2,17.0,2.0,11.12,Maximum( Multi( Minimum( Plus( Mod( NumOfOptionsInCell  countEmptyCellInCol )  Mod( countEmptyCellsInSquareContainsNum  countEmptyCellsInRowsContainsNum ) )  Mod( Plus( countEmptyCellInRow  NumOfOptionsInCell )  Plus( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) ) )  Plus( Minus( div( countEmptyCellsInCols_ThatNotContainsNum  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInRowsContainsNum  NumOfOptionsInCell ) )  Plus( Minus( countEmptyCellsInSquareContainsNum  countEmptyCellsInColsContainsNum )  Plus( countEmptyCellInSquare  NumOfOptionsInCell ) ) ) )  Minimum( Maximum( Multi( Multi( NumOfOptionsInCell  countEmptyCellInRow )  div( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInSquare_ThatNotContainsNum ) )  Minimum( Mod( countEmptyCellsInColsContainsNum  NumOfOptionsInCell )  Multi( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInColsContainsNum ) ) )  Minus( Minimum( Maximum( NumOfOptionsInCell  countEmptyCellsInSquareContainsNum )  div( countEmptyCellsInSquareContainsNum  countEmptyCellsInColsContainsNum ) )  Minimum( Mod( countEmptyCellsInSquareContainsNum  countEmptyCellInRow )  Mod( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInColsContainsNum ) ) ) ) ),((((( NumOfOptionsInCell  %  countEmptyCellInCol ) + ( countEmptyCellsInSquareContainsNum  %  countEmptyCellsInRowsContainsNum )) Min (( countEmptyCellInRow  +  NumOfOptionsInCell ) % ( countEmptyCellsInRows_ThatNotContainsNum  +  countEmptyCellsInCols_ThatNotContainsNum ))) * ((( countEmptyCellsInCols_ThatNotContainsNum  /  numOfOptionsToAppearInBoard ) - ( countEmptyCellsInRowsContainsNum  *  NumOfOptionsInCell )) + (( countEmptyCellsInSquareContainsNum  -  countEmptyCellsInColsContainsNum ) + ( countEmptyCellInSquare  +  NumOfOptionsInCell )))) Max (((( NumOfOptionsInCell  *  countEmptyCellInRow ) * ( countEmptyCellsInCols_ThatNotContainsNum  /  countEmptyCellsInSquare_ThatNotContainsNum )) Max (( countEmptyCellsInColsContainsNum  %  NumOfOptionsInCell ) Min ( countEmptyCellsInRows_ThatNotContainsNum  *  countEmptyCellsInColsContainsNum ))) Min ((( NumOfOptionsInCell  Max  countEmptyCellsInSquareContainsNum ) Min ( countEmptyCellsInSquareContainsNum  /  countEmptyCellsInColsContainsNum )) - (( countEmptyCellsInSquareContainsNum  %  countEmptyCellInRow ) Min ( countEmptyCellsInCols_ThatNotContainsNum  %  countEmptyCellsInColsContainsNum ))))),
3,20.0,4.0,11.03,Maximum( Plus( Multi( Multi( div( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInSquareContainsNum )  Multi( countEmptyCellsInColsContainsNum  countEmptyCellsInRowsContainsNum ) )  div( Minimum( NumOfOptionsInCell  countEmptyCellInSquare )  div( countEmptyCellsInColsContainsNum  countEmptyCellsInRowsContainsNum ) ) )  Minimum( Minus( Plus( countEmptyCellsInRowsContainsNum  countEmptyCellsInRowsContainsNum )  Maximum( NumOfOptionsInCell  countEmptyCellsInColsContainsNum ) )  Multi( Minimum( countEmptyCellsInSquareContainsNum  countEmptyCellsInCols_ThatNotContainsNum )  Minus( countEmptyCellInSquare  NumOfOptionsInCell ) ) ) )  Minus( Mod( div( Maximum( countEmptyCellInCol  countEmptyCellsInSquare_ThatNotContainsNum )  Maximum( countEmptyCellsInColsContainsNum  countEmptyCellsInColsContainsNum ) )  Minus( Plus( NumOfOptionsInCell  countEmptyCellsInSquare_ThatNotContainsNum )  Maximum( countEmptyCellInCol  numOfOptionsToAppearInBoard ) ) )  div( Plus( Maximum( countEmptyCellsInRowsContainsNum  countEmptyCellsInSquareContainsNum )  div( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) )  Multi( Multi( countEmptyCellInRow  countEmptyCellInCol )  Multi( countEmptyCellsInRowsContainsNum  countEmptyCellsInSquare_ThatNotContainsNum ) ) ) ) ),((((( countEmptyCellsInSquare_ThatNotContainsNum  /  countEmptyCellsInSquareContainsNum ) * ( countEmptyCellsInColsContainsNum  *  countEmptyCellsInRowsContainsNum )) * (( NumOfOptionsInCell  Min  countEmptyCellInSquare ) / ( countEmptyCellsInColsContainsNum  /  countEmptyCellsInRowsContainsNum ))) + ((( countEmptyCellsInRowsContainsNum  +  countEmptyCellsInRowsContainsNum ) - ( NumOfOptionsInCell  Max  countEmptyCellsInColsContainsNum )) Min (( countEmptyCellsInSquareContainsNum  Min  countEmptyCellsInCols_ThatNotContainsNum ) * ( countEmptyCellInSquare  -  NumOfOptionsInCell )))) Max (((( countEmptyCellInCol  Max  countEmptyCellsInSquare_ThatNotContainsNum ) / ( countEmptyCellsInColsContainsNum  Max  countEmptyCellsInColsContainsNum )) % (( NumOfOptionsInCell  +  countEmptyCellsInSquare_ThatNotContainsNum ) - ( countEmptyCellInCol  Max  numOfOptionsToAppearInBoard ))) - ((( countEmptyCellsInRowsContainsNum  Max  countEmptyCellsInSquareContainsNum ) + ( countEmptyCellsInCols_ThatNotContainsNum  /  countEmptyCellsInRowsContainsNum )) / (( countEmptyCellInRow  *  countEmptyCellInCol ) * ( countEmptyCellsInRowsContainsNum  *  countEmptyCellsInSquare_ThatNotContainsNum ))))),
4,18.0,2.0,11.06,Plus( Maximum( Minimum( Maximum( Plus( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRowsContainsNum )  div( countEmptyCellInRow  countEmptyCellsInRows_ThatNotContainsNum ) )  Minus( Mod( countEmptyCellsInRowsContainsNum  countEmptyCellsInRows_ThatNotContainsNum )  Mod( NumOfOptionsInCell  countEmptyCellsInRowsContainsNum ) ) )  Multi( Maximum( Maximum( countEmptyCellsInSquareContainsNum  countEmptyCellInSquare )  Maximum( numOfOptionsToAppearInBoard  countEmptyCellsInSquareContainsNum ) )  Multi( Minimum( countEmptyCellsInColsContainsNum  NumOfOptionsInCell )  Maximum( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) ) ) )  Minus( Mod( Plus( Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInColsContainsNum )  Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) )  div( Multi( NumOfOptionsInCell  countEmptyCellInCol )  Minimum( countEmptyCellInRow  countEmptyCellsInSquareContainsNum ) ) )  div( div( Maximum( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInSquare_ThatNotContainsNum )  Mod( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  Minimum( Maximum( countEmptyCellsInRows_ThatNotContainsNum  NumOfOptionsInCell )  Plus( countEmptyCellsInSquareContainsNum  numOfOptionsToAppearInBoard ) ) ) ) ),((((( countEmptyCellsInSquare_ThatNotContainsNum  +  countEmptyCellsInRowsContainsNum ) Max ( countEmptyCellInRow  /  countEmptyCellsInRows_ThatNotContainsNum )) Min (( countEmptyCellsInRowsContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum ) - ( NumOfOptionsInCell  %  countEmptyCellsInRowsContainsNum ))) Max ((( countEmptyCellsInSquareContainsNum  Max  countEmptyCellInSquare ) Max ( numOfOptionsToAppearInBoard  Max  countEmptyCellsInSquareContainsNum )) * (( countEmptyCellsInColsContainsNum  Min  NumOfOptionsInCell ) * ( countEmptyCellsInSquare_ThatNotContainsNum  Max  countEmptyCellsInRows_ThatNotContainsNum )))) + (((( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInColsContainsNum ) + ( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInCols_ThatNotContainsNum )) % (( NumOfOptionsInCell  *  countEmptyCellInCol ) / ( countEmptyCellInRow  Min  countEmptyCellsInSquareContainsNum ))) - ((( countEmptyCellsInRows_ThatNotContainsNum  Max  countEmptyCellsInSquare_ThatNotContainsNum ) / ( countEmptyCellsInCols_ThatNotContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum )) / (( countEmptyCellsInRows_ThatNotContainsNum  Max  NumOfOptionsInCell ) Min ( countEmptyCellsInSquareContainsNum  +  numOfOptionsToAppearInBoard ))))),
5,17.0,3.0,10.99,Minus( Maximum( Minimum( Maximum( Plus( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRowsContainsNum )  div( countEmptyCellInRow  countEmptyCellsInRows_ThatNotContainsNum ) )  Minus( Mod( countEmptyCellsInRowsContainsNum  countEmptyCellsInRows_ThatNotContainsNum )  Mod( NumOfOptionsInCell  countEmptyCellsInRowsContainsNum ) ) )  Multi( Maximum( Maximum( countEmptyCellsInSquareContainsNum  countEmptyCellInSquare )  Maximum( numOfOptionsToAppearInBoard  countEmptyCellsInSquareContainsNum ) )  Multi( Minimum( countEmptyCellsInColsContainsNum  NumOfOptionsInCell )  Maximum( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) ) ) )  Mod( Multi( Plus( Mod( countEmptyCellInCol  countEmptyCellsInColsContainsNum )  Maximum( numOfOptionsToAppearInBoard  countEmptyCellsInCols_ThatNotContainsNum ) )  Minimum( Minimum( countEmptyCellInCol  countEmptyCellsInSquare_ThatNotContainsNum )  Mod( countEmptyCellsInColsContainsNum  countEmptyCellInCol ) ) )  Mod( Maximum( div( numOfOptionsToAppearInBoard  countEmptyCellsInCols_ThatNotContainsNum )  Maximum( countEmptyCellInCol  countEmptyCellsInSquareContainsNum ) )  Minimum( Plus( countEmptyCellsInSquareContainsNum  countEmptyCellInRow )  div( countEmptyCellsInRows_ThatNotContainsNum  NumOfOptionsInCell ) ) ) ) ),((((( countEmptyCellsInSquare_ThatNotContainsNum  +  countEmptyCellsInRowsContainsNum ) Max ( countEmptyCellInRow  /  countEmptyCellsInRows_ThatNotContainsNum )) Min (( countEmptyCellsInRowsContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum ) - ( NumOfOptionsInCell  %  countEmptyCellsInRowsContainsNum ))) Max ((( countEmptyCellsInSquareContainsNum  Max  countEmptyCellInSquare ) Max ( numOfOptionsToAppearInBoard  Max  countEmptyCellsInSquareContainsNum )) * (( countEmptyCellsInColsContainsNum  Min  NumOfOptionsInCell ) * ( countEmptyCellsInSquare_ThatNotContainsNum  Max  countEmptyCellsInRows_ThatNotContainsNum )))) - (((( countEmptyCellInCol  %  countEmptyCellsInColsContainsNum ) + ( numOfOptionsToAppearInBoard  Max  countEmptyCellsInCols_ThatNotContainsNum )) * (( countEmptyCellInCol  Min  countEmptyCellsInSquare_ThatNotContainsNum ) Min ( countEmptyCellsInColsContainsNum  %  countEmptyCellInCol ))) % ((( numOfOptionsToAppearInBoard  /  countEmptyCellsInCols_ThatNotContainsNum ) Max ( countEmptyCellInCol  Max  countEmptyCellsInSquareContainsNum )) % (( countEmptyCellsInSquareContainsNum  +  countEmptyCellInRow ) Min ( countEmptyCellsInRows_ThatNotContainsNum  /  NumOfOptionsInCell ))))),
6,17.0,5.0,10.72,Minimum( Minus( Multi( Plus( div( countEmptyCellsInColsContainsNum  countEmptyCellsInRowsContainsNum )  div( countEmptyCellInSquare  NumOfOptionsInCell ) )  Mod( Multi( countEmptyCellInSquare  numOfOptionsToAppearInBoard )  Multi( countEmptyCellInSquare  countEmptyCellsInRows_ThatNotContainsNum ) ) )  Minus( Maximum( Multi( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum )  div( countEmptyCellInRow  NumOfOptionsInCell ) )  Maximum( Plus( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInSquare_ThatNotContainsNum )  Maximum( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellInRow ) ) ) )  div( Plus( div( Multi( countEmptyCellsInRowsContainsNum  countEmptyCellInSquare )  Mod( countEmptyCellInCol  countEmptyCellsInColsContainsNum ) )  Minimum( Minus( countEmptyCellsInRowsContainsNum  countEmptyCellsInSquareContainsNum )  Maximum( NumOfOptionsInCell  NumOfOptionsInCell ) ) )  Multi( Mod( Minimum( countEmptyCellsInSquareContainsNum  countEmptyCellsInRowsContainsNum )  Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  Mod( Minimum( countEmptyCellsInRowsContainsNum  countEmptyCellsInRows_ThatNotContainsNum )  Mod( countEmptyCellsInSquareContainsNum  countEmptyCellsInColsContainsNum ) ) ) ) ),((((( countEmptyCellsInColsContainsNum  /  countEmptyCellsInRowsContainsNum ) + ( countEmptyCellInSquare  /  NumOfOptionsInCell )) * (( countEmptyCellInSquare  *  numOfOptionsToAppearInBoard ) % ( countEmptyCellInSquare  *  countEmptyCellsInRows_ThatNotContainsNum ))) - ((( countEmptyCellsInRows_ThatNotContainsNum  *  countEmptyCellsInRows_ThatNotContainsNum ) Max ( countEmptyCellInRow  /  NumOfOptionsInCell )) - (( countEmptyCellsInRows_ThatNotContainsNum  +  countEmptyCellsInSquare_ThatNotContainsNum ) Max ( countEmptyCellsInCols_ThatNotContainsNum  Max  countEmptyCellInRow )))) Min (((( countEmptyCellsInRowsContainsNum  *  countEmptyCellInSquare ) / ( countEmptyCellInCol  %  countEmptyCellsInColsContainsNum )) + (( countEmptyCellsInRowsContainsNum  -  countEmptyCellsInSquareContainsNum ) Min ( NumOfOptionsInCell  Max  NumOfOptionsInCell ))) / ((( countEmptyCellsInSquareContainsNum  Min  countEmptyCellsInRowsContainsNum ) % ( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum )) * (( countEmptyCellsInRowsContainsNum  Min  countEmptyCellsInRows_ThatNotContainsNum ) % ( countEmptyCellsInSquareContainsNum  %  countEmptyCellsInColsContainsNum ))))),
7,19.0,2.0,10.8,Multi( Multi( Minus( div( div( countEmptyCellsInColsContainsNum  countEmptyCellsInSquareContainsNum )  Multi( countEmptyCellsInColsContainsNum  countEmptyCellInCol ) )  Minus( Minimum( numOfOptionsToAppearInBoard  countEmptyCellsInRows_ThatNotContainsNum )  Plus( countEmptyCellsInColsContainsNum  countEmptyCellsInSquareContainsNum ) ) )  Minus( Minimum( Minimum( countEmptyCellsInColsContainsNum  countEmptyCellInSquare )  Minimum( NumOfOptionsInCell  countEmptyCellInSquare ) )  div( Maximum( countEmptyCellInSquare  countEmptyCellsInSquareContainsNum )  Maximum( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellInRow ) ) ) )  Plus( Multi( Plus( div( countEmptyCellsInColsContainsNum  countEmptyCellsInRows_ThatNotContainsNum )  Minimum( countEmptyCellInRow  countEmptyCellsInRows_ThatNotContainsNum ) )  Minimum( Plus( countEmptyCellInSquare  countEmptyCellsInRowsContainsNum )  Multi( NumOfOptionsInCell  numOfOptionsToAppearInBoard ) ) )  Mod( Plus( Multi( countEmptyCellInCol  countEmptyCellsInRowsContainsNum )  Plus( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  Multi( Mod( countEmptyCellsInSquareContainsNum  numOfOptionsToAppearInBoard )  Minimum( countEmptyCellInRow  numOfOptionsToAppearInBoard ) ) ) ) ),((((( countEmptyCellsInColsContainsNum  /  countEmptyCellsInSquareContainsNum ) / ( countEmptyCellsInColsContainsNum  *  countEmptyCellInCol )) - (( numOfOptionsToAppearInBoard  Min  countEmptyCellsInRows_ThatNotContainsNum ) - ( countEmptyCellsInColsContainsNum  +  countEmptyCellsInSquareContainsNum ))) * ((( countEmptyCellsInColsContainsNum  Min  countEmptyCellInSquare ) Min ( NumOfOptionsInCell  Min  countEmptyCellInSquare )) - (( countEmptyCellInSquare  Max  countEmptyCellsInSquareContainsNum ) / ( countEmptyCellsInSquare_ThatNotContainsNum  Max  countEmptyCellInRow )))) * (((( countEmptyCellsInColsContainsNum  /  countEmptyCellsInRows_ThatNotContainsNum ) + ( countEmptyCellInRow  Min  countEmptyCellsInRows_ThatNotContainsNum )) * (( countEmptyCellInSquare  +  countEmptyCellsInRowsContainsNum ) Min ( NumOfOptionsInCell  *  numOfOptionsToAppearInBoard ))) + ((( countEmptyCellInCol  *  countEmptyCellsInRowsContainsNum ) + ( countEmptyCellsInSquare_ThatNotContainsNum  +  countEmptyCellsInRows_ThatNotContainsNum )) % (( countEmptyCellsInSquareContainsNum  %  numOfOptionsToAppearInBoard ) * ( countEmptyCellInRow  Min  numOfOptionsToAppearInBoard ))))),
8,18.0,4.0,10.27,Maximum( Multi( Minimum( Plus( Mod( NumOfOptionsInCell  countEmptyCellInCol )  Mod( countEmptyCellsInSquareContainsNum  countEmptyCellsInRowsContainsNum ) )  Mod( Plus( countEmptyCellInRow  NumOfOptionsInCell )  Plus( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) ) )  Plus( Minus( div( countEmptyCellsInCols_ThatNotContainsNum  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInRowsContainsNum  NumOfOptionsInCell ) )  Plus( Minus( countEmptyCellsInSquareContainsNum  countEmptyCellsInColsContainsNum )  Plus( countEmptyCellInSquare  NumOfOptionsInCell ) ) ) )  Minimum( Plus( Minus( div( countEmptyCellsInCols_ThatNotContainsNum  NumOfOptionsInCell )  Minus( countEmptyCellsInCols_ThatNotContainsNum  numOfOptionsToAppearInBoard ) )  Maximum( Minimum( NumOfOptionsInCell  NumOfOptionsInCell )  Mod( NumOfOptionsInCell  countEmptyCellsInRowsContainsNum ) ) )  Plus( Minimum( div( countEmptyCellInCol  countEmptyCellInSquare )  Minus( NumOfOptionsInCell  countEmptyCellsInSquare_ThatNotContainsNum ) )  Maximum( Plus( countEmptyCellsInColsContainsNum  countEmptyCellsInRows_ThatNotContainsNum )  Multi( NumOfOptionsInCell  countEmptyCellsInRowsContainsNum ) ) ) ) ),((((( NumOfOptionsInCell  %  countEmptyCellInCol ) + ( countEmptyCellsInSquareContainsNum  %  countEmptyCellsInRowsContainsNum )) Min (( countEmptyCellInRow  +  NumOfOptionsInCell ) % ( countEmptyCellsInRows_ThatNotContainsNum  +  countEmptyCellsInCols_ThatNotContainsNum ))) * ((( countEmptyCellsInCols_ThatNotContainsNum  /  numOfOptionsToAppearInBoard ) - ( countEmptyCellsInRowsContainsNum  *  NumOfOptionsInCell )) + (( countEmptyCellsInSquareContainsNum  -  countEmptyCellsInColsContainsNum ) + ( countEmptyCellInSquare  +  NumOfOptionsInCell )))) Max (((( countEmptyCellsInCols_ThatNotContainsNum  /  NumOfOptionsInCell ) - ( countEmptyCellsInCols_ThatNotContainsNum  -  numOfOptionsToAppearInBoard )) + (( NumOfOptionsInCell  Min  NumOfOptionsInCell ) Max ( NumOfOptionsInCell  %  countEmptyCellsInRowsContainsNum ))) Min ((( countEmptyCellInCol  /  countEmptyCellInSquare ) Min ( NumOfOptionsInCell  -  countEmptyCellsInSquare_ThatNotContainsNum )) + (( countEmptyCellsInColsContainsNum  +  countEmptyCellsInRows_ThatNotContainsNum ) Max ( NumOfOptionsInCell  *  countEmptyCellsInRowsContainsNum ))))),
9,20.0,2.0,10.39,Maximum( Multi( Minimum( Plus( Mod( NumOfOptionsInCell  countEmptyCellInCol )  Mod( countEmptyCellsInSquareContainsNum  countEmptyCellsInRowsContainsNum ) )  Mod( Plus( countEmptyCellInRow  NumOfOptionsInCell )  Plus( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) ) )  Plus( Minus( div( countEmptyCellsInCols_ThatNotContainsNum  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInRowsContainsNum  NumOfOptionsInCell ) )  Plus( Minus( countEmptyCellsInSquareContainsNum  countEmptyCellsInColsContainsNum )  Plus( countEmptyCellInSquare  NumOfOptionsInCell ) ) ) )  Multi( Minimum( Plus( Mod( NumOfOptionsInCell  countEmptyCellInCol )  Mod( countEmptyCellsInSquareContainsNum  countEmptyCellsInRowsContainsNum ) )  Mod( Plus( countEmptyCellInRow  NumOfOptionsInCell )  Plus( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) ) )  Plus( Minus( div( countEmptyCellsInCols_ThatNotContainsNum  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInRowsContainsNum  NumOfOptionsInCell ) )  Plus( Minus( countEmptyCellsInSquareContainsNum  countEmptyCellsInColsContainsNum )  Plus( countEmptyCellInSquare  NumOfOptionsInCell ) ) ) ) ),((((( NumOfOptionsInCell  %  countEmptyCellInCol ) + ( countEmptyCellsInSquareContainsNum  %  countEmptyCellsInRowsContainsNum )) Min (( countEmptyCellInRow  +  NumOfOptionsInCell ) % ( countEmptyCellsInRows_ThatNotContainsNum  +  countEmptyCellsInCols_ThatNotContainsNum ))) * ((( countEmptyCellsInCols_ThatNotContainsNum  /  numOfOptionsToAppearInBoard ) - ( countEmptyCellsInRowsContainsNum  *  NumOfOptionsInCell )) + (( countEmptyCellsInSquareContainsNum  -  countEmptyCellsInColsContainsNum ) + ( countEmptyCellInSquare  +  NumOfOptionsInCell )))) Max (((( NumOfOptionsInCell  %  countEmptyCellInCol ) + ( countEmptyCellsInSquareContainsNum  %  countEmptyCellsInRowsContainsNum )) Min (( countEmptyCellInRow  +  NumOfOptionsInCell ) % ( countEmptyCellsInRows_ThatNotContainsNum  +  countEmptyCellsInCols_ThatNotContainsNum ))) * ((( countEmptyCellsInCols_ThatNotContainsNum  /  numOfOptionsToAppearInBoard ) - ( countEmptyCellsInRowsContainsNum  *  NumOfOptionsInCell )) + (( countEmptyCellsInSquareContainsNum  -  countEmptyCellsInColsContainsNum ) + ( countEmptyCellInSquare  +  NumOfOptionsInCell ))))),
10,19.0,2.0,10.23,Maximum( Multi( Minimum( Plus( Mod( NumOfOptionsInCell  countEmptyCellInCol )  Mod( countEmptyCellsInSquareContainsNum  countEmptyCellsInRowsContainsNum ) )  Mod( Plus( countEmptyCellInRow  NumOfOptionsInCell )  Plus( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) ) )  Plus( Minus( div( countEmptyCellsInCols_ThatNotContainsNum  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInRowsContainsNum  NumOfOptionsInCell ) )  Plus( Minus( countEmptyCellsInSquareContainsNum  countEmptyCellsInColsContainsNum )  Plus( countEmptyCellInSquare  NumOfOptionsInCell ) ) ) )  Multi( Minimum( Plus( Mod( NumOfOptionsInCell  countEmptyCellInCol )  Mod( countEmptyCellsInSquareContainsNum  countEmptyCellsInRowsContainsNum ) )  Mod( Plus( countEmptyCellInRow  NumOfOptionsInCell )  Plus( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) ) )  Plus( Minus( div( countEmptyCellsInCols_ThatNotContainsNum  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInRowsContainsNum  NumOfOptionsInCell ) )  Plus( Minus( countEmptyCellsInSquareContainsNum  countEmptyCellsInColsContainsNum )  Plus( countEmptyCellInSquare  NumOfOptionsInCell ) ) ) ) ),((((( NumOfOptionsInCell  %  countEmptyCellInCol ) + ( countEmptyCellsInSquareContainsNum  %  countEmptyCellsInRowsContainsNum )) Min (( countEmptyCellInRow  +  NumOfOptionsInCell ) % ( countEmptyCellsInRows_ThatNotContainsNum  +  countEmptyCellsInCols_ThatNotContainsNum ))) * ((( countEmptyCellsInCols_ThatNotContainsNum  /  numOfOptionsToAppearInBoard ) - ( countEmptyCellsInRowsContainsNum  *  NumOfOptionsInCell )) + (( countEmptyCellsInSquareContainsNum  -  countEmptyCellsInColsContainsNum ) + ( countEmptyCellInSquare  +  NumOfOptionsInCell )))) Max (((( NumOfOptionsInCell  %  countEmptyCellInCol ) + ( countEmptyCellsInSquareContainsNum  %  countEmptyCellsInRowsContainsNum )) Min (( countEmptyCellInRow  +  NumOfOptionsInCell ) % ( countEmptyCellsInRows_ThatNotContainsNum  +  countEmptyCellsInCols_ThatNotContainsNum ))) * ((( countEmptyCellsInCols_ThatNotContainsNum  /  numOfOptionsToAppearInBoard ) - ( countEmptyCellsInRowsContainsNum  *  NumOfOptionsInCell )) + (( countEmptyCellsInSquareContainsNum  -  countEmptyCellsInColsContainsNum ) + ( countEmptyCellInSquare  +  NumOfOptionsInCell ))))),
11,20.0,4.0,10.12,div( Multi( Minimum( Plus( Mod( NumOfOptionsInCell  countEmptyCellInCol )  Mod( countEmptyCellsInSquareContainsNum  countEmptyCellsInRowsContainsNum ) )  div( Plus( numOfOptionsToAppearInBoard  countEmptyCellInCol )  Mod( countEmptyCellInRow  numOfOptionsToAppearInBoard ) ) )  Plus( Minus( div( countEmptyCellsInCols_ThatNotContainsNum  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInRowsContainsNum  NumOfOptionsInCell ) )  Plus( Minus( countEmptyCellsInSquareContainsNum  countEmptyCellsInColsContainsNum )  Plus( countEmptyCellInSquare  NumOfOptionsInCell ) ) ) )  Multi( div( Minus( Maximum( NumOfOptionsInCell  countEmptyCellsInSquare_ThatNotContainsNum )  Plus( countEmptyCellsInRows_ThatNotContainsNum  NumOfOptionsInCell ) )  Minus( Maximum( countEmptyCellInRow  countEmptyCellsInRows_ThatNotContainsNum )  Minimum( countEmptyCellInRow  countEmptyCellsInColsContainsNum ) ) )  Minus( Maximum( Plus( countEmptyCellsInRows_ThatNotContainsNum  numOfOptionsToAppearInBoard )  Maximum( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellInRow ) )  Minimum( Maximum( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInSquare_ThatNotContainsNum )  Plus( countEmptyCellInSquare  countEmptyCellsInSquare_ThatNotContainsNum ) ) ) ) ),((((( NumOfOptionsInCell  %  countEmptyCellInCol ) + ( countEmptyCellsInSquareContainsNum  %  countEmptyCellsInRowsContainsNum )) Min (( numOfOptionsToAppearInBoard  +  countEmptyCellInCol ) / ( countEmptyCellInRow  %  numOfOptionsToAppearInBoard ))) * ((( countEmptyCellsInCols_ThatNotContainsNum  /  numOfOptionsToAppearInBoard ) - ( countEmptyCellsInRowsContainsNum  *  NumOfOptionsInCell )) + (( countEmptyCellsInSquareContainsNum  -  countEmptyCellsInColsContainsNum ) + ( countEmptyCellInSquare  +  NumOfOptionsInCell )))) / (((( NumOfOptionsInCell  Max  countEmptyCellsInSquare_ThatNotContainsNum ) - ( countEmptyCellsInRows_ThatNotContainsNum  +  NumOfOptionsInCell )) / (( countEmptyCellInRow  Max  countEmptyCellsInRows_ThatNotContainsNum ) - ( countEmptyCellInRow  Min  countEmptyCellsInColsContainsNum ))) * ((( countEmptyCellsInRows_ThatNotContainsNum  +  numOfOptionsToAppearInBoard ) Max ( countEmptyCellsInSquare_ThatNotContainsNum  Max  countEmptyCellInRow )) - (( countEmptyCellsInRows_ThatNotContainsNum  Max  countEmptyCellsInSquare_ThatNotContainsNum ) Min ( countEmptyCellInSquare  +  countEmptyCellsInSquare_ThatNotContainsNum ))))),
12,18.0,2.0,10.12,Plus( Multi( Minimum( Plus( Mod( NumOfOptionsInCell  countEmptyCellInCol )  Mod( countEmptyCellsInSquareContainsNum  countEmptyCellsInRowsContainsNum ) )  Mod( Plus( countEmptyCellInRow  NumOfOptionsInCell )  Plus( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) ) )  Plus( Minus( div( countEmptyCellsInCols_ThatNotContainsNum  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInRowsContainsNum  NumOfOptionsInCell ) )  Plus( Minus( countEmptyCellsInSquareContainsNum  countEmptyCellsInColsContainsNum )  Plus( countEmptyCellInSquare  NumOfOptionsInCell ) ) ) )  Plus( Mod( Minus( Multi( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInColsContainsNum )  Maximum( countEmptyCellsInSquareContainsNum  countEmptyCellsInSquareContainsNum ) )  Multi( div( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellInRow )  div( countEmptyCellInSquare  numOfOptionsToAppearInBoard ) ) )  div( Maximum( Minimum( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInSquare_ThatNotContainsNum )  div( countEmptyCellInCol  NumOfOptionsInCell ) )  Plus( div( countEmptyCellInSquare  countEmptyCellInSquare )  Plus( countEmptyCellsInRowsContainsNum  countEmptyCellInSquare ) ) ) ) ),((((( NumOfOptionsInCell  %  countEmptyCellInCol ) + ( countEmptyCellsInSquareContainsNum  %  countEmptyCellsInRowsContainsNum )) Min (( countEmptyCellInRow  +  NumOfOptionsInCell ) % ( countEmptyCellsInRows_ThatNotContainsNum  +  countEmptyCellsInCols_ThatNotContainsNum ))) * ((( countEmptyCellsInCols_ThatNotContainsNum  /  numOfOptionsToAppearInBoard ) - ( countEmptyCellsInRowsContainsNum  *  NumOfOptionsInCell )) + (( countEmptyCellsInSquareContainsNum  -  countEmptyCellsInColsContainsNum ) + ( countEmptyCellInSquare  +  NumOfOptionsInCell )))) + (((( countEmptyCellsInCols_ThatNotContainsNum  *  countEmptyCellsInColsContainsNum ) - ( countEmptyCellsInSquareContainsNum  Max  countEmptyCellsInSquareContainsNum )) % (( countEmptyCellsInCols_ThatNotContainsNum  /  countEmptyCellInRow ) * ( countEmptyCellInSquare  /  numOfOptionsToAppearInBoard ))) + ((( countEmptyCellsInRows_ThatNotContainsNum  Min  countEmptyCellsInSquare_ThatNotContainsNum ) Max ( countEmptyCellInCol  /  NumOfOptionsInCell )) / (( countEmptyCellInSquare  /  countEmptyCellInSquare ) + ( countEmptyCellsInRowsContainsNum  +  countEmptyCellInSquare ))))),
13,18.0,2.0,9.31,Plus( Multi( Minimum( Plus( Mod( NumOfOptionsInCell  countEmptyCellInCol )  Mod( countEmptyCellsInSquareContainsNum  countEmptyCellsInRowsContainsNum ) )  Mod( Plus( countEmptyCellInRow  NumOfOptionsInCell )  Plus( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) ) )  Plus( Minus( div( countEmptyCellsInCols_ThatNotContainsNum  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInRowsContainsNum  NumOfOptionsInCell ) )  Plus( Minus( countEmptyCellsInSquareContainsNum  countEmptyCellsInColsContainsNum )  Plus( countEmptyCellInSquare  NumOfOptionsInCell ) ) ) )  Multi( Minimum( Plus( Mod( NumOfOptionsInCell  countEmptyCellInCol )  Mod( countEmptyCellsInSquareContainsNum  countEmptyCellsInRowsContainsNum ) )  Mod( Plus( countEmptyCellInRow  NumOfOptionsInCell )  Plus( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) ) )  Plus( Minus( div( countEmptyCellsInCols_ThatNotContainsNum  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInRowsContainsNum  NumOfOptionsInCell ) )  Plus( Minus( countEmptyCellsInSquareContainsNum  countEmptyCellsInColsContainsNum )  Plus( countEmptyCellInSquare  NumOfOptionsInCell ) ) ) ) ),((((( NumOfOptionsInCell  %  countEmptyCellInCol ) + ( countEmptyCellsInSquareContainsNum  %  countEmptyCellsInRowsContainsNum )) Min (( countEmptyCellInRow  +  NumOfOptionsInCell ) % ( countEmptyCellsInRows_ThatNotContainsNum  +  countEmptyCellsInCols_ThatNotContainsNum ))) * ((( countEmptyCellsInCols_ThatNotContainsNum  /  numOfOptionsToAppearInBoard ) - ( countEmptyCellsInRowsContainsNum  *  NumOfOptionsInCell )) + (( countEmptyCellsInSquareContainsNum  -  countEmptyCellsInColsContainsNum ) + ( countEmptyCellInSquare  +  NumOfOptionsInCell )))) + (((( NumOfOptionsInCell  %  countEmptyCellInCol ) + ( countEmptyCellsInSquareContainsNum  %  countEmptyCellsInRowsContainsNum )) Min (( countEmptyCellInRow  +  NumOfOptionsInCell ) % ( countEmptyCellsInRows_ThatNotContainsNum  +  countEmptyCellsInCols_ThatNotContainsNum ))) * ((( countEmptyCellsInCols_ThatNotContainsNum  /  numOfOptionsToAppearInBoard ) - ( countEmptyCellsInRowsContainsNum  *  NumOfOptionsInCell )) + (( countEmptyCellsInSquareContainsNum  -  countEmptyCellsInColsContainsNum ) + ( countEmptyCellInSquare  +  NumOfOptionsInCell ))))),
14,20.0,2.0,9.43,Plus( Multi( Minimum( Plus( Mod( NumOfOptionsInCell  countEmptyCellInCol )  Mod( countEmptyCellsInSquareContainsNum  countEmptyCellsInRowsContainsNum ) )  Mod( Plus( countEmptyCellInRow  NumOfOptionsInCell )  Plus( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) ) )  Plus( Minus( div( countEmptyCellsInCols_ThatNotContainsNum  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInRowsContainsNum  NumOfOptionsInCell ) )  Plus( Minus( countEmptyCellsInSquareContainsNum  countEmptyCellsInColsContainsNum )  Plus( countEmptyCellInSquare  NumOfOptionsInCell ) ) ) )  Multi( Minimum( Plus( Mod( NumOfOptionsInCell  countEmptyCellInCol )  Mod( countEmptyCellsInSquareContainsNum  countEmptyCellsInRowsContainsNum ) )  Mod( Plus( countEmptyCellInRow  NumOfOptionsInCell )  Plus( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) ) )  Plus( Minus( div( countEmptyCellsInCols_ThatNotContainsNum  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInRowsContainsNum  NumOfOptionsInCell ) )  Plus( Minus( countEmptyCellsInSquareContainsNum  countEmptyCellsInColsContainsNum )  Plus( countEmptyCellInSquare  NumOfOptionsInCell ) ) ) ) ),((((( NumOfOptionsInCell  %  countEmptyCellInCol ) + ( countEmptyCellsInSquareContainsNum  %  countEmptyCellsInRowsContainsNum )) Min (( countEmptyCellInRow  +  NumOfOptionsInCell ) % ( countEmptyCellsInRows_ThatNotContainsNum  +  countEmptyCellsInCols_ThatNotContainsNum ))) * ((( countEmptyCellsInCols_ThatNotContainsNum  /  numOfOptionsToAppearInBoard ) - ( countEmptyCellsInRowsContainsNum  *  NumOfOptionsInCell )) + (( countEmptyCellsInSquareContainsNum  -  countEmptyCellsInColsContainsNum ) + ( countEmptyCellInSquare  +  NumOfOptionsInCell )))) + (((( NumOfOptionsInCell  %  countEmptyCellInCol ) + ( countEmptyCellsInSquareContainsNum  %  countEmptyCellsInRowsContainsNum )) Min (( countEmptyCellInRow  +  NumOfOptionsInCell ) % ( countEmptyCellsInRows_ThatNotContainsNum  +  countEmptyCellsInCols_ThatNotContainsNum ))) * ((( countEmptyCellsInCols_ThatNotContainsNum  /  numOfOptionsToAppearInBoard ) - ( countEmptyCellsInRowsContainsNum  *  NumOfOptionsInCell )) + (( countEmptyCellsInSquareContainsNum  -  countEmptyCellsInColsContainsNum ) + ( countEmptyCellInSquare  +  NumOfOptionsInCell ))))),
15,19.0,2.0,9.52,Minus( Multi( Minimum( Plus( Mod( NumOfOptionsInCell  countEmptyCellInCol )  Mod( countEmptyCellsInSquareContainsNum  countEmptyCellsInRowsContainsNum ) )  Mod( Plus( countEmptyCellInRow  NumOfOptionsInCell )  Plus( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) ) )  Plus( Minus( div( countEmptyCellsInCols_ThatNotContainsNum  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInRowsContainsNum  NumOfOptionsInCell ) )  Plus( Minus( countEmptyCellsInSquareContainsNum  countEmptyCellsInColsContainsNum )  Plus( countEmptyCellInSquare  NumOfOptionsInCell ) ) ) )  Plus( Maximum( Minimum( Minus( NumOfOptionsInCell  countEmptyCellsInColsContainsNum )  Mod( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInSquareContainsNum ) )  Minimum( Mod( numOfOptionsToAppearInBoard  countEmptyCellsInRows_ThatNotContainsNum )  Multi( countEmptyCellInSquare  NumOfOptionsInCell ) ) )  Multi( Minimum( Minus( countEmptyCellsInRowsContainsNum  countEmptyCellsInSquare_ThatNotContainsNum )  Mod( countEmptyCellInRow  countEmptyCellsInRows_ThatNotContainsNum ) )  Maximum( Mod( countEmptyCellsInColsContainsNum  countEmptyCellsInColsContainsNum )  Minus( NumOfOptionsInCell  countEmptyCellInRow ) ) ) ) ),((((( NumOfOptionsInCell  %  countEmptyCellInCol ) + ( countEmptyCellsInSquareContainsNum  %  countEmptyCellsInRowsContainsNum )) Min (( countEmptyCellInRow  +  NumOfOptionsInCell ) % ( countEmptyCellsInRows_ThatNotContainsNum  +  countEmptyCellsInCols_ThatNotContainsNum ))) * ((( countEmptyCellsInCols_ThatNotContainsNum  /  numOfOptionsToAppearInBoard ) - ( countEmptyCellsInRowsContainsNum  *  NumOfOptionsInCell )) + (( countEmptyCellsInSquareContainsNum  -  countEmptyCellsInColsContainsNum ) + ( countEmptyCellInSquare  +  NumOfOptionsInCell )))) - (((( NumOfOptionsInCell  -  countEmptyCellsInColsContainsNum ) Min ( countEmptyCellsInCols_ThatNotContainsNum  %  countEmptyCellsInSquareContainsNum )) Max (( numOfOptionsToAppearInBoard  %  countEmptyCellsInRows_ThatNotContainsNum ) Min ( countEmptyCellInSquare  *  NumOfOptionsInCell ))) + ((( countEmptyCellsInRowsContainsNum  -  countEmptyCellsInSquare_ThatNotContainsNum ) Min ( countEmptyCellInRow  %  countEmptyCellsInRows_ThatNotContainsNum )) * (( countEmptyCellsInColsContainsNum  %  countEmptyCellsInColsContainsNum ) Max ( NumOfOptionsInCell  -  countEmptyCellInRow ))))),
16,19.0,2.0,9.51,Plus( Multi( Minus( div( div( countEmptyCellsInColsContainsNum  countEmptyCellsInSquareContainsNum )  Multi( countEmptyCellsInColsContainsNum  countEmptyCellInCol ) )  Minus( Minimum( numOfOptionsToAppearInBoard  countEmptyCellsInRows_ThatNotContainsNum )  Plus( countEmptyCellsInColsContainsNum  countEmptyCellsInSquareContainsNum ) ) )  Minus( Minimum( Minimum( countEmptyCellsInColsContainsNum  countEmptyCellInSquare )  Minimum( NumOfOptionsInCell  countEmptyCellInSquare ) )  div( Maximum( countEmptyCellInSquare  countEmptyCellsInSquareContainsNum )  Maximum( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellInRow ) ) ) )  Multi( div( Minus( Maximum( NumOfOptionsInCell  countEmptyCellsInSquare_ThatNotContainsNum )  Plus( countEmptyCellsInRows_ThatNotContainsNum  NumOfOptionsInCell ) )  Minus( Maximum( countEmptyCellInRow  countEmptyCellsInRows_ThatNotContainsNum )  Minimum( countEmptyCellInRow  countEmptyCellsInColsContainsNum ) ) )  Minimum( Maximum( Minus( countEmptyCellInSquare  countEmptyCellsInCols_ThatNotContainsNum )  Minus( countEmptyCellInCol  countEmptyCellsInRows_ThatNotContainsNum ) )  Minus( Mod( NumOfOptionsInCell  NumOfOptionsInCell )  Minimum( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) ) ) ) ),((((( countEmptyCellsInColsContainsNum  /  countEmptyCellsInSquareContainsNum ) / ( countEmptyCellsInColsContainsNum  *  countEmptyCellInCol )) - (( numOfOptionsToAppearInBoard  Min  countEmptyCellsInRows_ThatNotContainsNum ) - ( countEmptyCellsInColsContainsNum  +  countEmptyCellsInSquareContainsNum ))) * ((( countEmptyCellsInColsContainsNum  Min  countEmptyCellInSquare ) Min ( NumOfOptionsInCell  Min  countEmptyCellInSquare )) - (( countEmptyCellInSquare  Max  countEmptyCellsInSquareContainsNum ) / ( countEmptyCellsInSquare_ThatNotContainsNum  Max  countEmptyCellInRow )))) + (((( NumOfOptionsInCell  Max  countEmptyCellsInSquare_ThatNotContainsNum ) - ( countEmptyCellsInRows_ThatNotContainsNum  +  NumOfOptionsInCell )) / (( countEmptyCellInRow  Max  countEmptyCellsInRows_ThatNotContainsNum ) - ( countEmptyCellInRow  Min  countEmptyCellsInColsContainsNum ))) * ((( countEmptyCellInSquare  -  countEmptyCellsInCols_ThatNotContainsNum ) Max ( countEmptyCellInCol  -  countEmptyCellsInRows_ThatNotContainsNum )) Min (( NumOfOptionsInCell  %  NumOfOptionsInCell ) - ( countEmptyCellsInCols_ThatNotContainsNum  Min  countEmptyCellsInRowsContainsNum ))))),
17,21.0,2.0,9.04,Plus( Multi( Minus( div( div( countEmptyCellsInColsContainsNum  countEmptyCellsInSquareContainsNum )  Multi( countEmptyCellsInColsContainsNum  countEmptyCellInCol ) )  Minus( Minimum( numOfOptionsToAppearInBoard  countEmptyCellsInRows_ThatNotContainsNum )  Plus( countEmptyCellsInColsContainsNum  countEmptyCellsInSquareContainsNum ) ) )  Minus( Minimum( Minimum( countEmptyCellsInColsContainsNum  countEmptyCellInSquare )  Minimum( NumOfOptionsInCell  countEmptyCellInSquare ) )  div( Maximum( countEmptyCellInSquare  countEmptyCellsInSquareContainsNum )  Maximum( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellInRow ) ) ) )  Multi( div( Minus( Maximum( NumOfOptionsInCell  countEmptyCellsInSquare_ThatNotContainsNum )  Plus( countEmptyCellsInRows_ThatNotContainsNum  NumOfOptionsInCell ) )  Minus( Maximum( countEmptyCellInRow  countEmptyCellsInRows_ThatNotContainsNum )  Minimum( countEmptyCellInRow  countEmptyCellsInColsContainsNum ) ) )  Minimum( Maximum( Minus( countEmptyCellInSquare  countEmptyCellsInCols_ThatNotContainsNum )  Minus( countEmptyCellInCol  countEmptyCellsInRows_ThatNotContainsNum ) )  Minus( Mod( NumOfOptionsInCell  NumOfOptionsInCell )  Minimum( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) ) ) ) ),((((( countEmptyCellsInColsContainsNum  /  countEmptyCellsInSquareContainsNum ) / ( countEmptyCellsInColsContainsNum  *  countEmptyCellInCol )) - (( numOfOptionsToAppearInBoard  Min  countEmptyCellsInRows_ThatNotContainsNum ) - ( countEmptyCellsInColsContainsNum  +  countEmptyCellsInSquareContainsNum ))) * ((( countEmptyCellsInColsContainsNum  Min  countEmptyCellInSquare ) Min ( NumOfOptionsInCell  Min  countEmptyCellInSquare )) - (( countEmptyCellInSquare  Max  countEmptyCellsInSquareContainsNum ) / ( countEmptyCellsInSquare_ThatNotContainsNum  Max  countEmptyCellInRow )))) + (((( NumOfOptionsInCell  Max  countEmptyCellsInSquare_ThatNotContainsNum ) - ( countEmptyCellsInRows_ThatNotContainsNum  +  NumOfOptionsInCell )) / (( countEmptyCellInRow  Max  countEmptyCellsInRows_ThatNotContainsNum ) - ( countEmptyCellInRow  Min  countEmptyCellsInColsContainsNum ))) * ((( countEmptyCellInSquare  -  countEmptyCellsInCols_ThatNotContainsNum ) Max ( countEmptyCellInCol  -  countEmptyCellsInRows_ThatNotContainsNum )) Min (( NumOfOptionsInCell  %  NumOfOptionsInCell ) - ( countEmptyCellsInCols_ThatNotContainsNum  Min  countEmptyCellsInRowsContainsNum ))))),
18,17.0,2.0,8.59,Maximum( Multi( Plus( Multi( Maximum( countEmptyCellInSquare  countEmptyCellsInSquare_ThatNotContainsNum )  Minimum( countEmptyCellInSquare  NumOfOptionsInCell ) )  div( Minimum( countEmptyCellsInCols_ThatNotContainsNum  NumOfOptionsInCell )  Minimum( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInColsContainsNum ) ) )  Plus( Maximum( Maximum( NumOfOptionsInCell  countEmptyCellsInColsContainsNum )  Mod( countEmptyCellInRow  countEmptyCellsInSquareContainsNum ) )  Minus( div( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInColsContainsNum )  Multi( countEmptyCellsInSquareContainsNum  countEmptyCellsInColsContainsNum ) ) ) )  Minimum( Minus( Minimum( Minimum( countEmptyCellsInColsContainsNum  countEmptyCellsInSquare_ThatNotContainsNum )  Minimum( countEmptyCellsInColsContainsNum  countEmptyCellInRow ) )  Minimum( Mod( countEmptyCellInCol  NumOfOptionsInCell )  Maximum( countEmptyCellsInRowsContainsNum  countEmptyCellsInSquareContainsNum ) ) )  Mod( Multi( div( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellInSquare )  Plus( countEmptyCellsInColsContainsNum  countEmptyCellsInColsContainsNum ) )  div( Minimum( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellInCol )  Mod( countEmptyCellInCol  countEmptyCellsInRows_ThatNotContainsNum ) ) ) ) ),((((( countEmptyCellInSquare  Max  countEmptyCellsInSquare_ThatNotContainsNum ) * ( countEmptyCellInSquare  Min  NumOfOptionsInCell )) + (( countEmptyCellsInCols_ThatNotContainsNum  Min  NumOfOptionsInCell ) / ( countEmptyCellsInSquare_ThatNotContainsNum  Min  countEmptyCellsInColsContainsNum ))) * ((( NumOfOptionsInCell  Max  countEmptyCellsInColsContainsNum ) Max ( countEmptyCellInRow  %  countEmptyCellsInSquareContainsNum )) + (( countEmptyCellsInSquare_ThatNotContainsNum  /  countEmptyCellsInColsContainsNum ) - ( countEmptyCellsInSquareContainsNum  *  countEmptyCellsInColsContainsNum )))) Max (((( countEmptyCellsInColsContainsNum  Min  countEmptyCellsInSquare_ThatNotContainsNum ) Min ( countEmptyCellsInColsContainsNum  Min  countEmptyCellInRow )) - (( countEmptyCellInCol  %  NumOfOptionsInCell ) Min ( countEmptyCellsInRowsContainsNum  Max  countEmptyCellsInSquareContainsNum ))) Min ((( countEmptyCellsInSquare_ThatNotContainsNum  /  countEmptyCellInSquare ) * ( countEmptyCellsInColsContainsNum  +  countEmptyCellsInColsContainsNum )) % (( countEmptyCellsInSquare_ThatNotContainsNum  Min  countEmptyCellInCol ) / ( countEmptyCellInCol  %  countEmptyCellsInRows_ThatNotContainsNum ))))),
19,18.0,2.0,8.57,Maximum( Multi( Plus( Multi( Maximum( countEmptyCellInSquare  countEmptyCellsInSquare_ThatNotContainsNum )  Minimum( countEmptyCellInSquare  NumOfOptionsInCell ) )  div( Minimum( countEmptyCellsInCols_ThatNotContainsNum  NumOfOptionsInCell )  Minimum( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInColsContainsNum ) ) )  Plus( Maximum( Maximum( NumOfOptionsInCell  countEmptyCellsInColsContainsNum )  Mod( countEmptyCellInRow  countEmptyCellsInSquareContainsNum ) )  Minus( div( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInColsContainsNum )  Multi( countEmptyCellsInSquareContainsNum  countEmptyCellsInColsContainsNum ) ) ) )  div( Minus( Multi( Plus( numOfOptionsToAppearInBoard  countEmptyCellsInCols_ThatNotContainsNum )  Maximum( countEmptyCellInCol  countEmptyCellInSquare ) )  Maximum( Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum )  Plus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellInCol ) ) )  Maximum( Multi( Maximum( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInRow )  Maximum( countEmptyCellsInRows_ThatNotContainsNum  numOfOptionsToAppearInBoard ) )  div( div( countEmptyCellInSquare  numOfOptionsToAppearInBoard )  Minus( countEmptyCellsInColsContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) ) ) ) ),((((( countEmptyCellInSquare  Max  countEmptyCellsInSquare_ThatNotContainsNum ) * ( countEmptyCellInSquare  Min  NumOfOptionsInCell )) + (( countEmptyCellsInCols_ThatNotContainsNum  Min  NumOfOptionsInCell ) / ( countEmptyCellsInSquare_ThatNotContainsNum  Min  countEmptyCellsInColsContainsNum ))) * ((( NumOfOptionsInCell  Max  countEmptyCellsInColsContainsNum ) Max ( countEmptyCellInRow  %  countEmptyCellsInSquareContainsNum )) + (( countEmptyCellsInSquare_ThatNotContainsNum  /  countEmptyCellsInColsContainsNum ) - ( countEmptyCellsInSquareContainsNum  *  countEmptyCellsInColsContainsNum )))) Max (((( numOfOptionsToAppearInBoard  +  countEmptyCellsInCols_ThatNotContainsNum ) * ( countEmptyCellInCol  Max  countEmptyCellInSquare )) - (( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInCols_ThatNotContainsNum ) Max ( countEmptyCellsInCols_ThatNotContainsNum  +  countEmptyCellInCol ))) / ((( countEmptyCellsInRows_ThatNotContainsNum  Max  countEmptyCellInRow ) * ( countEmptyCellsInRows_ThatNotContainsNum  Max  numOfOptionsToAppearInBoard )) Max (( countEmptyCellInSquare  /  numOfOptionsToAppearInBoard ) / ( countEmptyCellsInColsContainsNum  -  countEmptyCellsInCols_ThatNotContainsNum ))))),
20,19.0,2.0,8.67,Maximum( Multi( Plus( Multi( Maximum( countEmptyCellInSquare  countEmptyCellsInSquare_ThatNotContainsNum )  Minimum( countEmptyCellInSquare  NumOfOptionsInCell ) )  div( Minimum( countEmptyCellsInCols_ThatNotContainsNum  NumOfOptionsInCell )  Minimum( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInColsContainsNum ) ) )  Plus( Maximum( Maximum( NumOfOptionsInCell  countEmptyCellsInColsContainsNum )  Mod( countEmptyCellInRow  countEmptyCellsInSquareContainsNum ) )  Minus( div( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInColsContainsNum )  Multi( countEmptyCellsInSquareContainsNum  countEmptyCellsInColsContainsNum ) ) ) )  Plus( Plus( div( Minus( countEmptyCellInRow  countEmptyCellsInRows_ThatNotContainsNum )  Maximum( countEmptyCellsInCols_ThatNotContainsNum  numOfOptionsToAppearInBoard ) )  div( Plus( countEmptyCellInSquare  countEmptyCellInRow )  Multi( countEmptyCellsInRows_ThatNotContainsNum  numOfOptionsToAppearInBoard ) ) )  div( div( div( NumOfOptionsInCell  countEmptyCellInSquare )  Minimum( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) )  div( Mod( numOfOptionsToAppearInBoard  countEmptyCellsInRows_ThatNotContainsNum )  Minimum( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellInRow ) ) ) ) ),((((( countEmptyCellInSquare  Max  countEmptyCellsInSquare_ThatNotContainsNum ) * ( countEmptyCellInSquare  Min  NumOfOptionsInCell )) + (( countEmptyCellsInCols_ThatNotContainsNum  Min  NumOfOptionsInCell ) / ( countEmptyCellsInSquare_ThatNotContainsNum  Min  countEmptyCellsInColsContainsNum ))) * ((( NumOfOptionsInCell  Max  countEmptyCellsInColsContainsNum ) Max ( countEmptyCellInRow  %  countEmptyCellsInSquareContainsNum )) + (( countEmptyCellsInSquare_ThatNotContainsNum  /  countEmptyCellsInColsContainsNum ) - ( countEmptyCellsInSquareContainsNum  *  countEmptyCellsInColsContainsNum )))) Max (((( countEmptyCellInRow  -  countEmptyCellsInRows_ThatNotContainsNum ) / ( countEmptyCellsInCols_ThatNotContainsNum  Max  numOfOptionsToAppearInBoard )) + (( countEmptyCellInSquare  +  countEmptyCellInRow ) / ( countEmptyCellsInRows_ThatNotContainsNum  *  numOfOptionsToAppearInBoard ))) + ((( NumOfOptionsInCell  /  countEmptyCellInSquare ) / ( countEmptyCellsInRows_ThatNotContainsNum  Min  countEmptyCellsInCols_ThatNotContainsNum )) / (( numOfOptionsToAppearInBoard  %  countEmptyCellsInRows_ThatNotContainsNum ) / ( countEmptyCellsInCols_ThatNotContainsNum  Min  countEmptyCellInRow ))))),
21,19.0,2.0,8.54,Maximum( Multi( Plus( Multi( Maximum( countEmptyCellInSquare  countEmptyCellsInSquare_ThatNotContainsNum )  Minimum( countEmptyCellInSquare  NumOfOptionsInCell ) )  div( Minimum( countEmptyCellsInCols_ThatNotContainsNum  NumOfOptionsInCell )  Minimum( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInColsContainsNum ) ) )  Plus( Maximum( Maximum( NumOfOptionsInCell  countEmptyCellsInColsContainsNum )  Mod( countEmptyCellInRow  countEmptyCellsInSquareContainsNum ) )  Minus( div( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInColsContainsNum )  Multi( countEmptyCellsInSquareContainsNum  countEmptyCellsInColsContainsNum ) ) ) )  Maximum( div( Minus( Mod( NumOfOptionsInCell  countEmptyCellsInRows_ThatNotContainsNum )  div( countEmptyCellsInColsContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) )  Minimum( Minus( countEmptyCellsInRowsContainsNum  countEmptyCellInRow )  Minus( countEmptyCellInSquare  NumOfOptionsInCell ) ) )  Mod( Maximum( Minus( countEmptyCellsInSquareContainsNum  countEmptyCellsInColsContainsNum )  Minus( countEmptyCellInCol  countEmptyCellsInSquareContainsNum ) )  Mod( div( numOfOptionsToAppearInBoard  countEmptyCellInRow )  Mod( countEmptyCellInCol  countEmptyCellsInSquareContainsNum ) ) ) ) ),((((( countEmptyCellInSquare  Max  countEmptyCellsInSquare_ThatNotContainsNum ) * ( countEmptyCellInSquare  Min  NumOfOptionsInCell )) + (( countEmptyCellsInCols_ThatNotContainsNum  Min  NumOfOptionsInCell ) / ( countEmptyCellsInSquare_ThatNotContainsNum  Min  countEmptyCellsInColsContainsNum ))) * ((( NumOfOptionsInCell  Max  countEmptyCellsInColsContainsNum ) Max ( countEmptyCellInRow  %  countEmptyCellsInSquareContainsNum )) + (( countEmptyCellsInSquare_ThatNotContainsNum  /  countEmptyCellsInColsContainsNum ) - ( countEmptyCellsInSquareContainsNum  *  countEmptyCellsInColsContainsNum )))) Max (((( NumOfOptionsInCell  %  countEmptyCellsInRows_ThatNotContainsNum ) - ( countEmptyCellsInColsContainsNum  /  countEmptyCellsInCols_ThatNotContainsNum )) / (( countEmptyCellsInRowsContainsNum  -  countEmptyCellInRow ) Min ( countEmptyCellInSquare  -  NumOfOptionsInCell ))) Max ((( countEmptyCellsInSquareContainsNum  -  countEmptyCellsInColsContainsNum ) Max ( countEmptyCellInCol  -  countEmptyCellsInSquareContainsNum )) % (( numOfOptionsToAppearInBoard  /  countEmptyCellInRow ) % ( countEmptyCellInCol  %  countEmptyCellsInSquareContainsNum ))))),
22,17.0,2.0,7.71,Maximum( Multi( Plus( Multi( Maximum( countEmptyCellInSquare  countEmptyCellsInSquare_ThatNotContainsNum )  Minimum( countEmptyCellInSquare  NumOfOptionsInCell ) )  div( Minimum( countEmptyCellsInCols_ThatNotContainsNum  NumOfOptionsInCell )  Minimum( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInColsContainsNum ) ) )  Plus( Maximum( Maximum( NumOfOptionsInCell  countEmptyCellsInColsContainsNum )  Mod( countEmptyCellInRow  countEmptyCellsInSquareContainsNum ) )  Minus( div( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInColsContainsNum )  Multi( countEmptyCellsInSquareContainsNum  countEmptyCellsInColsContainsNum ) ) ) )  Multi( div( Minus( Maximum( NumOfOptionsInCell  countEmptyCellsInSquare_ThatNotContainsNum )  Plus( countEmptyCellsInRows_ThatNotContainsNum  NumOfOptionsInCell ) )  Minus( Maximum( countEmptyCellInRow  countEmptyCellsInRows_ThatNotContainsNum )  Minimum( countEmptyCellInRow  countEmptyCellsInColsContainsNum ) ) )  Minus( Maximum( Plus( countEmptyCellsInRows_ThatNotContainsNum  numOfOptionsToAppearInBoard )  Maximum( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellInRow ) )  Minimum( Maximum( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInSquare_ThatNotContainsNum )  Minimum( countEmptyCellInRow  NumOfOptionsInCell ) ) ) ) ),((((( countEmptyCellInSquare  Max  countEmptyCellsInSquare_ThatNotContainsNum ) * ( countEmptyCellInSquare  Min  NumOfOptionsInCell )) + (( countEmptyCellsInCols_ThatNotContainsNum  Min  NumOfOptionsInCell ) / ( countEmptyCellsInSquare_ThatNotContainsNum  Min  countEmptyCellsInColsContainsNum ))) * ((( NumOfOptionsInCell  Max  countEmptyCellsInColsContainsNum ) Max ( countEmptyCellInRow  %  countEmptyCellsInSquareContainsNum )) + (( countEmptyCellsInSquare_ThatNotContainsNum  /  countEmptyCellsInColsContainsNum ) - ( countEmptyCellsInSquareContainsNum  *  countEmptyCellsInColsContainsNum )))) Max (((( NumOfOptionsInCell  Max  countEmptyCellsInSquare_ThatNotContainsNum ) - ( countEmptyCellsInRows_ThatNotContainsNum  +  NumOfOptionsInCell )) / (( countEmptyCellInRow  Max  countEmptyCellsInRows_ThatNotContainsNum ) - ( countEmptyCellInRow  Min  countEmptyCellsInColsContainsNum ))) * ((( countEmptyCellsInRows_ThatNotContainsNum  +  numOfOptionsToAppearInBoard ) Max ( countEmptyCellsInSquare_ThatNotContainsNum  Max  countEmptyCellInRow )) - (( countEmptyCellsInRows_ThatNotContainsNum  Max  countEmptyCellsInSquare_ThatNotContainsNum ) Min ( countEmptyCellInRow  Min  NumOfOptionsInCell ))))),
23,17.0,2.0,7.77,Minimum( Multi( Minimum( Plus( Mod( NumOfOptionsInCell  countEmptyCellInCol )  Mod( countEmptyCellsInSquareContainsNum  countEmptyCellsInRowsContainsNum ) )  Mod( Plus( countEmptyCellInRow  NumOfOptionsInCell )  Plus( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) ) )  Plus( Minus( div( countEmptyCellsInCols_ThatNotContainsNum  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInRowsContainsNum  NumOfOptionsInCell ) )  Plus( Minus( countEmptyCellsInSquareContainsNum  countEmptyCellsInColsContainsNum )  Plus( countEmptyCellInSquare  NumOfOptionsInCell ) ) ) )  Multi( Minimum( Plus( Multi( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInColsContainsNum )  Mod( countEmptyCellsInSquareContainsNum  countEmptyCellsInRowsContainsNum ) )  Mod( Plus( countEmptyCellInRow  NumOfOptionsInCell )  Plus( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) ) )  Plus( Minus( div( countEmptyCellsInCols_ThatNotContainsNum  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInRowsContainsNum  NumOfOptionsInCell ) )  Plus( Minus( countEmptyCellsInSquareContainsNum  countEmptyCellsInColsContainsNum )  Plus( countEmptyCellInSquare  NumOfOptionsInCell ) ) ) ) ),((((( NumOfOptionsInCell  %  countEmptyCellInCol ) + ( countEmptyCellsInSquareContainsNum  %  countEmptyCellsInRowsContainsNum )) Min (( countEmptyCellInRow  +  NumOfOptionsInCell ) % ( countEmptyCellsInRows_ThatNotContainsNum  +  countEmptyCellsInCols_ThatNotContainsNum ))) * ((( countEmptyCellsInCols_ThatNotContainsNum  /  numOfOptionsToAppearInBoard ) - ( countEmptyCellsInRowsContainsNum  *  NumOfOptionsInCell )) + (( countEmptyCellsInSquareContainsNum  -  countEmptyCellsInColsContainsNum ) + ( countEmptyCellInSquare  +  NumOfOptionsInCell )))) Min (((( countEmptyCellsInCols_ThatNotContainsNum  *  countEmptyCellsInColsContainsNum ) + ( countEmptyCellsInSquareContainsNum  %  countEmptyCellsInRowsContainsNum )) Min (( countEmptyCellInRow  +  NumOfOptionsInCell ) % ( countEmptyCellsInRows_ThatNotContainsNum  +  countEmptyCellsInCols_ThatNotContainsNum ))) * ((( countEmptyCellsInCols_ThatNotContainsNum  /  numOfOptionsToAppearInBoard ) - ( countEmptyCellsInRowsContainsNum  *  NumOfOptionsInCell )) + (( countEmptyCellsInSquareContainsNum  -  countEmptyCellsInColsContainsNum ) + ( countEmptyCellInSquare  +  NumOfOptionsInCell ))))),
24,18.0,2.0,7.25,Plus( Multi( Minus( Multi( Plus( countEmptyCellsInColsContainsNum  countEmptyCellsInSquareContainsNum )  Minus( countEmptyCellsInSquareContainsNum  countEmptyCellsInSquareContainsNum ) )  Minus( Minimum( numOfOptionsToAppearInBoard  countEmptyCellsInRows_ThatNotContainsNum )  Plus( countEmptyCellsInColsContainsNum  countEmptyCellsInSquareContainsNum ) ) )  Minus( Minimum( Minimum( countEmptyCellsInColsContainsNum  countEmptyCellInSquare )  Minimum( NumOfOptionsInCell  countEmptyCellInSquare ) )  div( Maximum( countEmptyCellInSquare  countEmptyCellsInSquareContainsNum )  Maximum( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellInRow ) ) ) )  Maximum( div( div( Maximum( countEmptyCellsInRowsContainsNum  countEmptyCellInSquare )  Minus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInColsContainsNum ) )  Minimum( Minus( countEmptyCellsInRowsContainsNum  countEmptyCellInRow )  Minus( countEmptyCellInSquare  NumOfOptionsInCell ) ) )  Mod( Maximum( Minus( countEmptyCellsInSquareContainsNum  countEmptyCellsInColsContainsNum )  Minus( countEmptyCellInCol  countEmptyCellsInSquareContainsNum ) )  Mod( div( numOfOptionsToAppearInBoard  countEmptyCellInRow )  Mod( countEmptyCellInCol  countEmptyCellsInSquareContainsNum ) ) ) ) ),((((( countEmptyCellsInColsContainsNum  +  countEmptyCellsInSquareContainsNum ) * ( countEmptyCellsInSquareContainsNum  -  countEmptyCellsInSquareContainsNum )) - (( numOfOptionsToAppearInBoard  Min  countEmptyCellsInRows_ThatNotContainsNum ) - ( countEmptyCellsInColsContainsNum  +  countEmptyCellsInSquareContainsNum ))) * ((( countEmptyCellsInColsContainsNum  Min  countEmptyCellInSquare ) Min ( NumOfOptionsInCell  Min  countEmptyCellInSquare )) - (( countEmptyCellInSquare  Max  countEmptyCellsInSquareContainsNum ) / ( countEmptyCellsInSquare_ThatNotContainsNum  Max  countEmptyCellInRow )))) + (((( countEmptyCellsInRowsContainsNum  Max  countEmptyCellInSquare ) / ( countEmptyCellsInCols_ThatNotContainsNum  -  countEmptyCellsInColsContainsNum )) / (( countEmptyCellsInRowsContainsNum  -  countEmptyCellInRow ) Min ( countEmptyCellInSquare  -  NumOfOptionsInCell ))) Max ((( countEmptyCellsInSquareContainsNum  -  countEmptyCellsInColsContainsNum ) Max ( countEmptyCellInCol  -  countEmptyCellsInSquareContainsNum )) % (( numOfOptionsToAppearInBoard  /  countEmptyCellInRow ) % ( countEmptyCellInCol  %  countEmptyCellsInSquareContainsNum ))))),
25,17.0,2.0,7.7,Maximum( Multi( div( Minus( Maximum( NumOfOptionsInCell  countEmptyCellsInSquare_ThatNotContainsNum )  Plus( countEmptyCellsInRows_ThatNotContainsNum  NumOfOptionsInCell ) )  Minus( Maximum( countEmptyCellInRow  countEmptyCellsInRows_ThatNotContainsNum )  Minimum( countEmptyCellInRow  countEmptyCellsInColsContainsNum ) ) )  Minimum( Maximum( Minus( countEmptyCellInSquare  countEmptyCellsInCols_ThatNotContainsNum )  Minus( countEmptyCellInCol  countEmptyCellsInRows_ThatNotContainsNum ) )  Minus( Mod( NumOfOptionsInCell  NumOfOptionsInCell )  Minimum( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) ) ) )  Multi( Minimum( Plus( Mod( NumOfOptionsInCell  countEmptyCellInCol )  Mod( countEmptyCellsInSquareContainsNum  countEmptyCellsInRowsContainsNum ) )  Mod( Plus( countEmptyCellInRow  NumOfOptionsInCell )  Plus( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) ) )  Plus( Minus( div( countEmptyCellsInCols_ThatNotContainsNum  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInRowsContainsNum  NumOfOptionsInCell ) )  Plus( Minus( countEmptyCellsInSquareContainsNum  countEmptyCellsInColsContainsNum )  Plus( countEmptyCellInSquare  NumOfOptionsInCell ) ) ) ) ),((((( NumOfOptionsInCell  Max  countEmptyCellsInSquare_ThatNotContainsNum ) - ( countEmptyCellsInRows_ThatNotContainsNum  +  NumOfOptionsInCell )) / (( countEmptyCellInRow  Max  countEmptyCellsInRows_ThatNotContainsNum ) - ( countEmptyCellInRow  Min  countEmptyCellsInColsContainsNum ))) * ((( countEmptyCellInSquare  -  countEmptyCellsInCols_ThatNotContainsNum ) Max ( countEmptyCellInCol  -  countEmptyCellsInRows_ThatNotContainsNum )) Min (( NumOfOptionsInCell  %  NumOfOptionsInCell ) - ( countEmptyCellsInCols_ThatNotContainsNum  Min  countEmptyCellsInRowsContainsNum )))) Max (((( NumOfOptionsInCell  %  countEmptyCellInCol ) + ( countEmptyCellsInSquareContainsNum  %  countEmptyCellsInRowsContainsNum )) Min (( countEmptyCellInRow  +  NumOfOptionsInCell ) % ( countEmptyCellsInRows_ThatNotContainsNum  +  countEmptyCellsInCols_ThatNotContainsNum ))) * ((( countEmptyCellsInCols_ThatNotContainsNum  /  numOfOptionsToAppearInBoard ) - ( countEmptyCellsInRowsContainsNum  *  NumOfOptionsInCell )) + (( countEmptyCellsInSquareContainsNum  -  countEmptyCellsInColsContainsNum ) + ( countEmptyCellInSquare  +  NumOfOptionsInCell ))))),
26,20.0,2.0,7.16,Maximum( Multi( div( Minus( Maximum( NumOfOptionsInCell  countEmptyCellsInSquare_ThatNotContainsNum )  Plus( countEmptyCellsInRows_ThatNotContainsNum  NumOfOptionsInCell ) )  Minus( Maximum( countEmptyCellInRow  countEmptyCellsInRows_ThatNotContainsNum )  Minimum( countEmptyCellInRow  countEmptyCellsInColsContainsNum ) ) )  Minimum( Maximum( Minus( countEmptyCellInSquare  countEmptyCellsInCols_ThatNotContainsNum )  Minus( countEmptyCellInCol  countEmptyCellsInRows_ThatNotContainsNum ) )  Minus( Mod( NumOfOptionsInCell  NumOfOptionsInCell )  Minimum( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) ) ) )  Multi( Minimum( Plus( Mod( NumOfOptionsInCell  countEmptyCellInCol )  Mod( countEmptyCellsInSquareContainsNum  countEmptyCellsInRowsContainsNum ) )  Mod( Plus( countEmptyCellInRow  NumOfOptionsInCell )  Plus( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) ) )  Plus( Minus( div( countEmptyCellsInCols_ThatNotContainsNum  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInRowsContainsNum  NumOfOptionsInCell ) )  Plus( Minus( countEmptyCellsInSquareContainsNum  countEmptyCellsInColsContainsNum )  Plus( countEmptyCellInSquare  NumOfOptionsInCell ) ) ) ) ),((((( NumOfOptionsInCell  Max  countEmptyCellsInSquare_ThatNotContainsNum ) - ( countEmptyCellsInRows_ThatNotContainsNum  +  NumOfOptionsInCell )) / (( countEmptyCellInRow  Max  countEmptyCellsInRows_ThatNotContainsNum ) - ( countEmptyCellInRow  Min  countEmptyCellsInColsContainsNum ))) * ((( countEmptyCellInSquare  -  countEmptyCellsInCols_ThatNotContainsNum ) Max ( countEmptyCellInCol  -  countEmptyCellsInRows_ThatNotContainsNum )) Min (( NumOfOptionsInCell  %  NumOfOptionsInCell ) - ( countEmptyCellsInCols_ThatNotContainsNum  Min  countEmptyCellsInRowsContainsNum )))) Max (((( NumOfOptionsInCell  %  countEmptyCellInCol ) + ( countEmptyCellsInSquareContainsNum  %  countEmptyCellsInRowsContainsNum )) Min (( countEmptyCellInRow  +  NumOfOptionsInCell ) % ( countEmptyCellsInRows_ThatNotContainsNum  +  countEmptyCellsInCols_ThatNotContainsNum ))) * ((( countEmptyCellsInCols_ThatNotContainsNum  /  numOfOptionsToAppearInBoard ) - ( countEmptyCellsInRowsContainsNum  *  NumOfOptionsInCell )) + (( countEmptyCellsInSquareContainsNum  -  countEmptyCellsInColsContainsNum ) + ( countEmptyCellInSquare  +  NumOfOptionsInCell ))))),
27,21.0,2.0,7.65,Maximum( Multi( div( Minus( Maximum( NumOfOptionsInCell  countEmptyCellsInSquare_ThatNotContainsNum )  Plus( countEmptyCellsInRows_ThatNotContainsNum  NumOfOptionsInCell ) )  Minus( Maximum( countEmptyCellInRow  countEmptyCellsInRows_ThatNotContainsNum )  Minimum( countEmptyCellInRow  countEmptyCellsInColsContainsNum ) ) )  Minus( Maximum( Plus( countEmptyCellsInRows_ThatNotContainsNum  numOfOptionsToAppearInBoard )  Maximum( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellInRow ) )  Minimum( Maximum( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInSquare_ThatNotContainsNum )  Minimum( countEmptyCellsInRows_ThatNotContainsNum  numOfOptionsToAppearInBoard ) ) ) )  Multi( Plus( Multi( Maximum( countEmptyCellInSquare  countEmptyCellsInSquare_ThatNotContainsNum )  Minimum( countEmptyCellInSquare  NumOfOptionsInCell ) )  div( Minimum( countEmptyCellsInCols_ThatNotContainsNum  NumOfOptionsInCell )  Minimum( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInColsContainsNum ) ) )  Plus( Maximum( Maximum( NumOfOptionsInCell  countEmptyCellsInColsContainsNum )  Mod( countEmptyCellInRow  countEmptyCellsInSquareContainsNum ) )  Minus( div( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInColsContainsNum )  Multi( countEmptyCellsInSquareContainsNum  countEmptyCellsInColsContainsNum ) ) ) ) ),((((( NumOfOptionsInCell  Max  countEmptyCellsInSquare_ThatNotContainsNum ) - ( countEmptyCellsInRows_ThatNotContainsNum  +  NumOfOptionsInCell )) / (( countEmptyCellInRow  Max  countEmptyCellsInRows_ThatNotContainsNum ) - ( countEmptyCellInRow  Min  countEmptyCellsInColsContainsNum ))) * ((( countEmptyCellsInRows_ThatNotContainsNum  +  numOfOptionsToAppearInBoard ) Max ( countEmptyCellsInSquare_ThatNotContainsNum  Max  countEmptyCellInRow )) - (( countEmptyCellsInRows_ThatNotContainsNum  Max  countEmptyCellsInSquare_ThatNotContainsNum ) Min ( countEmptyCellsInRows_ThatNotContainsNum  Min  numOfOptionsToAppearInBoard )))) Max (((( countEmptyCellInSquare  Max  countEmptyCellsInSquare_ThatNotContainsNum ) * ( countEmptyCellInSquare  Min  NumOfOptionsInCell )) + (( countEmptyCellsInCols_ThatNotContainsNum  Min  NumOfOptionsInCell ) / ( countEmptyCellsInSquare_ThatNotContainsNum  Min  countEmptyCellsInColsContainsNum ))) * ((( NumOfOptionsInCell  Max  countEmptyCellsInColsContainsNum ) Max ( countEmptyCellInRow  %  countEmptyCellsInSquareContainsNum )) + (( countEmptyCellsInSquare_ThatNotContainsNum  /  countEmptyCellsInColsContainsNum ) - ( countEmptyCellsInSquareContainsNum  *  countEmptyCellsInColsContainsNum ))))),
28,18.0,0.0,7.02,div( Multi( Plus( Multi( Maximum( countEmptyCellInSquare  countEmptyCellsInSquare_ThatNotContainsNum )  Minimum( countEmptyCellInSquare  NumOfOptionsInCell ) )  Maximum( Plus( countEmptyCellInSquare  countEmptyCellInRow )  Minus( NumOfOptionsInCell  countEmptyCellsInRowsContainsNum ) ) )  Plus( Maximum( Maximum( NumOfOptionsInCell  countEmptyCellsInColsContainsNum )  Mod( countEmptyCellInRow  countEmptyCellsInSquareContainsNum ) )  Minus( div( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInColsContainsNum )  Multi( countEmptyCellsInSquareContainsNum  countEmptyCellsInColsContainsNum ) ) ) )  Multi( Minimum( Mod( Multi( countEmptyCellInRow  countEmptyCellsInRowsContainsNum )  div( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  Multi( Mod( countEmptyCellInSquare  countEmptyCellsInRowsContainsNum )  Mod( numOfOptionsToAppearInBoard  countEmptyCellsInSquare_ThatNotContainsNum ) ) )  Minus( Mod( Mod( NumOfOptionsInCell  countEmptyCellInSquare )  div( countEmptyCellInCol  numOfOptionsToAppearInBoard ) )  Plus( Minus( countEmptyCellsInColsContainsNum  countEmptyCellInSquare )  div( countEmptyCellInRow  countEmptyCellsInSquareContainsNum ) ) ) ) ),((((( countEmptyCellInSquare  Max  countEmptyCellsInSquare_ThatNotContainsNum ) * ( countEmptyCellInSquare  Min  NumOfOptionsInCell )) + (( countEmptyCellInSquare  +  countEmptyCellInRow ) Max ( NumOfOptionsInCell  -  countEmptyCellsInRowsContainsNum ))) * ((( NumOfOptionsInCell  Max  countEmptyCellsInColsContainsNum ) Max ( countEmptyCellInRow  %  countEmptyCellsInSquareContainsNum )) + (( countEmptyCellsInSquare_ThatNotContainsNum  /  countEmptyCellsInColsContainsNum ) - ( countEmptyCellsInSquareContainsNum  *  countEmptyCellsInColsContainsNum )))) / (((( countEmptyCellInRow  *  countEmptyCellsInRowsContainsNum ) % ( countEmptyCellsInCols_ThatNotContainsNum  /  countEmptyCellsInRows_ThatNotContainsNum )) Min (( countEmptyCellInSquare  %  countEmptyCellsInRowsContainsNum ) * ( numOfOptionsToAppearInBoard  %  countEmptyCellsInSquare_ThatNotContainsNum ))) * ((( NumOfOptionsInCell  %  countEmptyCellInSquare ) % ( countEmptyCellInCol  /  numOfOptionsToAppearInBoard )) - (( countEmptyCellsInColsContainsNum  -  countEmptyCellInSquare ) + ( countEmptyCellInRow  /  countEmptyCellsInSquareContainsNum ))))),
